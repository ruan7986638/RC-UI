
<ui>
	<css name="$HeaderColorGeneral">
		<styleSheet value="h1
		{
			color: #FFFFFF;
		}"/>
	</css>
	<css name="$HeaderColorTeam">
		<styleSheet value="h1
		{
			color: #4ce8aa;
		}"/>
	</css>
	<css name="$HeaderColorDivision">
		<styleSheet value="h1
		{
			color: #ffcc66;
		}"/>
	</css>
	<block className="CombatLogPanel">
		<params>
			<param name="name" value="CombatLogPanel"/>
		</params>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'gameInfo'"/>
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="instance" value="'CombatLogPanelContent'; (gameInfo.gameModeId != GameMode.TUTORIAL) ? {} : null"/>
	</block>
	<block className="CombatLogPanelContent">
		<params>
			<param name="name" value="chat"/>
		</params>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="controller" value="lesta.dialogs.battle_window_controllers.uss_controllers.ControllerBattleStats"/>
		<bind name="action" value="'addedToStage'; 'battleChat.shown'; { }"/>
		<bind name="firstEntityDH" value="'battleChatEntity'; CC.battleChatAndLog"/>
		<bind name="watchDH" value="'isGloballyMuted';	['battleChatEntity.battleChatAndLog.evGloballyMutedChanged'];	battleChatEntity.battleChatAndLog.isGloballyMuted"/>
		<bind name="watchDH" value="'isInputFocused';	['battleChatEntity.battleChatAndLog.evIsInputFocusedChanged'];	battleChatEntity.battleChatAndLog.isInputFocused"/>
		<bind name="watchDH" value="'currentChannelId';	['battleChatEntity.battleChatAndLog.evChannelChanged'];			battleChatEntity.battleChatAndLog.currentChannelId"/>
		<bind name="var" value="{isChatExpanded: false, isOverMuteButton: false}"/>
		<bind name="var" value="{playerContextMenuVisible: false}"/>
		<bind name="catch" value="'playerContextMenuVisibleChanged'"/>
		<bind name="changeDispatch" value="isInputFocused;	'inputFocusInEvent';	{}; 2; true"/>
		<bind name="changeDispatch" value="isInputFocused;	'inputFocusOutEvent';	{}; 2; false"/>
		<bind name="handleEventDH" value="'battleChatEntity.battleChatAndLog.evMessageReceived'; 'newMessageEvent'; {}; 2"/>
		<bind name="changeDispatch" value="rollOver;						'delayedHideChatEvent';	{}; 2; false"/>
		<bind name="dispatch" value="'newMessageEvent';					'delayedHideChatEvent'; {}; 2"/>
		<bind name="dispatch" value="'inputFocusOutEvent';				'delayedHideChatEvent'; {}; 2"/>
		<bind name="dispatch" value="'playerContextMenuVisibleChanged';	'delayedHideChatEvent'; {}; 2"/>
		<bind name="dispatchDelayReset" value="'delayedHideChatEvent'; 'hideChatEvent'; {}; 2; 10"/>
		<bind name="changeDispatch" value="rollOver; 'onRollOverChanged'; {}; 2"/>
		<bind name="action" value="'onRollOverChanged'; 'battleChat.rollOverChanged'; { rollOver : rollOver }"/>
		<bind name="dispatch" value="'inputFocusInEvent'; 'showChatEvent'; {}; 0"/>
		<bind name="dispatch" value="'newMessageEvent';	isChatExpanded ? 'showChatEvent' : 'showChatWithAutoScrollEvent'; {}; 2"/>
		<bind name="catch" value="'showChatWithAutoScrollEvent';		{isChatExpanded: true}"/>
		<bind name="catch" value="'showChatEvent';		{isChatExpanded: true}"/>
		<bind name="catch" value="'hideChatEvent';		{isChatExpanded: (isInputFocused || rollOver || playerContextMenuVisible ? true : false)}"/>
		<bind name="firstEntityDH" value="'mouseEntity'; CC.mouse"/>
		<bind name="watchDH" value="'isCursorActive'; ['mouseEntity.mouse.evActiveChanged']; mouseEntity.mouse.active"/>
		<bind name="changeDispatch" value="isCursorActive; 'Tooltip.Close'; {}; 1; false"/>
		<style>
			<position value="absolute"/>
			<left value="10px"/>
			<bottom value="600px"/>
		</style>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="fade" value="isChatExpanded; 0.25; {alpha: 0}; {alpha: 1}; {alpha: 0}"/>
			<block className="chat_background" type="native">
				<params>
					<param name="name" value="backgroundClip"/>
				</params>
				<style>
					<position value="absolute"/>
					<left value="255px"/>
					<top value="256px"/>
					<width value="255px"/>
					<height value="200px"/>
					<hitTest value="false"/>
				</style>
				<bind name="rotation" value="180"/>
			</block>
			<block>
				<params>
					<param name="name" value="txa_output"/>
				</params>
				<style>
					<position value="absolute"/>
					<width value="255px"/>
					<height value="202px"/>
					<top value="52px"/>
					<scrollbar value="CombatChatScrollBar"/>
					<scrollbarAlign value="right"/>
					<scrollbarController value="lesta.unbound.style.UbScrollingControllerChat"/>
					<scrollArea value="ModernScrollArea"/>
					<scrollbarTrackMode value="scrollToCursor"/>
					<wheelScrollSpeed value="30"/>
					<overflow value="scroll"/>
					<layout value="lesta.unbound.layout.measure.CarouselVariableItemSizeLayout"/>
					<itemWidth value="255px"/>
					<itemHeight value="17px"/>
				</style>
				<bind name="controller" value="lesta.unbound.controls.ControllerAutoScroll"/>
				<bind name="event" value="'showChatWithAutoScrollEvent'; instantScrollToLastItem"/>
				<bind name="generatorDH" value="CC.battleChatAndLogMessage; 'CombatLogMessageRenderer'; 'sorted'; {_selfPlayer: selfPlayer}"/>
			</block>
		</block>
		<block>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; null; 'chatInput_'"/>
			<style>
				<position value="absolute"/>
				<height value="29px"/>
				<width value="261px"/>
				<left value="-3px"/>
				<top value="254px"/>
			</style>
			<bind name="transition" value="(!isGloballyMuted &amp;&amp; isInputFocused); 0.1; {alpha: 0.8}; {alpha: 1}; {alpha: 0.8}"/>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="transition" value="chatInput_rollOver || (!isGloballyMuted &amp;&amp; isInputFocused); 0.1; {alpha: 0.6}; {alpha: 1}; {alpha: 0.6}"/>
				<block className="chat_input_background" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="gotoAndStop!" value="isInputFocused ? 'focused' : 'default'"/>
				</block>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<top value="4px"/>
						<marginLeft value="6px"/>
						<marginRight value="4px"/>
					</style>
					<bind name="visible" value="isGloballyMuted ? 0 : 1"/>
					<params>
						<param name="name" value="txaHeader"/>
					</params>
					<block type="text">
						<style>
							<hitTest value="false"/>
						</style>
						<styleClass value="$TextSecondaryBold"/>
						<bind name="class" value="	currentChannelId == BattleChatChannelType.TEAM		? '$HeaderColorTeam' :
									currentChannelId == BattleChatChannelType.DIVISION	? '$HeaderColorDivision'
																								: '$HeaderColorGeneral'"/>
						<bind name="text" value="currentChannelId == BattleChatChannelType.TEAM		? '&lt;body&gt;&lt;h1&gt;' + tr('IDS_BATTLE_CHAT_TEAM') + ':&lt;/h1&gt;&lt;/body&gt;' :
								currentChannelId == BattleChatChannelType.DIVISION	? '&lt;body&gt;&lt;h1&gt;' + tr('IDS_LOBBY_CHAT_DIVISION') + ':&lt;/h1&gt;&lt;/body&gt;'
																							: '&lt;body&gt;&lt;h1&gt;' + tr('IDS_BATTLE_CHAT_GENERAL') + ':&lt;/h1&gt;&lt;/body&gt;'"/>
					</block>
					<block className="battle_chat_text_area_input" type="native">
						<params>
							<param name="name" value="txa_input"/>
						</params>
						<bind name="controller" value="lesta.dialogs.battle_window_controllers.uss_controllers.UbBattleChatInputController"/>
						<bind name="visible" value="!isGloballyMuted"/>
						<bind name="enabled" value="!isGloballyMuted"/>
						<style>
							<width value="100%"/>
						</style>
						<params>
							<param name="tabEnabled" value="false"/>
							<param name="focusable" value="true"/>
						</params>
						<bind name="focus" value="1; false"/>
						<bind name="action" value="'focusInFromController'; 'battleChat.inputFocusChanged'; { focused: true }"/>
						<bind name="action" value="'focusOutFromController'; 'battleChat.inputFocusChanged'; { focused: false }"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<top value="260px"/>
				<left value="259px"/>
			</style>
			<bind name="instance" value="'VoiceChatOutgoingIcon'; {_isInBattle: true, _isSpeaking: selfPlayer.isSpeaking}"/>
		</block>
		<block type="text">
			<params>
				<param name="name" value="chatDisabledLabel"/>
			</params>
			<style>
				<position value="absolute"/>
				<hitTest value="false"/>
				<left value="4px"/>
				<top value="258px"/>
			</style>
			<styleClass value="$TextSecondary"/>
			<bind name="visible" value="isGloballyMuted"/>
			<text value="IDS_CHAT_SWITCH_ON"/>
		</block>
		<block className="button_mute" type="native">
			<params>
				<param name="name" value="mute_button"/>
			</params>
			<style>
				<position value="absolute"/>
				<top value="284px"/>
			</style>
			<bind name="catch" value="'rollOver'; {isOverMuteButton: true}"/>
			<bind name="catch" value="'rollOut'; {isOverMuteButton: false}"/>
			<bind name="catch" value="'click'; {isOverMuteButton: isOverMuteButton &amp;&amp; !isGloballyMuted}"/>
			<bind name="selected" value="isGloballyMuted"/>
			<bind name="visible" value="isOverMuteButton || isInputFocused || isGloballyMuted"/>
			<bind name="action" value="'click'; 'battleChat.globalMuteChanged'; { isMuted: !isGloballyMuted }"/>
			<bind name="tooltip" value="'MouseInstructionTooltip'; { _multiParagraphArray: [{_paragraphText: isGloballyMuted ? 'IDS_CHAT_ENABLE_HINT' : 'IDS_CHAT_DISABLE_HINT'}],
													_isInBattle: true}"/>
		</block>
		<block className="txtQuickChatHelp" type="native">
			<params>
				<param name="name" value="txtChatHelp"/>
			</params>
			<bind name="visible" value="isInputFocused &amp;&amp; !isGloballyMuted"/>
			<style>
				<position value="absolute"/>
				<left value="55px"/>
				<top value="285px"/>
				<hitTest value="false"/>
			</style>
			<bind name="text" value="'IDS_TAB_CHANGE_CHANNEL'"/>
		</block>
	</block>
	<block className="CombatLogMessageRenderer">
		<bind name="name" value="'MessageListItem_txa_output_' + $index"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'gameInfo'"/>
		<bind name="dataRefDH" value="'messageEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'avatarId'; []; messageEntity.battleChatAndLogMessage.avatarId"/>
		<bind name="primaryEntityDH" value="'playerEntity'; CC.avatar; avatarId"/>
		<bind name="watchDH" value="'relation'; ['playerEntity.relation.evChanged']; playerEntity.relation.value"/>
		<bind name="watch" value="'isSelf'; (relation == 0)"/>
		<bind name="watch" value="'isSysLogMessage'; (playerEntity == null)"/>
		<bind name="watch" value="'isContextMenuAvailable'; !(isSelf || isSysLogMessage || isBot)"/>
		<bind name="watchDH" value="'name'; 				[]; playerEntity.avatar.name"/>
		<bind name="watchDH" value="'pureName';			[]; playerEntity.avatar.pureName"/>
		<bind name="watchDH" value="'ttkStatus'; 		['playerEntity.avatar.evTTKStatusChanged']; playerEntity.avatar.ttkStatus"/>
		<bind name="watchDH" value="'tkStatus'; 			['playerEntity.avatar.evTeamkillStatusChanged']; playerEntity.avatar.tkStatus"/>
		<bind name="watchDH" value="'isInSameDivision';	['playerEntity.avatar.evDivisionChanged']; playerEntity.avatar.isInSameDivision"/>
		<bind name="watchDH" value="'isDivisionCommander';	['playerEntity.avatar.evIsDivisionCommanderUpdated']; playerEntity.avatar.isDivisionCommander"/>
		<bind name="primaryEntityDH" value="'playerVoiceChatEntity'; CC.playerVoiceState; pureName"/>
		<bind name="watch" value="'isInVoiceChat'; playerVoiceChatEntity != null"/>
		<bind name="watchDH" value="'isMuted'; 			['playerVoiceChatEntity.playerVoiceState.evIsMutedChanged']; playerVoiceChatEntity.playerVoiceState.isMuted"/>
		<bind name="watchDH" value="'inviteCooldown'; 	['playerEntity.avatar.evInviteCooldownChanged']; playerEntity.avatar.inviteCooldown"/>
		<bind name="watchDH" value="'division'; 			['playerEntity.avatar.evDivisionChanged']; playerEntity.avatar.division"/>
		<bind name="watchDH" value="'isAlive'; 			['playerEntity.health.evKilled']; playerEntity.health.isAlive"/>
		<bind name="watchDH" value="'invitationsEnabled';['playerEntity.avatar.evInvitationsEnabledChanged']; playerEntity.avatar.invitationsEnabled"/>
		<bind name="watchDH" value="'inviteCooldownEnabled'; 	['playerEntity.avatar.evInviteCooldownEnabledChanged']; playerEntity.avatar.inviteCooldownEnabled"/>
		<bind name="watchDH" value="'isLeaver';			['playerEntity.avatar.evIsLeaverChanged']; playerEntity.avatar.isLeaver"/>
		<bind name="watchDH" value="'playerId'; 			[]; playerEntity.avatar.id"/>
		<bind name="watchDH" value="'mute';				['playerEntity.avatar.evMuteChanged']; playerEntity.avatar.mute"/>
		<bind name="watchDH" value="'isInSameDivisionOnStart'; []; playerEntity.avatar.isInSameDivisionOnStart"/>
		<bind name="watchDH" value="'isBot'; []; playerEntity.avatar.isBot"/>
		<bind name="firstEntityDH" value="'battleChatEntity'; CC.battleChatAndLog"/>
		<bind name="watch" value="'player'; {
							relation: relation,
							name: name,
							pureName: pureName,
							ttkStatus: ttkStatus,
							tkStatus: tkStatus,
							isInSameDivision: isInSameDivision,
							isDivisionCommander: isDivisionCommander,
							isInVoiceChat: isInVoiceChat,
							isMuted: isMuted,
							inviteCooldown: inviteCooldown,
							division: division,
							isAlive: isAlive,
							invitationsEnabled: invitationsEnabled,
							inviteCooldownEnabled: inviteCooldownEnabled,
							isLeaver: isLeaver,
							id: playerId,
							mute: mute,
							isInSameDivisionOnStart: playerEntity.avatar.isInSameDivisionOnStart
		}"/>
		<bind name="menu" value="'UIListPlayerContextMenu'; isContextMenuAvailable	?	{_player: player, _selfPlayer: _selfPlayer, _battleType: gameInfo.battleType,
																			_complaintsAvailable: true, _isBattleStats: true}
																	:	null; null; 'contextMenuVisible'"/>
		<bind name="tooltip" value="'BattlePlayerTooltip'; {	_isInBattle: true,
											_player: player, _selfPlayer: _selfPlayer,
											_battleType: gameInfo.battleType}"/>
		<bind name="changeDispatch" value="contextMenuVisible;	'playerContextMenuVisibleChanged';	{playerContextMenuVisible: contextMenuVisible}; 0"/>
		<style>
			<width value="100%"/>
		</style>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="style" value="'hitTest'; isContextMenuAvailable == true"/>
			<bind name="selected" value="contextMenuVisible"/>
		</block>
		<block type="text">
			<style>
				<width value="100%"/>
				<marginTop value="-1px"/>
				<marginLeft value="4px"/>
				<marginRight value="4px"/>
				<leading value="-3"/>
				<fontSize value="15"/>
				<hitTest value="false"/>
			</style>
			<style>
				<styleSheet value="
				.ally {
					color: #4ce8aa;
				}
				.enemy {
					color: #ff3600;
				}
				.self {
					color: #ffcc66;
				}
			"/>
			</style>
			<styleClass value="$FontFamilyDefault"/>
			<bind name="text" value="messageEntity.battleChatAndLogMessage.htmlText"/>
			<bind name="substitute" value="''; 5; battleChatEntity.battleChatAndLog.substitutions"/>
		</block>
	</block>
	<block className="DogTagInHUD">
		<styleClass value="$FullsizeAbsolute"/>
		<style>
			<align value="center|middle"/>
		</style>
		<block>
			<style>
				<width value="190px"/>
				<height value="190px"/>
			</style>
			<bind name="instance" value="'DogTagInHUDContent'; {}"/>
		</block>
	</block>
	<block className="DogTagInHUDContent">
		<styleClass value="$Fullsize"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'dogTagList';['entityAccount.dogTagView.evComponentsChanged']; entityAccount.dogTagView.components"/>
		<bind name="collectionDH" value="CC.dogTagComponent; 'dogtagview'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'dogtagview'+'ROOT'; 'dogtagview'; {'filter':(dogTagList.indexOf(toLowerCase($entity.dogTagComponent.id)) &gt; -1), 'sort':['dogTagComponent.categoryId']}; []"/>
		<bind name="firstEntityDH" value="'selfAvatarEntity'; CC.playerAvatar"/>
		<bind name="watchDH" value="'playerIsAlive'; ['selfAvatarEntity.playerAvatar.evKilled']; selfAvatarEntity.playerAvatar.isAlive"/>
		<bind name="watchDH" value="'killerId'; ['selfAvatarEntity.health.evKillerIdChanged']; selfAvatarEntity.health.killerId"/>
		<bind name="primaryEntityDH" value="'killerEntity'; CC.avatar; killerId"/>
		<bind name="watchDH" value="'enemyName'; ['killerEntity.accountName.evChanged']; killerEntity.accountName.name"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="instance" value="'BattleKillerDogTag'; (!playerIsAlive) &amp;&amp; (killerId != 0) ? {_killerId: killerId, _enemyName: enemyName} : null"/>
		</block>
	</block>
	<block className="BattleKillerDogTag">
		<bind name="dispatch" value="'addedToStage'; 'hideDogTagEv'; {}; 2; 12"/>
		<bind name="catch" value="'hideDogTagEv'; {dogTagVisible: false}"/>
		<bind name="appear" value="'addedToStage'; 1; 0.5; {alpha: 0}; {alpha: 1}"/>
		<bind name="appear" value="'hideDogTagEv'; 1; 0.5; {alpha: 1}; {alpha: 0}"/>
		<bind name="primaryEntityDH" value="'killerEntity'; CC.avatar; _killerId"/>
		<bind name="watchDH" value="'playerDbId'; [] ; killerEntity.accountSimple.dbId "/>
		<style>
			<width value="190px"/>
			<height value="190px"/>
		</style>
		<bind name="repeat" value="killerEntity.dogTagView.components; 'DogTagViewImageItemAvatar'; {_playerDbId : playerDbId}"/>
		<block>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<style>
				<top value="190px"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultBold21NM"/>
				<style>
					<textColor value="0xfd7054"/>
				</style>
				<bind name="text" value="subst('IDS_DOGTAG_HUD_SHIP_IS_DEAD', [], {enemyName: tr(_enemyName)})"/>
			</block>
		</block>
	</block>
	<block className="DogTagViewImageItemAvatar">
		<bind name="primaryEntityDH" value="'entity'; CC.dogTagComponent; $value"/>
		<bind name="watchDH" value="'enabled'; ['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.enabled"/>
		<bind name="watchDH" value="'iconPath'; ['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.iconPath"/>
		<style>
			<width value="190px"/>
			<height value="190px"/>
			<backgroundStretchX value="true"/>
			<backgroundStretchY value="true"/>
			<position value="absolute"/>
		</style>
		<bind name="style" value="'backgroundImage'; 'url:../dogTags/medium/' + iconPath"/>
		<bind name="name" value="'dogTagBattle_' + $index + '_' + entity.dogTagComponent.gpName"/>
		<bind name="primaryEntityDH" value="'playerEntity'; CC.accountSimple; _playerDbId"/>
		<bind name="watchDH" value="'clanId'; ['playerEntity.clanman.evClanIdChanged']; playerEntity.clanman.clanId"/>
		<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
		<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
		<bind name="watchDH" value="'clanTagOffsetX';['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.clanTagOffsetX"/>
		<bind name="watchDH" value="'clanTagOffsetY';['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.clanTagOffsetY"/>
		<bind name="watchDH" value="'clanTagFont';['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.clanTagFont"/>
		<bind name="watchDH" value="'clanTagVisible';['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.clanTagVisible"/>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="style" value="'top'; clanTagOffsetY + '%'"/>
			<bind name="style" value="'left'; clanTagOffsetX + '%'"/>
			<block>
				<style>
					<position value="absolute"/>
					<marginLeft value="-50%"/>
					<marginTop value="-50%"/>
				</style>
				<bind name="visible" value="clanTagVisible"/>
				<bind name="atlasText" value="clanTagVisible ?  (clanTag ? '[' + clanTag + ']' : '^') : '' ; '../fonts/medium/' + clanTagFont; 0"/>
			</block>
		</block>
	</block>
	<block className="DogTagInHUDSpectator">
		<styleClass value="$FullsizeAbsolute"/>
		<block>
			<style>
				<bottom value="30px"/>
				<left value="30px"/>
				<width value="190px"/>
				<height value="190px"/>
			</style>
			<bind name="firstEntityDH" value="'cameraEntity'; CC.camera"/>
			<bind name="watchDH" value="'observedShipId';['cameraEntity.camera.evObservedShipChanged']; cameraEntity.camera.observedShipId"/>
			<bind name="primaryEntityDH" value="'vehicleEntity'; CC.vehicle; observedShipId"/>
			<bind name="watchDH" value="'vehicleAvatarId'; []; vehicleEntity.accountSimple.dbId"/>
			<bind name="var" value="{currentDogTag:[]}"/>
			<bind name="catch" value="'changeCurrentDogTag'"/>
			<bind name="dispatch" value="'vehicleEntity'+varChanged; vehicleEntity != null ? 'changeCurrentDogTag' : ''; {currentDogTag:vehicleEntity.dogTagView.components}; 0; 0"/>
			<bind name="firstEntityDH" value="'selfAvatarEntity'; CC.playerAvatar"/>
			<bind name="watchDH" value="'selfAvatarId'; []; selfAvatarEntity.accountSimple.dbId"/>
			<bind name="watchDH" value="'killerId'; ['selfAvatarEntity.health.evKillerIdChanged']; selfAvatarEntity.health.killerId"/>
			<bind name="watchDH" value="'isDead'; ['selfAvatarEntity.playerAvatar.evKilled']; !selfAvatarEntity.playerAvatar.isAlive"/>
			<bind name="watch" value="'isVisible'; isDead &amp;&amp; (killerId != 0)"/>
			<bind name="fade" value="isVisible; 0.2; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1; 0.2"/>
			<bind name="repeat" value=" (currentDogTag.length &gt; 0) ? currentDogTag : selfAvatarEntity.dogTagView.components; 'DogTagViewImageItemAvatarSpectator';
		{_playerDbId : ((currentDogTag.length &gt; 0) ? vehicleAvatarId : selfAvatarId)}"/>
		</block>
	</block>
	<block className="DogTagViewImageItemAvatarSpectator">
		<bind name="primaryEntityDH" value="'entity'; CC.dogTagComponent; $value"/>
		<bind name="watchDH" value="'iconPath'; ['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.iconPath"/>
		<style>
			<width value="190px"/>
			<height value="190px"/>
			<backgroundStretchX value="true"/>
			<backgroundStretchY value="true"/>
			<position value="absolute"/>
		</style>
		<bind name="style" value="'backgroundImage'; 'url:../dogTags/medium/' + iconPath"/>
		<bind name="primaryEntityDH" value="'playerEntity'; CC.accountSimple; _playerDbId"/>
		<bind name="watchDH" value="'clanId'; ['playerEntity.clanman.evClanIdChanged']; playerEntity.clanman ? playerEntity.clanman.clanId : 0"/>
		<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
		<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
		<bind name="watchDH" value="'clanTagOffsetX';['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.clanTagOffsetX"/>
		<bind name="watchDH" value="'clanTagOffsetY';['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.clanTagOffsetY"/>
		<bind name="watchDH" value="'clanTagFont';['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.clanTagFont"/>
		<bind name="watchDH" value="'clanTagVisible';['entity.dogTagComponent.evUpdate']; entity.dogTagComponent.clanTagVisible"/>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="style" value="'top'; clanTagOffsetY + '%'"/>
			<bind name="style" value="'left'; clanTagOffsetX + '%'"/>
			<block>
				<style>
					<position value="absolute"/>
					<marginLeft value="-50%"/>
					<marginTop value="-50%"/>
				</style>
				<bind name="visible" value="clanTagVisible"/>
				<bind name="atlasText" value="clanTagVisible ?  (clanTag ? '[' + clanTag + ']' : '^') : '' ; '../fonts/medium/' + clanTagFont; 0"/>
			</block>
		</block>
	</block>
	<block className="FogHornIndicator">
		<styleClass value="$FullsizeAbsolute"/>
		<block>
			<bind name="visible" value="hearFoghorn"/>
			<style>
				<bottom value="308px"/>
				<left value="9px"/>
				<width value="257px"/>
				<position value="absolute"/>
				<alpha value="0"/>
			</style>
			<bind name="transition" value="isHorning; 0.4; {alpha: 0}; {alpha: 1}; 0; 0"/>
			<bind name="transition" value="isRegenerating; 1.6; {alpha: 1}; {alpha: 0}; {}; 0; 4"/>
			<bind name="firstEntityDH" value="'prefs'; CC.prefsMarker"/>
			<bind name="watchDH" value="'hearFoghorn'; ['prefs.prefsBattle.evUpdate']; prefs.prefsBattle.hearFoghorn"/>
			<bind name="firstEntityDH" value="'selfVehicleEntity'; CC.selfVehicle"/>
			<bind name="watchDH" value="'foghornMaxValue';		[''];	selfVehicleEntity.fogHorn.max"/>
			<bind name="watchDH" value="'foghornMaxRegenTime';	[''];	selfVehicleEntity.fogHorn.maxRegenTime"/>
			<bind name="watchDH" value="'foghornValue';	['selfVehicleEntity.fogHorn.evFoghornStateChanged'];	selfVehicleEntity.fogHorn.value"/>
			<bind name="watchDH" value="'isHorning';	['selfVehicleEntity.fogHorn.evFoghornStateChanged'];	selfVehicleEntity.fogHorn.isHorning"/>
			<bind name="watchDH" value="'isRegenerating';	['selfVehicleEntity.fogHorn.evFoghornStateChanged'];	selfVehicleEntity.fogHorn.isRegenerating"/>
			<bind name="watch" value="'progressBarWidth'; ((foghornValue / foghornMaxValue) * 257)"/>
			<block className="indicator_progress_bar_lightgreen" type="native">
				<style>
					<width value="100%"/>
				</style>
				<bind name="value" value="0"/>
				<bind name="maximum" value="1"/>
			</block>
			<block>
				<style>
					<height value="2px"/>
					<marginTop value="1px"/>
					<backgroundColor value="0xFF3af9d2"/>
					<position value="absolute"/>
				</style>
				<bind name="style" value="'width'; progressBarWidth + 'px'"/>
				<bind name="transition" value="isRegenerating; (foghornMaxRegenTime - (foghornValue / foghornMaxValue) * foghornMaxRegenTime); {width: progressBarWidth}; {width: 257}; 0; 0"/>
				<bind name="transition" value="isHorning; foghornValue; {width: progressBarWidth}; {width: 0}; 0; 0"/>
			</block>
		</block>
	</block>
	<block className="HeaderShipList">
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'gameInfo'"/>
		<bind name="collectionDH" value="CC.avatar; 'allyCollection'; 'team.ally.sortedLeftTeam'"/>
		<bind name="firstEntityDH" value="'selfAvatarEntity'; CC.playerAvatar"/>
		<bind name="watch" value="'selfAvatarEntityId'; selfAvatarEntity.id"/>
		<bind name="entityDH" value="'selfAvatarEntity'; selfAvatarEntityId"/>
		<bind name="watchDH" value="'playerIsAlive'; ['selfAvatarEntity.health.evKilled']; selfAvatarEntity.health.isAlive"/>
		<bind name="watchDH" value="'killerId'; ['selfAvatarEntity.health.evKillerIdChanged']; selfAvatarEntity.health.killerId"/>
		<bind name="primaryEntityDH" value="'killerEntity'; CC.avatar; killerId"/>
		<block>
			<bind name="visible" value="gameInfo.gameModeId != GameMode.TUTORIAL"/>
			<style>
				<top value="15px"/>
				<left value="50%"/>
				<position value="absolute"/>
			</style>
			<block>
				<style>
					<height value="20px"/>
					<position value="absolute"/>
				</style>
				<bind name="watch" value="'paddingLeft'; (gameInfo.gameModeId != GameMode.PVE) ? '-50px' : (30 + ((allyCollection.length-1) * 26)) * 0.5 - 30)"/>
				<bind name="style" value="'left';  paddingLeft"/>
				<bind name="collectionRepeatDH" value="CC.avatar; 'HeaderShipListRenderer'; 'team.ally.sortedLeftTeam'; {_isAllyTeam: true, _isEnemyTeam: false}"/>
			</block>
			<block>
				<bind name="visible" value="gameInfo.gameModeId != GameMode.PVE"/>
				<style>
					<height value="20px"/>
					<left value="20px"/>
					<position value="absolute"/>
				</style>
				<bind name="collectionRepeatDH" value="CC.avatar; 'HeaderShipListRenderer'; 'team.enemy.sortedRightTeam'; {_isAllyTeam: false, _isEnemyTeam: true}"/>
			</block>
		</block>
	</block>
	<block className="HeaderShipListRenderer">
		<bind name="name" value="'HeaderIconShip_'+ (_isAllyTeam ? 'Ally_' : 'Enemy_') + $index"/>
		<bind name="dataRefDH" value="'playerEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'relation'; 			['playerEntity.relation.evChanged']; playerEntity.relation.value"/>
		<bind name="watchDH" value="'isAlive'; 			['playerEntity.health.evKilled']; playerEntity.health.isAlive"/>
		<bind name="watchDH" value="'tkStatus'; 			['playerEntity.avatar.evTeamkillStatusChanged']; playerEntity.avatar.tkStatus"/>
		<bind name="watchDH" value="'rawShipSubtype';	[]; playerEntity.avatar.ship.ref.ship.subtype"/>
		<bind name="watchDH" value="'ttkStatus'; 		['playerEntity.avatar.evTTKStatusChanged']; playerEntity.avatar.ttkStatus"/>
		<bind name="watchDH" value="'isInSameDivision'; 	['playerEntity.avatar.evDivisionChanged']; playerEntity.avatar.isInSameDivision"/>
		<bind name="watchDH" value="'flags'; 			['playerEntity.target.evChanged']; playerEntity.target.flags"/>
		<bind name="watch" value="'isSelf'; (relation == 0)"/>
		<bind name="handleEventDH" value="'playerEntity.avatarAnimation.evPlayDeathAnimation'; 'evItemDeath'"/>
		<bind name="handleEventDH" value="'playerEntity.avatarAnimation.evPlayMoveAnimation'; 'evItemMove'"/>
		<bind name="var" value="{posMultiplier: _isAllyTeam ? -1 : 1}"/>
		<bind name="var" value="{startXPosition:  posMultiplier * ($index * (20 + 6))}"/>
		<style>
			<position value="absolute"/>
			<marginLeft value="10px"/>
			<marginTop value="5px"/>
			<width value="20px"/>
			<height value="20px"/>
		</style>
		<bind name="left" value="(startXPosition)"/>
		<bind name="appear" value="'evItemMove'; 0.15; 0.15; { left : posMultiplier*playerEntity.avatarAnimation.fromIndex * (20 + 6) }; {left : posMultiplier*playerEntity.avatarAnimation.toIndex * (20 + 6)}"/>
		<bind name="dispatch" value="'evItemDeath'; 'evItemDeath_disappear'; []; false; 0"/>
		<bind name="dispatch" value="'evItemDeath_disappear'; 'evItemDeath_move'; []; false; 0.15"/>
		<bind name="dispatch" value="'evItemDeath_move'; 'evItemDeath_appear'; []; false; 0.15"/>
		<bind name="appear" value="'evItemDeath_disappear'; 0.15; 0; { alpha: 1, scaleX: 1, scaleY: 1 }; { alpha : 0, scaleX: 0.1, scaleY: 0.1 }"/>
		<bind name="appear" value="'evItemDeath_move'; 0.15; 0; { left : posMultiplier*playerEntity.avatarAnimation.fromIndex * (20 + 6) }; {left : posMultiplier*playerEntity.avatarAnimation.toIndex * (20 + 6) }"/>
		<bind name="appear" value="'evItemDeath_appear'; 0.15; 0; { alpha: 0, scaleX: 0.1, scaleY: 0.1 }; { alpha : 1, scaleX: 1, scaleY: 1 } "/>
		<block className="HeaderShipMarker">
			<style>
				<marginLeft value="-10px"/>
				<marginTop value="-5px"/>
			</style>
			<styleClass value="$Fullsize"/>
			<block className="lesta.controls.BitmapEx" type="native">
				<styleClass value="$MiddleAligned"/>
				<bind name="watch" value="'shipSubtype'; toLowerCase(rawShipSubtype)"/>
				<bind name="bitmapDataClassName" value="
									isAlive ?
										isSelf ?
											'own_' + shipSubtype + '_small'
										:
											_isAllyTeam ?
												ttkStatus ?
													'henkey_ally_' + shipSubtype
												:
													isInSameDivision ?
														tkStatus ?
															'division_'+shipSubtype+'_small'
														:
															'division_'+shipSubtype+'_small'
													:
														tkStatus ?
															'ally_'+shipSubtype+'_teamkiller_small'
														:
															'ally_' + shipSubtype+'_small'
											:
												ttkStatus ?
													'henkey_enemy_' + shipSubtype
												:
													'enemy_' + shipSubtype + '_small'
									:
										_isAllyTeam ?
											'ally_'+shipSubtype+'_sunk_small'
										:
											'enemy_'+shipSubtype+'_sunk_small'
		"/>
			</block>
			<block>
				<style>
					<left value="50%"/>
					<marginLeft value="-45%"/>
					<top value="5px"/>
					<position value="absolute"/>
				</style>
				<block className="lesta.controls.BitmapEx" type="native">
					<bind name="visible" value="(flags &amp; (1 &lt;&lt; WeaponType.ARTILLERY)) != 0"/>
					<bind name="bitmapDataClassName" value="'aww_priority_attack_small'"/>
				</block>
				<block className="lesta.controls.BitmapEx" type="native">
					<bind name="visible" value="(flags &amp; (1 &lt;&lt; WeaponType.ATBA)) != 0"/>
					<bind name="bitmapDataClassName" value="'scaliber_priority_attack_small'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="HeaderShipMarker">
		<style>
			<marginLeft value="-10px"/>
			<marginTop value="-5px"/>
		</style>
		<styleClass value="$Fullsize"/>
		<block className="lesta.controls.BitmapEx" type="native">
			<styleClass value="$MiddleAligned"/>
			<bind name="watch" value="'shipSubtype'; toLowerCase(rawShipSubtype)"/>
			<bind name="bitmapDataClassName" value="
									isAlive ?
										isSelf ?
											'own_' + shipSubtype + '_small'
										:
											_isAllyTeam ?
												ttkStatus ?
													'henkey_ally_' + shipSubtype
												:
													isInSameDivision ?
														tkStatus ?
															'division_'+shipSubtype+'_small'
														:
															'division_'+shipSubtype+'_small'
													:
														tkStatus ?
															'ally_'+shipSubtype+'_teamkiller_small'
														:
															'ally_' + shipSubtype+'_small'
											:
												ttkStatus ?
													'henkey_enemy_' + shipSubtype
												:
													'enemy_' + shipSubtype + '_small'
									:
										_isAllyTeam ?
											'ally_'+shipSubtype+'_sunk_small'
										:
											'enemy_'+shipSubtype+'_sunk_small'
		"/>
		</block>
		<block>
			<style>
				<left value="50%"/>
				<marginLeft value="-45%"/>
				<top value="5px"/>
				<position value="absolute"/>
			</style>
			<block className="lesta.controls.BitmapEx" type="native">
				<bind name="visible" value="(flags &amp; (1 &lt;&lt; WeaponType.ARTILLERY)) != 0"/>
				<bind name="bitmapDataClassName" value="'aww_priority_attack_small'"/>
			</block>
			<block className="lesta.controls.BitmapEx" type="native">
				<bind name="visible" value="(flags &amp; (1 &lt;&lt; WeaponType.ATBA)) != 0"/>
				<bind name="bitmapDataClassName" value="'scaliber_priority_attack_small'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="TeamStructure">
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="controller" value="lesta.dialogs.battle_window_controllers.uss_controllers.ControllerBattleStats"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'gameInfo'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'slimClientData'"/>
		<bind name="firstEntityDH" value="'prefs'; CC.prefsMarker"/>
		<bind name="watchDH" value="'earsConfigEnabled'; ['prefs.prefsBattle.evUpdate']; prefs.prefsBattle.enableEars"/>
		<bind name="watch" value="'enableEars';	(earsConfigEnabled &amp;&amp;
								(gameInfo.battleType != BattleTypes.INTRO_MISSION) &amp;&amp;
								(gameInfo.battleType != BattleTypes.PVE_BATTLE))"/>
		<bind name="watch" value="'isDynamicDivisionsEnabled'; (((gameInfo.battleType == BattleTypes.COOPERATIVE_BATTLE) || (gameInfo.battleType == BattleTypes.RANDOM_BATTLE)) &amp;&amp;
												slimClientData.isFull)"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="instance" value="'EarsContent'; enableEars ? {_selfPlayer: selfPlayer, _isDynamicDivisionsEnabled: isDynamicDivisionsEnabled} : null"/>
		</block>
	</block>
	<block className="EarsContent">
		<bind name="firstEntityDH" value="'mouseEntity'; CC.mouse"/>
		<bind name="watchDH" value="'isCursorActive'; ['mouseEntity.mouse.evActiveChanged']; mouseEntity.mouse.active"/>
		<bind name="changeDispatch" value="isCursorActive; 'Tooltip.Close'; {}; 1; false"/>
		<style>
			<width value="100%"/>
			<height value="100%"/>
		</style>
		<block>
			<style>
				<left value="0px"/>
				<top value="720:113,1080:160ah"/>
				<position value="absolute"/>
			</style>
			<bind name="collectionRepeatDH" value="CC.avatar; 'TeamStructureRendererAllies'; 'team.ally.sortedAlive'; {_selfPlayer: _selfPlayer, _isDynamicDivisionsEnabled: _isDynamicDivisionsEnabled}"/>
		</block>
		<block>
			<style>
				<right value="0px"/>
				<top value="720:113,1080:160ah"/>
				<position value="absolute"/>
			</style>
			<bind name="collectionRepeatDH" value="CC.avatar; 'TeamStructureRendererEnemies'; 'team.enemy.sortedAlive'; {_selfPlayer: _selfPlayer}"/>
		</block>
	</block>
	<block className="TeamStructureRendererAllies">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'gameInfo'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'slimClientData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInvitedToDivision'; name; 'playerInvitationData'"/>
		<bind name="primaryEntityDH" value="'playerVoiceChatEntity'; CC.playerVoiceState; pureName"/>
		<bind name="dataRefDH" value="'playerEntity'; '$dataRef.ref'"/>
		<bind name="firstEntityDH" value="'mouseEntity'; CC.mouse"/>
		<bind name="watchDH" value="'playerId'; 			[]; playerEntity.avatar.id"/>
		<bind name="watchDH" value="'relation'; 			['playerEntity.relation.evChanged']; playerEntity.relation.value"/>
		<bind name="watchDH" value="'isAlive'; 			['playerEntity.health.evKilled']; playerEntity.health.isAlive"/>
		<bind name="watchDH" value="'ttkStatus'; 		['playerEntity.avatar.evTTKStatusChanged']; playerEntity.avatar.ttkStatus"/>
		<bind name="watchDH" value="'tkStatus'; 			['playerEntity.avatar.evTeamkillStatusChanged']; playerEntity.avatar.tkStatus"/>
		<bind name="watchDH" value="'frags'; 			['playerEntity.avatar.evFragsChanged']; playerEntity.avatar.frags"/>
		<bind name="watchDH" value="'division'; 			['playerEntity.avatar.evDivisionChanged']; playerEntity.avatar.division"/>
		<bind name="watchDH" value="'divisionId'; 		['playerEntity.avatar.evDivisionChanged']; playerEntity.avatar.divisionId"/>
		<bind name="watchDH" value="'divisionSign'; 		['playerEntity.avatar.evDivisionChanged']; playerEntity.avatar.divisionSign"/>
		<bind name="watchDH" value="'divisionHidden';	['playerEntity.avatar.evDivisionChanged', 'playerEntity.avatar.evDivisionHiddenChanged']; playerEntity.avatar.divisionHidden"/>
		<bind name="watchDH" value="'isInSameDivision'; 	['playerEntity.avatar.evDivisionChanged']; playerEntity.avatar.isInSameDivision"/>
		<bind name="watchDH" value="'isDivisionCommander'; 	['playerEntity.avatar.evIsDivisionCommanderUpdated']; playerEntity.avatar.isDivisionCommander"/>
		<bind name="watchDH" value="'invitationsEnabled';['playerEntity.avatar.evInvitationsEnabledChanged']; playerEntity.avatar.invitationsEnabled"/>
		<bind name="watchDH" value="'inviteCooldown'; 	['playerEntity.avatar.evInviteCooldownChanged']; playerEntity.avatar.inviteCooldown"/>
		<bind name="watchDH" value="'inviteCooldownEnabled'; 	['playerEntity.avatar.evInviteCooldownEnabledChanged']; playerEntity.avatar.inviteCooldownEnabled"/>
		<bind name="watchDH" value="'isLeaver';			['playerEntity.avatar.evIsLeaverChanged']; playerEntity.avatar.isLeaver"/>
		<bind name="watchDH" value="'pathTinyIcon'; 		[]; playerEntity.avatar.ship.ref.ship.pathTinyIcon"/>
		<bind name="watchDH" value="'pathOwnTinyIcon'; 	[]; playerEntity.avatar.ship.ref.ship.pathOwnTinyIcon"/>
		<bind name="watchDH" value="'pathTinyDeadIcon'; 	[]; playerEntity.avatar.ship.ref.ship.pathTinyDeadIcon"/>
		<bind name="watchDH" value="'mute'; 				['playerEntity.avatar.evMuteChanged']; playerEntity.avatar.mute"/>
		<bind name="watchDH" value="'name'; 				[]; playerEntity.avatar.name"/>
		<bind name="watchDH" value="'pureName'; 			[]; playerEntity.avatar.pureName"/>
		<bind name="watchDH" value="'isBot'; 			[]; playerEntity.avatar.isBot"/>
		<bind name="watchDH" value="'isSpeaking'; 		['playerVoiceChatEntity.playerVoiceState.evIsSpeakingChanged']; playerVoiceChatEntity.playerVoiceState.isSpeaking"/>
		<bind name="watchDH" value="'isMuted'; 			['playerVoiceChatEntity.playerVoiceState.evIsMutedChanged']; playerVoiceChatEntity.playerVoiceState.isMuted"/>
		<bind name="watch" value="'isSelf'; (relation == 0)"/>
		<bind name="watch" value="'isInVoiceChat'; playerVoiceChatEntity != null"/>
		<bind name="watch" value="'player'; {
							relation: relation,
							name: name,
							pureName: pureName,
							ttkStatus: ttkStatus,
							tkStatus: tkStatus,
							isInSameDivision: isInSameDivision,
							isDivisionCommander: isDivisionCommander,
							isInVoiceChat: isInVoiceChat,
							isMuted: isMuted,
							inviteCooldown: inviteCooldown,
							division: division,
							isAlive: isAlive,
							invitationsEnabled: invitationsEnabled,
							inviteCooldownEnabled: inviteCooldownEnabled,
							isLeaver: isLeaver,
							id: playerId,
							mute: mute,
							isInSameDivisionOnStart: playerEntity.avatar.isInSameDivisionOnStart
	}"/>
		<block>
			<style>
				<width value="190px"/>
				<height value="23px"/>
			</style>
			<block>
				<style>
					<width value="190px"/>
					<height value="23px"/>
					<position value="absolute"/>
				</style>
				<block>
					<bind name="visible" value="isInSameDivision"/>
					<style>
						<backgroundColor value="0x40ffdc84"/>
						<position value="absolute"/>
						<height value="23px"/>
						<width value="190px"/>
						<hitTest value="false"/>
					</style>
				</block>
				<block className="dock_submenu_item_bg" type="native">
					<bind name="transition" value="mouseDown || contextMenuVisible || rollOver; 0.1; {alpha: 0}; {alpha: 1}"/>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block className="players_stat_item" type="native">
					<bind name="gotoAndStop!" value="isAlive ? 'alive' : 'dead'"/>
				</block>
				<bind name="tooltip" value="'BattlePlayerTooltip';	{_isInBattle: true,
													_player: player, _selfPlayer: _selfPlayer,
													_battleType: gameInfo.battleType, _isBot: isBot}"/>
				<bind name="menu" value="'UIListPlayerContextMenu'; !(isSelf) &amp;&amp; !(isBot)	?	{_player: player, _selfPlayer: _selfPlayer, _battleType: gameInfo.battleType, 
																				_complaintsAvailable: true, _isBattleStats: true}
																			: 	null; null; 'contextMenuVisible'"/>
			</block>
			<block>
				<style>
					<width value="190px"/>
					<height value="23px"/>
					<position value="absolute"/>
				</style>
				<block>
					<style>
						<marginTop value="-2px"/>
						<hitTest value="false"/>
					</style>
					<bind name="instance" value="'UIListVoiceTextChatIcons'; {	_playerId: playerId, _selfPlayerDivisionId: divisionId,
																_isInSameDivision: isInSameDivision, _battleType: gameInfo.battleType,
																_isSpeaking: isSpeaking, _isVoiceChatMuted: isMuted, _isInVoiceChat: isInVoiceChat }"/>
				</block>
				<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'dynamicDivisionsData'; 'id'; _selfPlayer.divisionId; 'selfPlayerDivisionData'"/>
				<bind name="watch" value="'isFreePlacesInDivision'; ((selfPlayerDivisionData[0].staff.length + selfPlayerDivisionData[0].inPortParticipantsCount) &lt; 3)"/>
				<bind name="watch" value="'invitationDisableReason'; !(slimClientData.isFull)											? 'YourClientIsTooSlim' :
													isSelf																? 'YouCantInviteYourself' :
													!(isAlive)															? 'IDS_INVITATION_DISABLE_REASON_DESTROYED' :
													!(_selfPlayer.isAlive)												? 'IDS_DIVISION_MANAGEMENT_LOCKED_FOR_DESTROYED' :
													isLeaver															? 'IDS_INVITATION_DISABLE_REASON_PLAYER_IS_OUT_OF_BATTLE':
													(division != 0)														? 'IDS_INVITATION_DISABLE_REASON_ALREADY_IN_DIVISION' :
													(playerInvitationData != null)										? 'PlayerIsAlreadyInvited' :
													isInSameDivision													? 'PlayerIsAlreadyInYourDivision' :
													(_selfPlayer.division != 0) &amp;&amp; !(_selfPlayer.isDivisionCommander)	? 'IDS_INVITATION_DISABLE_REASON_NOT_COMMANDER' :
													!(isFreePlacesInDivision)											? 'IDS_INVITATION_DISABLE_REASON_NO_FREE_PLACES' :
													!(invitationsEnabled)												? 'IDS_INVITATION_DISABLE_REASON_INVITATIONS_DISABLED' :
													inviteCooldownEnabled												? 'IDS_WAIT_TIMEOUT_TO_INVITE_TO_DIVISION'
																														: 'no_reason'"/>
				<block>
					<bind name="visible" value="(division &gt; 0) &amp;&amp; !(divisionHidden)"/>
					<style>
						<position value="absolute"/>
						<left value="10px"/>
						<top value="3px"/>
						<hitTest value="false"/>
					</style>
					<block className="division_item" type="native">
						<bind name="gotoAndStop!" value="isInSameDivision ? (divisionSign + 1) : (divisionSign + 1 + 10)"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="_isDynamicDivisionsEnabled"/>
					<styleClass value="$FullsizeAbsolute"/>
					<block>
						<bind name="visible" value="(playerInvitationData != null)"/>
						<bind name="transition" value="rollOver; 0.15; {alpha: 1}; {alpha: 0}; {alpha: 1}; 1; 0.05"/>
						<styleClass value="$MiddleVAligned"/>
						<style>
							<position value="absolute"/>
							<left value="10px"/>
							<hitTest value="false"/>
						</style>
						<block className="formation_player_status" type="native">
							<bind name="gotoAndStop!" value="'empty_slot_division'"/>
						</block>
					</block>
					<block>
						<bind name="transition" value="rollOver; 0.15; {alpha: 0}; {alpha: 1.0}; {alpha: 0}; 1; 0.05"/>
						<styleClass value="$MiddleVAligned"/>
						<block>
							<bind name="visible" value="(invitationDisableReason == 'no_reason')"/>
							<styleClass value="$MiddleVAligned"/>
							<style>
								<position value="absolute"/>
								<left value="5px"/>
							</style>
							<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'no_icon', _instructionText: 'IDS_INVITE_IN_DIVISION'}], _maxWidth: 250, _isInBattle: true}"/>
							<block className="button_division_invite" type="native">
								<bind name="action" value="'buttonClick'; 'inviteToDivision'; {playerId: playerId, playerName: name, inviteType: InviteType.COMMON}"/>
							</block>
						</block>
						<block>
							<bind name="visible" value="(_selfPlayer.isDivisionCommander &amp;&amp; !!(playerInvitationData))"/>
							<styleClass value="$MiddleVAligned"/>
							<style>
								<position value="absolute"/>
								<left value="4px"/>
							</style>
							<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'no_icon', _instructionText: 'IDS_RECALL_INVITATION'}], _maxWidth: 250, _isInBattle: true}"/>
							<block className="button_cross" type="native">
								<bind name="action" value="'buttonClick'; 'revokeInvitationToDivision'; {id: playerInvitationData.id}"/>
							</block>
						</block>
					</block>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<left value="25px"/>
						<width value="50px"/>
						<hitTest value="false"/>
						<top value="5px"/>
					</style>
					<bind name="style" value="'alpha'; isAlive ? 1 : 0.7"/>
					<bind name="instance" value="'PlayerNameAndClanTag'; { 	_isSelf: isSelf, _isDead: !isAlive, _isInSameDivision: isInSameDivision,
															_ttkStatus: ttkStatus, _tkStatus: tkStatus, 
															_playerName: pureName}"/>
				</block>
				<block>
					<style>
						<position value="absolute"/>
						<left value="75px"/>
						<hitTest value="false"/>
						<top value="5px"/>
					</style>
					<bind name="style" value="'alpha'; isAlive ? 1 : 0.7"/>
					<bind name="name" value="'player_' + name"/>
					<bind name="instance" value="'EarTextLine'; { _width: '20px', _isAlive: isAlive, _isSelf: isSelf, _ttkStatus: ttkStatus, _tkStatus: tkStatus,
												_isInSameDivision: isInSameDivision, _text: frags, _relation: relation }"/>
				</block>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<bind name="style" value="'alpha'; !(isAlive) &amp;&amp; (isSelf) ? 0.5 : 1"/>
					<style>
						<left value="100px"/>
						<width value="122px"/>
						<height value="22px"/>
						<backgroundStretchX value="true"/>
						<backgroundStretchY value="true"/>
						<position value="absolute"/>
						<hitTest value="false"/>
					</style>
					<bind name="style" value="'backgroundImage'; !(isAlive) &amp;&amp; !(isSelf) ? ('url:' + pathTinyDeadIcon):
															 	isSelf  ? ('url:' + pathOwnTinyIcon)
														 			 	: ('url:' + pathTinyIcon)"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="TeamStructureRendererEnemies">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'gameInfo'"/>
		<bind name="dataRefDH" value="'playerEntity'; '$dataRef.ref'"/>
		<bind name="firstEntityDH" value="'mouseEntity'; CC.mouse"/>
		<bind name="watchDH" value="'playerId'; 			[]; playerEntity.avatar.id"/>
		<bind name="watchDH" value="'relation'; 			['playerEntity.relation.evChanged']; playerEntity.relation.value"/>
		<bind name="watchDH" value="'isAlive'; 			['playerEntity.health.evKilled']; playerEntity.health.isAlive"/>
		<bind name="watchDH" value="'ttkStatus'; 		['playerEntity.avatar.evTTKStatusChanged']; playerEntity.avatar.ttkStatus"/>
		<bind name="watchDH" value="'frags'; 			['playerEntity.avatar.evFragsChanged']; playerEntity.avatar.frags"/>
		<bind name="watchDH" value="'division'; 			['playerEntity.avatar.evDivisionChanged']; playerEntity.avatar.division"/>
		<bind name="watchDH" value="'divisionId'; 		['playerEntity.avatar.evDivisionChanged']; playerEntity.avatar.divisionId"/>
		<bind name="watchDH" value="'isSpeaking'; 		['playerEntity.playerVoiceState.evIsSpeakingChanged']; playerEntity.playerVoiceState.isSpeaking"/>
		<bind name="watchDH" value="'isMuted'; 			['playerEntity.playerVoiceState.evIsMutedChanged']; playerEntity.playerVoiceState.isMuted"/>
		<bind name="watchDH" value="'mute'; 				['playerEntity.avatar.evMuteChanged']; playerEntity.avatar.mute"/>
		<bind name="watchDH" value="'active'; 			['playerEntity.voiceChat.evActiveChanged']; playerEntity.voiceChat.active"/>
		<bind name="watchDH" value="'flags'; 			['playerEntity.target.evChanged']; playerEntity.target.flags"/>
		<bind name="watchDH" value="'divisionSign'; 		['playerEntity.avatar.evDivisionChanged']; playerEntity.avatar.divisionSign"/>
		<bind name="watchDH" value="'isInSameDivision'; 	['playerEntity.avatar.evDivisionChanged']; playerEntity.avatar.isInSameDivision"/>
		<bind name="watchDH" value="'divisionHidden';	['playerEntity.avatar.evDivisionChanged', 'playerEntity.avatar.evDivisionHiddenChanged']; playerEntity.avatar.divisionHidden"/>
		<bind name="watchDH" value="'pathTinyIcon'; 		[]; playerEntity.avatar.ship.ref.ship.pathTinyIcon"/>
		<bind name="watchDH" value="'pathOwnTinyIcon'; 	[]; playerEntity.avatar.ship.ref.ship.pathOwnTinyIcon"/>
		<bind name="watchDH" value="'pathTinyDeadIcon'; 	[]; playerEntity.avatar.ship.ref.ship.pathTinyDeadIcon"/>
		<bind name="watchDH" value="'name'; 				[]; playerEntity.avatar.name"/>
		<bind name="watchDH" value="'pureName'; 			[]; playerEntity.avatar.pureName"/>
		<bind name="watchDH" value="'isBot'; 			[]; playerEntity.avatar.isBot"/>
		<bind name="watch" value="'isSelf'; (relation == 0)"/>
		<bind name="watch" value="'player'; {
							relation: relation,
							name: name,
							ttkStatus: ttkStatus,
							isInSameDivision: false,
							isDivisionCommander: false,
							isInVoiceChat: false,
							isMuted: isMuted,
							inviteCooldown: inviteCooldown,
							division: division,
							isAlive: isAlive,
							invitationsEnabled: false,
							isLeaver: isLeaver,
							id: playerId,
							mute: mute,
							isInSameDivisionOnStart: playerEntity.avatar.isInSameDivisionOnStart
	}"/>
		<style>
			<height value="23px"/>
		</style>
		<bind name="tooltip" value="'BattlePlayerTooltip'; {	_isInBattle: true,
											_player: player, _selfPlayer: _selfPlayer,
											_battleType: gameInfo.battleType, _isBot: isBot}"/>
		<bind name="menu" value="'UIListPlayerContextMenu'; !(isSelf) &amp;&amp; !(isBot)	?	{_player: player, _selfPlayer: _selfPlayer, _battleType: gameInfo.battleType, 
																		_complaintsAvailable: true, _isBattleStats: true}
																	: 	null; null; 'contextMenuVisible'"/>
		<block>
			<style>
				<width value="190px"/>
				<height value="23px"/>
				<position value="absolute"/>
			</style>
			<bind name="scaleX" value="1"/>
			<block className="dock_submenu_item_bg" type="native">
				<bind name="transition" value="mouseDown || contextMenuVisible || rollOver; 0.1; {alpha: 0}; {alpha: 1}"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block className="players_stat_item" type="native">
				<bind name="gotoAndStop!" value="isAlive ? 'alive' : 'dead'"/>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<right value="100px"/>
				<width value="122px"/>
				<height value="22px"/>
				<backgroundStretchX value="true"/>
				<backgroundStretchY value="true"/>
				<position value="absolute"/>
			</style>
			<bind name="scaleX" value="1"/>
			<bind name="style" value="'backgroundImage'; !isAlive ? ('url:' + pathTinyDeadIcon) : ('url:' + pathTinyIcon)"/>
		</block>
		<block>
			<bind name="visible" value="(flags &amp; (1 &lt;&lt; WeaponType.ARTILLERY)) != 0"/>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<width value="15px"/>
				<height value="15px"/>
				<position value="absolute"/>
				<right value="235px"/>
				<backgroundImage value="symbol:aww_priority_attack_small"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="(flags &amp; (1 &lt;&lt; WeaponType.ATBA)) != 0"/>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<width value="15px"/>
				<height value="15px"/>
				<position value="absolute"/>
				<right value="145px"/>
				<backgroundImage value="symbol:scaliber_priority_attack_small"/>
			</style>
		</block>
		<block>
			<bind name="name" value="'player_' + name"/>
			<bind name="style" value="'alpha'; isAlive ? 1 : 0.7"/>
			<style>
				<position value="absolute"/>
				<right value="75px"/>
				<top value="5px"/>
			</style>
			<bind name="instance" value="'EarTextLine'; { _isAlive: isAlive, _isSelf: isSelf, _ttkStatus: ttkStatus,
										_isInSameDivision: isInSameDivision, _text: frags, _relation: relation }"/>
		</block>
		<block>
			<bind name="style" value="'alpha'; isAlive ? 1 : 0.7"/>
			<style>
				<position value="absolute"/>
				<right value="25px"/>
				<width value="50px"/>
				<top value="5px"/>
			</style>
			<block>
				<style>
					<width value="100%f"/>
					<position value="absolute"/>
					<right value="0px"/>
				</style>
				<bind name="instance" value="'PlayerNameAndClanTag'; { 	_isSelf: isSelf, _isDead: !isAlive, _isInSameDivision: isInSameDivision,
														_ttkStatus: ttkStatus, _tkStatus: tkStatus, 
														_playerName: pureName}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="(division &gt; 0) &amp;&amp; !(divisionHidden)"/>
			<style>
				<position value="absolute"/>
				<right value="10px"/>
				<top value="3px"/>
				<hitTest value="false"/>
			</style>
			<block className="division_item" type="native">
				<bind name="gotoAndStop!" value="divisionSign + 1 + 10"/>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<right value="10px"/>
				<marginTop value="-2px"/>
			</style>
			<bind name="instance" value="'UIListVoiceTextChatIcons'; { _playerId: playerId, _selfPlayerDivisionId: divisionId }"/>
		</block>
	</block>
	<block className="EarTextLine">
		<bind name="watch" value="'fontColor'; 	_isSelf 	? 	_ttkStatus 			? '$FontColorTTK' :
												_tkStatus 			? '$FontColorTeamkiller'
																	: '$FontColorGolden':
								_isAlive 	?  	_ttkStatus 			? '$FontColorTTK' :
												_tkStatus 			? '$FontColorTeamkiller':
												_isInSameDivision 	? '$FontColorGolden' 
																	: '$FontColorWhite'
											: '$FontColorAlmostBlack'"/>
		<block type="text">
			<styleClass value="$TextDefaultNM"/>
			<style>
				<multiline value="false"/>
				<width value="20px"/>
			</style>
			<bind name="class" value="_isSelf 	? '$Bold' : '$None'"/>
			<bind name="style" value="'textAlign'; ((_relation == 1) || (_relation == 0)) ? 'left' : 'right'"/>
			<bind name="class" value="fontColor"/>
			<bind name="class" value="(!_isAlive &amp;&amp; !_isSelf ? '$FontDropShadowWhite' : '$None')"/>
			<bind name="text" value="_text"/>
		</block>
	</block>
	<block className="ShipParamsTooltip">
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="primaryEntityDH" value="'cmdEntity'; CC.commandMappingCommandName; 'CMD_SHIP_PARAMS'"/>
		<bind name="handleEventDH" value="'cmdEntity.commandMappingCommand.evCall'; 'evCommandCall'"/>
		<bind name="catch" value="'evCommandCall'"/>
		<bind name="watch" value="'isCommandDown'; $args[0]"/>
		<bind name="firstEntityDH" value="'selfAvatarEntity'; CC.playerAvatar"/>
		<bind name="watch" value="'selfAvatarEntityId'; selfAvatarEntity.id"/>
		<bind name="watchDH" value="'playerIsAlive'; ['selfAvatarEntity.health.evKilled']; selfAvatarEntity.health.isAlive"/>
		<bind name="firstEntityDH" value="'ownCarrierEntity'; CC.aircarrier;"/>
		<bind name="watchDH" value="'activeSquadron'; ['ownCarrierEntity.aircarrier.evStateChanged']; ownCarrierEntity ? ownCarrierEntity.aircarrier.activeSquadron : -1"/>
		<block className="ShipParamsArray">
			<bind name="primaryEntityDH" value="'mgVisibilityTimeEntity'; CC.parameter; selfAvatarEntityId + '_' + 'mgVisibilityTime'"/>
			<bind name="watchDH" value="'mgVisibilityTime'; ['mgVisibilityTimeEntity.parameter.evChanged']; (format(mgVisibilityTimeEntity.parameter.currentValue, 1, true) + tr('IDS_SECOND_SPACE'))"/>
			<bind name="primaryEntityDH" value="'visibilityRangeEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityRange'"/>
			<bind name="watchDH" value="'visibilityRange'; ['visibilityRangeEntity.parameter.evChanged']; (format(visibilityRangeEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="primaryEntityDH" value="'visibilityByShipRangeGKEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityByShipRangeGK'"/>
			<bind name="watchDH" value="'visibilityByShipRangeGK'; ['visibilityByShipRangeGKEntity.parameter.evChanged']; (format(visibilityByShipRangeGKEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="primaryEntityDH" value="'visibilityByShipRangeFireEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityByShipRangeFire'"/>
			<bind name="watchDH" value="'visibilityByShipRangeFire'; ['visibilityByShipRangeFireEntity.parameter.evChanged']; (format(visibilityByShipRangeFireEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="primaryEntityDH" value="'visibilityByShipRangeATBAEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityByShipRangeATBA'"/>
			<bind name="watchDH" value="'visibilityByShipRangeATBA'; ['visibilityByShipRangeATBAEntity.parameter.evChanged']; (format(visibilityByShipRangeATBAEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="watchDH" value="'visibilityByShipRangeATBA'+'_vis'; ['visibilityByShipRangeATBAEntity.parameter.evChanged']; visibilityByShipRangeATBAEntity.parameter.currentValue"/>
			<bind name="primaryEntityDH" value="'visibilityPlaneRangeEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityPlaneRange'"/>
			<bind name="watchDH" value="'visibilityPlaneRange'; ['visibilityPlaneRangeEntity.parameter.evChanged']; (format(visibilityPlaneRangeEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="primaryEntityDH" value="'visibilityByPlaneRangeBaseEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityByPlaneRangeBase'"/>
			<bind name="watchDH" value="'visibilityByPlaneRangeBase'; ['visibilityByPlaneRangeBaseEntity.parameter.evChanged']; (format(visibilityByPlaneRangeBaseEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="primaryEntityDH" value="'visibilityByShipRangeBaseEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityByShipRangeBase'"/>
			<bind name="watchDH" value="'visibilityByShipRangeBase'; ['visibilityByShipRangeBaseEntity.parameter.evChanged']; (format(visibilityByShipRangeBaseEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="primaryEntityDH" value="'visibilityByPlaneRangeGKEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityByPlaneRangeGK'"/>
			<bind name="watchDH" value="'visibilityByPlaneRangeGK'; ['visibilityByPlaneRangeGKEntity.parameter.evChanged']; (format(visibilityByPlaneRangeGKEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="primaryEntityDH" value="'visibilityByPlaneRangeFireEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityByPlaneRangeFire'"/>
			<bind name="watchDH" value="'visibilityByPlaneRangeFire'; ['visibilityByPlaneRangeFireEntity.parameter.evChanged']; (format(visibilityByPlaneRangeFireEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="primaryEntityDH" value="'visibilityByPlaneRangeATBAEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityByPlaneRangeATBA'"/>
			<bind name="watchDH" value="'visibilityByPlaneRangeATBA'; ['visibilityByPlaneRangeATBAEntity.parameter.evChanged']; (format(visibilityByPlaneRangeATBAEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="primaryEntityDH" value="'visibilityInSmokeRangeBaseEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityInSmokeRangeBase'"/>
			<bind name="watchDH" value="'visibilityInSmokeRangeBase'; ['visibilityInSmokeRangeBaseEntity.parameter.evChanged']; (format(visibilityInSmokeRangeBaseEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="primaryEntityDH" value="'visibilityInSmokeRangeGKEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityInSmokeRangeGK'"/>
			<bind name="watchDH" value="'visibilityInSmokeRangeGK'; ['visibilityInSmokeRangeGKEntity.parameter.evChanged']; (format(visibilityInSmokeRangeGKEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="primaryEntityDH" value="'visibilityRangeUnderwaterEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityRangeUnderwater'"/>
			<bind name="watchDH" value="'visibilityRangeUnderwater'; ['visibilityRangeUnderwaterEntity.parameter.evChanged']; (format(visibilityRangeUnderwaterEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="watchDH" value="'visibilityRangeUnderwater'+'_vis'; ['visibilityRangeUnderwaterEntity.parameter.evChanged']; visibilityRangeUnderwaterEntity.parameter.currentValue"/>
			<bind name="primaryEntityDH" value="'aaBaseNearStateEntity'; CC.parameter; selfAvatarEntityId + '_' + 'aaBaseNearState'"/>
			<bind name="watchDH" value="'aaBaseNearState'; ['aaBaseNearStateEntity.parameter.evChanged']; (format(aaBaseNearStateEntity.parameter.currentValue, 1, true) + tr(''))"/>
			<bind name="primaryEntityDH" value="'aaCurrentNearStateEntity'; CC.parameter; selfAvatarEntityId + '_' + 'aaCurrentNearState'"/>
			<bind name="watchDH" value="'aaCurrentNearState'; ['aaCurrentNearStateEntity.parameter.evChanged']; (format(aaCurrentNearStateEntity.parameter.currentValue, 1, true) + tr(''))"/>
			<bind name="watch" value="'aaNearEfficiency'; format(aaCurrentNearState / aaBaseNearState * 100, 0) + '%'"/>
			<bind name="primaryEntityDH" value="'aaBaseMidStateEntity'; CC.parameter; selfAvatarEntityId + '_' + 'aaBaseMidState'"/>
			<bind name="watchDH" value="'aaBaseMidState'; ['aaBaseMidStateEntity.parameter.evChanged']; (format(aaBaseMidStateEntity.parameter.currentValue, 1, true) + tr(''))"/>
			<bind name="primaryEntityDH" value="'aaCurrentMidStateEntity'; CC.parameter; selfAvatarEntityId + '_' + 'aaCurrentMidState'"/>
			<bind name="watchDH" value="'aaCurrentMidState'; ['aaCurrentMidStateEntity.parameter.evChanged']; (format(aaCurrentMidStateEntity.parameter.currentValue, 1, true) + tr(''))"/>
			<bind name="watch" value="'aaMidEfficiency'; format(aaCurrentMidState / aaBaseMidState * 100, 0) + '%'"/>
			<bind name="primaryEntityDH" value="'aaBaseFarStateEntity'; CC.parameter; selfAvatarEntityId + '_' + 'aaBaseFarState'"/>
			<bind name="watchDH" value="'aaBaseFarState'; ['aaBaseFarStateEntity.parameter.evChanged']; (format(aaBaseFarStateEntity.parameter.currentValue, 1, true) + tr(''))"/>
			<bind name="primaryEntityDH" value="'aaCurrentFarStateEntity'; CC.parameter; selfAvatarEntityId + '_' + 'aaCurrentFarState'"/>
			<bind name="watchDH" value="'aaCurrentFarState'; ['aaCurrentFarStateEntity.parameter.evChanged']; (format(aaCurrentFarStateEntity.parameter.currentValue, 1, true) + tr(''))"/>
			<bind name="watch" value="'aaFarEfficiency'; format(aaCurrentFarState / aaBaseFarState * 100, 0) + '%'"/>
			<bind name="primaryEntityDH" value="'atbaBaseStateEntity'; CC.parameter; selfAvatarEntityId + '_' + 'atbaBaseState'"/>
			<bind name="watchDH" value="'atbaBaseState'; ['atbaBaseStateEntity.parameter.evChanged']; (format(atbaBaseStateEntity.parameter.currentValue, 1, true) + tr(''))"/>
			<bind name="primaryEntityDH" value="'atbaCurrentStateEntity'; CC.parameter; selfAvatarEntityId + '_' + 'atbaCurrentState'"/>
			<bind name="watchDH" value="'atbaCurrentState'; ['atbaCurrentStateEntity.parameter.evChanged']; (format(atbaCurrentStateEntity.parameter.currentValue, 1, true) + tr(''))"/>
			<bind name="watch" value="'atbaEfficiency'; format(atbaCurrentState / atbaBaseState * 100, 0)+ '%'"/>
			<bind name="primaryEntityDH" value="'shootRangeEntity'; CC.parameter; selfAvatarEntityId + '_' + 'shootRange'"/>
			<bind name="watchDH" value="'shootRange'; ['shootRangeEntity.parameter.evChanged']; (format(shootRangeEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="watchDH" value="'shootRange'+'_vis'; ['shootRangeEntity.parameter.evChanged']; shootRangeEntity.parameter.currentValue"/>
			<bind name="primaryEntityDH" value="'aaRangeNearEntity'; CC.parameter; selfAvatarEntityId + '_' + 'aaRangeNear'"/>
			<bind name="watchDH" value="'aaRangeNear'; ['aaRangeNearEntity.parameter.evChanged']; (format(aaRangeNearEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="primaryEntityDH" value="'aaRangeMidEntity'; CC.parameter; selfAvatarEntityId + '_' + 'aaRangeMid'"/>
			<bind name="watchDH" value="'aaRangeMid'; ['aaRangeMidEntity.parameter.evChanged']; (format(aaRangeMidEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="primaryEntityDH" value="'aaRangeFarEntity'; CC.parameter; selfAvatarEntityId + '_' + 'aaRangeFar'"/>
			<bind name="watchDH" value="'aaRangeFar'; ['aaRangeFarEntity.parameter.evChanged']; (format(aaRangeFarEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="watchDH" value="'aaRangeNear'+'_vis'; ['aaRangeNearEntity.parameter.evChanged']; aaRangeNearEntity.parameter.currentValue"/>
			<bind name="watchDH" value="'aaRangeMid'+'_vis'; ['aaRangeMidEntity.parameter.evChanged']; aaRangeMidEntity.parameter.currentValue"/>
			<bind name="watchDH" value="'aaRangeFar'+'_vis'; ['aaRangeFarEntity.parameter.evChanged']; aaRangeFarEntity.parameter.currentValue"/>
			<bind name="watch" value="'aaRange'; (	((aaRangeNear_vis &gt; 0)	? (aaRangeNear + ' / ') : '') + 
								((aaRangeMid_vis &gt; 0)	? (aaRangeMid + ' / ')	: '') +
								((aaRangeFar_vis &gt; 0)	? aaRangeFar : '')
							)
	"/>
			<bind name="watch" value="'aa_vis'; (aaRangeNear_vis + aaRangeMid_vis + aaRangeFar_vis)"/>
			<bind name="watchDH" value="'aaBaseNearState'+'_vis'; ['aaBaseNearStateEntity.parameter.evChanged']; aaBaseNearStateEntity.parameter.currentValue"/>
			<bind name="watchDH" value="'aaBaseMidState'+'_vis'; ['aaBaseMidStateEntity.parameter.evChanged']; aaBaseMidStateEntity.parameter.currentValue"/>
			<bind name="watchDH" value="'aaBaseFarState'+'_vis'; ['aaBaseFarStateEntity.parameter.evChanged']; aaBaseFarStateEntity.parameter.currentValue"/>
			<bind name="primaryEntityDH" value="'atbaRangeEntity'; CC.parameter; selfAvatarEntityId + '_' + 'atbaRange'"/>
			<bind name="watchDH" value="'atbaRange'; ['atbaRangeEntity.parameter.evChanged']; (format(atbaRangeEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="watchDH" value="'atbaRange'+'_vis'; ['atbaRangeEntity.parameter.evChanged']; atbaRangeEntity.parameter.currentValue"/>
			<bind name="primaryEntityDH" value="'shootTARangeEntity'; CC.parameter; selfAvatarEntityId + '_' + 'shootTARange'"/>
			<bind name="watchDH" value="'shootTARange'; ['shootTARangeEntity.parameter.evChanged']; (format(shootTARangeEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="watchDH" value="'shootTARange'+'_vis'; ['shootTARangeEntity.parameter.evChanged']; shootTARangeEntity.parameter.currentValue"/>
			<bind name="primaryEntityDH" value="'shootMGRangeEntity'; CC.parameter; selfAvatarEntityId + '_' + 'shootMGRange'"/>
			<bind name="watchDH" value="'shootMGRange'; ['shootMGRangeEntity.parameter.evChanged']; (format(shootMGRangeEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="watchDH" value="'shootMGRange'+'_vis'; ['shootMGRangeEntity.parameter.evChanged']; shootMGRangeEntity.parameter.currentValue"/>
			<bind name="primaryEntityDH" value="'visionRangeEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visionRange'"/>
			<bind name="watchDH" value="'visionRange'; ['visionRangeEntity.parameter.evChanged']; (format(visionRangeEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="firstEntityDH" value="'localWeatherEntity'; CC.localWeather"/>
			<bind name="watchDH" value="'weatherName'; ['localWeatherEntity.localWeather.evChanged']; toUpperCase(localWeatherEntity.localWeather.gpName)"/>
			<bind name="collectionDH" value="CC.state; 'avatarStatesRoot'; 'byEntity.' + selfAvatarEntityId"/>
			<bind name="collectionDesign" value="DES_avatarStatesRoot; 'weatherStates'; {'filter': $entity.state.type == EntityState.INSIDE_WEATHER}"/>
			<bind name="primaryEntityDH" value="'shipHangarSizeEntity'; CC.parameter; selfAvatarEntityId + '_' + 'shipHangarSize'"/>
			<bind name="watchDH" value="'shipHangarSize'; ['shipHangarSizeEntity.parameter.evChanged']; (format(shipHangarSizeEntity.parameter.currentValue, 1, true) + tr(''))"/>
			<bind name="watchDH" value="'shipHangarSize'+'_vis'; ['shipHangarSizeEntity.parameter.evChanged']; shipHangarSizeEntity.parameter.currentValue"/>
			<bind name="primaryEntityDH" value="'hangarSizeFighterEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + 'Fighter' + '_' + 'hangarSize'"/>
			<bind name="watchDH" value="'hangarSizeFighter'; ['hangarSizeFighterEntity.parameter.evChanged']; (format(hangarSizeFighterEntity.parameter.currentValue, 1, true) + tr(''))"/>
			<bind name="watchDH" value="'hangarSizeFighter'+'_vis'; ['hangarSizeFighterEntity.parameter.evChanged']; hangarSizeFighterEntity.parameter.currentValue"/>
			<bind name="primaryEntityDH" value="'hangarSizeBomberEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + 'Bomber' + '_' + 'hangarSize'"/>
			<bind name="watchDH" value="'hangarSizeBomber'; ['hangarSizeBomberEntity.parameter.evChanged']; (format(hangarSizeBomberEntity.parameter.currentValue, 1, true) + tr(''))"/>
			<bind name="watchDH" value="'hangarSizeBomber'+'_vis'; ['hangarSizeBomberEntity.parameter.evChanged']; hangarSizeBomberEntity.parameter.currentValue"/>
			<bind name="primaryEntityDH" value="'hangarSizeDiveEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + 'Dive' + '_' + 'hangarSize'"/>
			<bind name="watchDH" value="'hangarSizeDive'; ['hangarSizeDiveEntity.parameter.evChanged']; (format(hangarSizeDiveEntity.parameter.currentValue, 1, true) + tr(''))"/>
			<bind name="watchDH" value="'hangarSizeDive'+'_vis'; ['hangarSizeDiveEntity.parameter.evChanged']; hangarSizeDiveEntity.parameter.currentValue"/>
			<bind name="watch" value="'shipParams';
			[	{ title: 'IDS_SHIP_TOOLTIP_VISIBILITY', value: visibilityRange, paramsArr:
					[	{ title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_BY_SHIP',									value: visibilityByShipRangeBase,
							paramsArr:	[	{title: 'IDS_PARAM_VISIBILITY_GK',								value: visibilityByShipRangeGK,		isInvisible: (shootMGRange_vis == 0)},
											{title: 'IDS_VISIBILITY_DIST_BY_GK_IN_SMOKE_HUD_TOOLTIP',		value: visibilityInSmokeRangeGK,	isInvisible: (shootMGRange_vis == 0)},
											{title: 'IDS_PARAM_VISIBILITY_AA',								value: visibilityByShipRangeATBA, 	isInvisible: (aa_vis == 0)},
											{title: 'IDS_PARAM_VISIBILITY_FIRE',							value: visibilityByShipRangeFire},
											{title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_UNDERWATER',			value: visibilityRangeUnderwater, 	isInvisible: (visibilityRangeUnderwater_vis == null)}
										]
						},
						{ title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_BY_PLANE', value: visibilityPlaneRange,
							paramsArr:	[	{title: 'IDS_PARAM_VISIBILITY_GK',								value: visibilityByPlaneRangeGK,	isInvisible: (shootMGRange_vis == 0)},
											{title: 'IDS_PARAM_VISIBILITY_AA',								value: visibilityByPlaneRangeATBA,	isInvisible: (aa_vis == 0)},
											{title: 'IDS_PARAM_VISIBILITY_FIRE',							value: visibilityByPlaneRangeFire}
										]
						},
						{ title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_IN_SMOKE', value: visibilityInSmokeRangeBase}
					]
				},

				{ title: 'IDS_PARAM_HIGH_VISIBILITY_TIME',	value: mgVisibilityTime,	isInvisible: (shootMGRange_vis == 0)},

				{ title: 'IDS_PARAM_SELF_VISIBLE_RANGE',	value: visionRange},

			{ title: 'IDS_SHIP_PARAM_MAX_DIST',	value: ((shootRange_vis == 0) ? no_value : shootRange), isInvisible: ((shootMGRange_vis + shootTARange_vis) == 0),
					paramsArr:	[	{title: 'IDS_SHIP_PARAM_ARTILLERY',				value: shootMGRange,	isInvisible: (shootMGRange_vis == 0)},
									{title: 'IDS_SHIP_PARAM_TORPEDOES',				value: shootTARange,	isInvisible: (shootTARange_vis == 0)},
								],
				},

			{ title: 'IDS_SHIP_PARAM_HANGAR_SIZE',	value: shipHangarSize, isInvisible: !(shipHangarSize_vis),
				paramsArr:	[	{title: 'IDS_FIGHTER', 			value: hangarSizeFighter,	isInvisible: (hangarSizeFighter_vis == 0) || (hangarSizeFighter_vis == undefined)},
								{title: 'IDS_TORPEDOBOMBER', 	value: hangarSizeBomber,	isInvisible: (hangarSizeBomber_vis == 0) || (hangarSizeBomber_vis == undefined)},
								{title: 'IDS_DIVEBOMBER', 		value: hangarSizeDive,		isInvisible: (hangarSizeDive_vis == 0) || (hangarSizeDive_vis == undefined)},
							],
			},

			{ title: 'IDS_SHIP_PARAM_ATBA_SHORT', value: no_value, isInvisible: (atbaRange_vis == 0),
				paramsArr: 	[	{title: 'IDS_SHIP_PARAM_MAX_DIST', 	value: atbaRange},
								{title: 'IDS_SHIP_PARAM_EFFICIENCY', value: atbaEfficiency},
							],
			},

			{ title: 'IDS_SHIP_PARAM_AA', value: no_value, isInvisible: ((aaBaseNearState_vis + aaBaseMidState_vis + aaBaseFarState_vis) == 0),
				paramsArr:	[	{title: 'IDS_SHIP_PARAM_MAX_DIST', 	value: aaRange},
								{title: 'IDS_AA_NEAR_EFFICIENCY',	value: aaNearEfficiency,	isInvisible: (aaBaseNearState_vis == 0)},
								{title: 'IDS_AA_MID_EFFICIENCY',	value: aaMidEfficiency,		isInvisible: (aaBaseMidState_vis == 0)},
								{title: 'IDS_AA_FAR_EFFICIENCY',	value: aaFarEfficiency,		isInvisible: (aaBaseFarState_vis == 0)}
								]
				},

				{ 	title: tr('IDS_LOCAL_WEATHER_SHIP_PARAM_HEADER_' + weatherName), 
					value: no_value, isInvisible: (weatherName == null) || !(weatherStates.length), isNegative: true,
					paramsArr: [ {title: 'IDS_LOCAL_WEATHER_SHIP_PARAM_DESCRIPTION_' + weatherName, value: no_value, isTextParam: true} ]
				}
		]"/>
		</block>
		<block className="PlaneParamsArray">
			<bind name="firstEntityDH" value="'ownSquadronesEntity'; CC.ownSquadron; 'selected'"/>
			<bind name="watchDH" value="'planeType'; []; ownSquadronesEntity.plane.planeType"/>
			<bind name="var" value="{ planeIconNames: ['plane_scout_own', 'plane_bomber_own', 'plane_torpedo_own', 'plane_fighter_own_bg'] }"/>
			<bind name="watch" value="'planeIconName'; planeIconNames[planeType]"/>
			<bind name="watch" value="'planeTypeStr'; 	planeType == 1	? 'Dive' :
									planeType == 2	? 'Bomber'
													: 'Fighter'"/>
			<bind name="primaryEntityDH" value="'maxPlanesNumEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + planeTypeStr + '_' + 'maxPlanesNum'"/>
			<bind name="watchDH" value="'maxPlanesNum'; ['maxPlanesNumEntity.parameter.evChanged']; (format(maxPlanesNumEntity.parameter.currentValue, 1, true) + tr(''))"/>
			<bind name="primaryEntityDH" value="'visibilityDistByShipEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + planeTypeStr + '_' + 'visibilityDistByShip'"/>
			<bind name="watchDH" value="'visibilityDistByShip'; ['visibilityDistByShipEntity.parameter.evChanged']; (format(visibilityDistByShipEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="watchDH" value="'visibilityDistByShip'+'_vis'; ['visibilityDistByShipEntity.parameter.evChanged']; visibilityDistByShipEntity.parameter.currentValue"/>
			<bind name="primaryEntityDH" value="'visibilityDistByPlaneEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + planeTypeStr + '_' + 'visibilityDistByPlane'"/>
			<bind name="watchDH" value="'visibilityDistByPlane'; ['visibilityDistByPlaneEntity.parameter.evChanged']; (format(visibilityDistByPlaneEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="watchDH" value="'visibilityDistByPlane'+'_vis'; ['visibilityDistByPlaneEntity.parameter.evChanged']; visibilityDistByPlaneEntity.parameter.currentValue"/>
			<bind name="primaryEntityDH" value="'visibilityDistGuaranteedEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + planeTypeStr + '_' + 'visibilityDistGuaranteed'"/>
			<bind name="watchDH" value="'visibilityDistGuaranteed'; ['visibilityDistGuaranteedEntity.parameter.evChanged']; (format(visibilityDistGuaranteedEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="watchDH" value="'visibilityDistGuaranteed'+'_vis'; ['visibilityDistGuaranteedEntity.parameter.evChanged']; visibilityDistGuaranteedEntity.parameter.currentValue"/>
			<bind name="primaryEntityDH" value="'planeVisionRangeEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + planeTypeStr + '_' + 'visionRange'"/>
			<bind name="watchDH" value="'planeVisionRange'; ['planeVisionRangeEntity.parameter.evChanged']; (format(planeVisionRangeEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="primaryEntityDH" value="'attackPrepareTimeEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + planeTypeStr + '_' + 'attackPrepareTime'"/>
			<bind name="watchDH" value="'attackPrepareTime'; ['attackPrepareTimeEntity.parameter.evChanged']; (format(attackPrepareTimeEntity.parameter.currentValue, 1, true) + tr('IDS_SECOND_SPACE'))"/>
			<bind name="primaryEntityDH" value="'attackProcessTimeEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + planeTypeStr + '_' + 'attackProcessTime'"/>
			<bind name="watchDH" value="'attackProcessTime'; ['attackProcessTimeEntity.parameter.evChanged']; (format(attackProcessTimeEntity.parameter.currentValue, 1, true) + tr('IDS_SECOND_SPACE'))"/>
			<bind name="primaryEntityDH" value="'attackReloadTimeEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + planeTypeStr + '_' + 'attackReloadTime'"/>
			<bind name="watchDH" value="'attackReloadTime'; ['attackReloadTimeEntity.parameter.evChanged']; (format(attackReloadTimeEntity.parameter.currentValue, 1, true) + tr('IDS_SECOND_SPACE'))"/>
			<bind name="primaryEntityDH" value="'torpedoMaxDistEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + planeTypeStr + '_' + 'torpedoMaxDist'"/>
			<bind name="watchDH" value="'torpedoMaxDist'; ['torpedoMaxDistEntity.parameter.evChanged']; (format(torpedoMaxDistEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
			<bind name="watchDH" value="'torpedoMaxDist'+'_vis'; ['torpedoMaxDistEntity.parameter.evChanged']; torpedoMaxDistEntity.parameter.currentValue"/>
			<bind name="watch" value="'planeParams';
		[	{ title: toUpperCase('IDS_SHIP_PARAM_PLANE_NAME_' + planeTypeStr), value: maxPlanesNum, iconPath: 'symbol:' + planeIconName },

			{ title: 'IDS_SHIP_TOOLTIP_VISIBILITY', value: no_value,
				paramsArr: 	[ 	{ title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_BY_SHIP', value: visibilityDistByShip, isInvisible: (visibilityDistByShip_vis == 0) },
								{ title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_BY_PLANE', value: visibilityDistByPlane, isInvisible: (visibilityDistByPlane_vis == 0) },
								{ title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_IN_SMOKE', value: visibilityDistGuaranteed, isInvisible: (visibilityDistGuaranteed_vis == 0) },
			]
			},

			{ title: 'IDS_PARAM_SELF_VISIBLE_RANGE', value: planeVisionRange},

			{ title: 'IDS_SHIP_PARAM_TORPEDO_MAX_DIST', value: torpedoMaxDist, isInvisible: !(torpedoMaxDist_vis)},

			{ title: 'IDS_SHIP_PARAM_PLANE_SQUAD', value: no_value,
				paramsArr: 	[ 	{ title: 'IDS_SHIP_PARAM_PLANE_PREPARE_TIME', value: attackPrepareTime },
								{ title: 'IDS_SHIP_PARAM_PLANE_PROCESS_TIME', value: attackProcessTime },
								{ title: 'IDS_SHIP_PARAM_PLANE_RELOAD_TIME', value: attackReloadTime },
							]
			},


			{ title: 'IDS_SPECTATE_CARRIER', iconName: 'carrier_small_own', iconHeight: '11px'},
			{ title: 'IDS_SHIP_TOOLTIP_VISIBILITY', value: visibilityRange, paramsArr:
				[	{ title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_BY_SHIP',	value: visibilityByShipRangeBase },
					{ title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_BY_PLANE', value: visibilityPlaneRange },
					{ title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_IN_SMOKE', value: visibilityInSmokeRangeBase}
				]
			},

			{ title: 'IDS_SHIP_PARAM_HANGAR_SIZE',	value: shipHangarSize, isInvisible: !(shipHangarSize_vis),
				paramsArr:	[	{title: 'IDS_FIGHTER', 			value: hangarSizeFighter,	isInvisible: (hangarSizeFighter_vis == 0) || (hangarSizeFighter_vis == undefined)},
								{title: 'IDS_TORPEDOBOMBER', 	value: hangarSizeBomber,	isInvisible: (hangarSizeBomber_vis == 0) || (hangarSizeBomber_vis == undefined)},
								{title: 'IDS_DIVEBOMBER', 		value: hangarSizeDive,		isInvisible: (hangarSizeDive_vis == 0) || (hangarSizeDive_vis == undefined)},
							],
			},

		]"/>
		</block>
		<block>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
			<style>
				<position value="absolute"/>
				<backgroundColor value="0x01000000"/>
				<width value="224px"/>
				<height value="72px"/>
				<left value="6"/>
				<bottom value="228"/>
			</style>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<bottom value="9px"/>
				<left value="230px"/>
			</style>
			<bind name="fade" value="isCommandDown || (rollOver &amp;&amp; playerIsAlive); 0.07; {alpha: 0}; {alpha: 1}; {alpha: 0}"/>
			<block>
				<style>
					<width value="320px"/>
				</style>
				<block>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<alpha value="1.2"/>
					</style>
					<bind name="instance" value="'TooltipBackground'; {_isInBattle: true}"/>
				</block>
				<block>
					<bind name="visible" value="activeSquadron == -1"/>
					<style>
						<width value="100%"/>
						<margin value="2px|2px|3px|2px"/>
					</style>
					<bind name="repeat" value="shipParams; 'ShipParamsTooltipHeader'; {_paramsLength: shipParams.length}"/>
				</block>
				<block>
					<bind name="visible" value="activeSquadron != -1"/>
					<style>
						<width value="100%"/>
						<margin value="2px|2px|3px|2px"/>
					</style>
					<bind name="repeat" value="planeParams; 'ShipParamsTooltipHeader'; {_paramsLength: planeParams.length}"/>
				</block>
			</block>
			<bind name="firstEntityDH" value="'selfVehicleEntity'; CC.selfVehicle"/>
			<bind name="watch" value="'modifiersCollectionPath'; 'byOwner.' + selfVehicleEntity.vehicle.id"/>
			<bind name="collectionDH" value="CC.shipModifier; 'modifiersCollection'; modifiersCollectionPath"/>
			<block>
				<bind name="instance" value="'ShipModifiersTooltipContent'; modifiersCollection.length &gt; 0 ? {_modifiersCollectionPath: modifiersCollectionPath, _modifiersCount: modifiersCollection.length} : null"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ShipModifiersTooltipContent">
		<style>
			<width value="320px"/>
		</style>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<alpha value="1.2"/>
			</style>
			<bind name="instance" value="'TooltipBackground'; {_isInBattle: true}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<margin value="2px|2px|3px|2px"/>
			</style>
			<bind name="collectionRepeatDH" value="CC.shipModifier; 'ShipModifierParams'; _modifiersCollectionPath; {_modifiersCount: _modifiersCount}"/>
		</block>
	</block>
	<block className="ShipModifierParams">
		<style>
			<width value="100%"/>
		</style>
		<bind name="dataRefDH" value="'modifierEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'name'; []; modifierEntity.shipModifier.name"/>
		<bind name="watchDH" value="'level'; ['modifierEntity.shipModifier.evLevelChanged']; modifierEntity.shipModifier.level"/>
		<bind name="watchDH" value="'maxLevel'; []; modifierEntity.shipModifier.maxLevel"/>
		<bind name="watchDH" value="'attributes'; ['modifierEntity.attributes.evChanged']; modifierEntity.attributes"/>
		<bind name="watch" value="'modifierHeader';
		{ 	title: tr(toUpperCase('IDS_SHIP_MODIFIER_PARAM_HEADER_' + name)), iconPath: 'symbol:icon_ship_modifier_' + name + '_small',
			value: maxLevel != 0 ? subst('IDS_SHIP_MODIFIER_PARAM_LEVEL', [], {level: level, maxLevel: maxLevel}) : no_value, isNegative: modifierEntity.shipModifier.isNegative
		}
	"/>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'ShipParamsTooltipHeader'; modifierHeader"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginBottom value="2px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<top value="-3px"/>
					<marginLeft value="-1px"/>
					<marginRight value="-1px"/>
					<position value="absolute"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="inner_panel" type="native">
					<bind name="style" value="'marginBottom'; (($index &lt; (_modifiersCount - 1)) ? '0px' : '-2px')"/>
					<style>
						<alpha value="1.5"/>
					</style>
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<alpha value="0.9"/>
					<paddingTop value="18px"/>
					<paddingLeft value="12px"/>
					<paddingRight value="12px"/>
					<marginBottom value="-8px"/>
				</style>
				<bind name="instance" value="'ParamsModifierList'; { _attributesPositive: attributes.positive,
													_attributesNegative: attributes.negative,
													_attributesNeutral:	attributes.neutral, 
													_shrinkHeight: true}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="($index &lt; (_modifiersCount - 1)) ? true : false"/>
			<style>
				<width value="100%"/>
				<position value="absolute"/>
				<marginLeft value="-1px"/>
				<marginRight value="-1px"/>
				<bottom value="1"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ShipParamsArray">
		<bind name="primaryEntityDH" value="'mgVisibilityTimeEntity'; CC.parameter; selfAvatarEntityId + '_' + 'mgVisibilityTime'"/>
		<bind name="watchDH" value="'mgVisibilityTime'; ['mgVisibilityTimeEntity.parameter.evChanged']; (format(mgVisibilityTimeEntity.parameter.currentValue, 1, true) + tr('IDS_SECOND_SPACE'))"/>
		<bind name="primaryEntityDH" value="'visibilityRangeEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityRange'"/>
		<bind name="watchDH" value="'visibilityRange'; ['visibilityRangeEntity.parameter.evChanged']; (format(visibilityRangeEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="primaryEntityDH" value="'visibilityByShipRangeGKEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityByShipRangeGK'"/>
		<bind name="watchDH" value="'visibilityByShipRangeGK'; ['visibilityByShipRangeGKEntity.parameter.evChanged']; (format(visibilityByShipRangeGKEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="primaryEntityDH" value="'visibilityByShipRangeFireEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityByShipRangeFire'"/>
		<bind name="watchDH" value="'visibilityByShipRangeFire'; ['visibilityByShipRangeFireEntity.parameter.evChanged']; (format(visibilityByShipRangeFireEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="primaryEntityDH" value="'visibilityByShipRangeATBAEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityByShipRangeATBA'"/>
		<bind name="watchDH" value="'visibilityByShipRangeATBA'; ['visibilityByShipRangeATBAEntity.parameter.evChanged']; (format(visibilityByShipRangeATBAEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="watchDH" value="'visibilityByShipRangeATBA'+'_vis'; ['visibilityByShipRangeATBAEntity.parameter.evChanged']; visibilityByShipRangeATBAEntity.parameter.currentValue"/>
		<bind name="primaryEntityDH" value="'visibilityPlaneRangeEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityPlaneRange'"/>
		<bind name="watchDH" value="'visibilityPlaneRange'; ['visibilityPlaneRangeEntity.parameter.evChanged']; (format(visibilityPlaneRangeEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="primaryEntityDH" value="'visibilityByPlaneRangeBaseEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityByPlaneRangeBase'"/>
		<bind name="watchDH" value="'visibilityByPlaneRangeBase'; ['visibilityByPlaneRangeBaseEntity.parameter.evChanged']; (format(visibilityByPlaneRangeBaseEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="primaryEntityDH" value="'visibilityByShipRangeBaseEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityByShipRangeBase'"/>
		<bind name="watchDH" value="'visibilityByShipRangeBase'; ['visibilityByShipRangeBaseEntity.parameter.evChanged']; (format(visibilityByShipRangeBaseEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="primaryEntityDH" value="'visibilityByPlaneRangeGKEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityByPlaneRangeGK'"/>
		<bind name="watchDH" value="'visibilityByPlaneRangeGK'; ['visibilityByPlaneRangeGKEntity.parameter.evChanged']; (format(visibilityByPlaneRangeGKEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="primaryEntityDH" value="'visibilityByPlaneRangeFireEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityByPlaneRangeFire'"/>
		<bind name="watchDH" value="'visibilityByPlaneRangeFire'; ['visibilityByPlaneRangeFireEntity.parameter.evChanged']; (format(visibilityByPlaneRangeFireEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="primaryEntityDH" value="'visibilityByPlaneRangeATBAEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityByPlaneRangeATBA'"/>
		<bind name="watchDH" value="'visibilityByPlaneRangeATBA'; ['visibilityByPlaneRangeATBAEntity.parameter.evChanged']; (format(visibilityByPlaneRangeATBAEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="primaryEntityDH" value="'visibilityInSmokeRangeBaseEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityInSmokeRangeBase'"/>
		<bind name="watchDH" value="'visibilityInSmokeRangeBase'; ['visibilityInSmokeRangeBaseEntity.parameter.evChanged']; (format(visibilityInSmokeRangeBaseEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="primaryEntityDH" value="'visibilityInSmokeRangeGKEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityInSmokeRangeGK'"/>
		<bind name="watchDH" value="'visibilityInSmokeRangeGK'; ['visibilityInSmokeRangeGKEntity.parameter.evChanged']; (format(visibilityInSmokeRangeGKEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="primaryEntityDH" value="'visibilityRangeUnderwaterEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visibilityRangeUnderwater'"/>
		<bind name="watchDH" value="'visibilityRangeUnderwater'; ['visibilityRangeUnderwaterEntity.parameter.evChanged']; (format(visibilityRangeUnderwaterEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="watchDH" value="'visibilityRangeUnderwater'+'_vis'; ['visibilityRangeUnderwaterEntity.parameter.evChanged']; visibilityRangeUnderwaterEntity.parameter.currentValue"/>
		<bind name="primaryEntityDH" value="'aaBaseNearStateEntity'; CC.parameter; selfAvatarEntityId + '_' + 'aaBaseNearState'"/>
		<bind name="watchDH" value="'aaBaseNearState'; ['aaBaseNearStateEntity.parameter.evChanged']; (format(aaBaseNearStateEntity.parameter.currentValue, 1, true) + tr(''))"/>
		<bind name="primaryEntityDH" value="'aaCurrentNearStateEntity'; CC.parameter; selfAvatarEntityId + '_' + 'aaCurrentNearState'"/>
		<bind name="watchDH" value="'aaCurrentNearState'; ['aaCurrentNearStateEntity.parameter.evChanged']; (format(aaCurrentNearStateEntity.parameter.currentValue, 1, true) + tr(''))"/>
		<bind name="watch" value="'aaNearEfficiency'; format(aaCurrentNearState / aaBaseNearState * 100, 0) + '%'"/>
		<bind name="primaryEntityDH" value="'aaBaseMidStateEntity'; CC.parameter; selfAvatarEntityId + '_' + 'aaBaseMidState'"/>
		<bind name="watchDH" value="'aaBaseMidState'; ['aaBaseMidStateEntity.parameter.evChanged']; (format(aaBaseMidStateEntity.parameter.currentValue, 1, true) + tr(''))"/>
		<bind name="primaryEntityDH" value="'aaCurrentMidStateEntity'; CC.parameter; selfAvatarEntityId + '_' + 'aaCurrentMidState'"/>
		<bind name="watchDH" value="'aaCurrentMidState'; ['aaCurrentMidStateEntity.parameter.evChanged']; (format(aaCurrentMidStateEntity.parameter.currentValue, 1, true) + tr(''))"/>
		<bind name="watch" value="'aaMidEfficiency'; format(aaCurrentMidState / aaBaseMidState * 100, 0) + '%'"/>
		<bind name="primaryEntityDH" value="'aaBaseFarStateEntity'; CC.parameter; selfAvatarEntityId + '_' + 'aaBaseFarState'"/>
		<bind name="watchDH" value="'aaBaseFarState'; ['aaBaseFarStateEntity.parameter.evChanged']; (format(aaBaseFarStateEntity.parameter.currentValue, 1, true) + tr(''))"/>
		<bind name="primaryEntityDH" value="'aaCurrentFarStateEntity'; CC.parameter; selfAvatarEntityId + '_' + 'aaCurrentFarState'"/>
		<bind name="watchDH" value="'aaCurrentFarState'; ['aaCurrentFarStateEntity.parameter.evChanged']; (format(aaCurrentFarStateEntity.parameter.currentValue, 1, true) + tr(''))"/>
		<bind name="watch" value="'aaFarEfficiency'; format(aaCurrentFarState / aaBaseFarState * 100, 0) + '%'"/>
		<bind name="primaryEntityDH" value="'atbaBaseStateEntity'; CC.parameter; selfAvatarEntityId + '_' + 'atbaBaseState'"/>
		<bind name="watchDH" value="'atbaBaseState'; ['atbaBaseStateEntity.parameter.evChanged']; (format(atbaBaseStateEntity.parameter.currentValue, 1, true) + tr(''))"/>
		<bind name="primaryEntityDH" value="'atbaCurrentStateEntity'; CC.parameter; selfAvatarEntityId + '_' + 'atbaCurrentState'"/>
		<bind name="watchDH" value="'atbaCurrentState'; ['atbaCurrentStateEntity.parameter.evChanged']; (format(atbaCurrentStateEntity.parameter.currentValue, 1, true) + tr(''))"/>
		<bind name="watch" value="'atbaEfficiency'; format(atbaCurrentState / atbaBaseState * 100, 0)+ '%'"/>
		<bind name="primaryEntityDH" value="'shootRangeEntity'; CC.parameter; selfAvatarEntityId + '_' + 'shootRange'"/>
		<bind name="watchDH" value="'shootRange'; ['shootRangeEntity.parameter.evChanged']; (format(shootRangeEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="watchDH" value="'shootRange'+'_vis'; ['shootRangeEntity.parameter.evChanged']; shootRangeEntity.parameter.currentValue"/>
		<bind name="primaryEntityDH" value="'aaRangeNearEntity'; CC.parameter; selfAvatarEntityId + '_' + 'aaRangeNear'"/>
		<bind name="watchDH" value="'aaRangeNear'; ['aaRangeNearEntity.parameter.evChanged']; (format(aaRangeNearEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="primaryEntityDH" value="'aaRangeMidEntity'; CC.parameter; selfAvatarEntityId + '_' + 'aaRangeMid'"/>
		<bind name="watchDH" value="'aaRangeMid'; ['aaRangeMidEntity.parameter.evChanged']; (format(aaRangeMidEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="primaryEntityDH" value="'aaRangeFarEntity'; CC.parameter; selfAvatarEntityId + '_' + 'aaRangeFar'"/>
		<bind name="watchDH" value="'aaRangeFar'; ['aaRangeFarEntity.parameter.evChanged']; (format(aaRangeFarEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="watchDH" value="'aaRangeNear'+'_vis'; ['aaRangeNearEntity.parameter.evChanged']; aaRangeNearEntity.parameter.currentValue"/>
		<bind name="watchDH" value="'aaRangeMid'+'_vis'; ['aaRangeMidEntity.parameter.evChanged']; aaRangeMidEntity.parameter.currentValue"/>
		<bind name="watchDH" value="'aaRangeFar'+'_vis'; ['aaRangeFarEntity.parameter.evChanged']; aaRangeFarEntity.parameter.currentValue"/>
		<bind name="watch" value="'aaRange'; (	((aaRangeNear_vis &gt; 0)	? (aaRangeNear + ' / ') : '') + 
								((aaRangeMid_vis &gt; 0)	? (aaRangeMid + ' / ')	: '') +
								((aaRangeFar_vis &gt; 0)	? aaRangeFar : '')
							)
	"/>
		<bind name="watch" value="'aa_vis'; (aaRangeNear_vis + aaRangeMid_vis + aaRangeFar_vis)"/>
		<bind name="watchDH" value="'aaBaseNearState'+'_vis'; ['aaBaseNearStateEntity.parameter.evChanged']; aaBaseNearStateEntity.parameter.currentValue"/>
		<bind name="watchDH" value="'aaBaseMidState'+'_vis'; ['aaBaseMidStateEntity.parameter.evChanged']; aaBaseMidStateEntity.parameter.currentValue"/>
		<bind name="watchDH" value="'aaBaseFarState'+'_vis'; ['aaBaseFarStateEntity.parameter.evChanged']; aaBaseFarStateEntity.parameter.currentValue"/>
		<bind name="primaryEntityDH" value="'atbaRangeEntity'; CC.parameter; selfAvatarEntityId + '_' + 'atbaRange'"/>
		<bind name="watchDH" value="'atbaRange'; ['atbaRangeEntity.parameter.evChanged']; (format(atbaRangeEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="watchDH" value="'atbaRange'+'_vis'; ['atbaRangeEntity.parameter.evChanged']; atbaRangeEntity.parameter.currentValue"/>
		<bind name="primaryEntityDH" value="'shootTARangeEntity'; CC.parameter; selfAvatarEntityId + '_' + 'shootTARange'"/>
		<bind name="watchDH" value="'shootTARange'; ['shootTARangeEntity.parameter.evChanged']; (format(shootTARangeEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="watchDH" value="'shootTARange'+'_vis'; ['shootTARangeEntity.parameter.evChanged']; shootTARangeEntity.parameter.currentValue"/>
		<bind name="primaryEntityDH" value="'shootMGRangeEntity'; CC.parameter; selfAvatarEntityId + '_' + 'shootMGRange'"/>
		<bind name="watchDH" value="'shootMGRange'; ['shootMGRangeEntity.parameter.evChanged']; (format(shootMGRangeEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="watchDH" value="'shootMGRange'+'_vis'; ['shootMGRangeEntity.parameter.evChanged']; shootMGRangeEntity.parameter.currentValue"/>
		<bind name="primaryEntityDH" value="'visionRangeEntity'; CC.parameter; selfAvatarEntityId + '_' + 'visionRange'"/>
		<bind name="watchDH" value="'visionRange'; ['visionRangeEntity.parameter.evChanged']; (format(visionRangeEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="firstEntityDH" value="'localWeatherEntity'; CC.localWeather"/>
		<bind name="watchDH" value="'weatherName'; ['localWeatherEntity.localWeather.evChanged']; toUpperCase(localWeatherEntity.localWeather.gpName)"/>
		<bind name="collectionDH" value="CC.state; 'avatarStatesRoot'; 'byEntity.' + selfAvatarEntityId"/>
		<bind name="collectionDesign" value="DES_avatarStatesRoot; 'weatherStates'; {'filter': $entity.state.type == EntityState.INSIDE_WEATHER}"/>
		<bind name="primaryEntityDH" value="'shipHangarSizeEntity'; CC.parameter; selfAvatarEntityId + '_' + 'shipHangarSize'"/>
		<bind name="watchDH" value="'shipHangarSize'; ['shipHangarSizeEntity.parameter.evChanged']; (format(shipHangarSizeEntity.parameter.currentValue, 1, true) + tr(''))"/>
		<bind name="watchDH" value="'shipHangarSize'+'_vis'; ['shipHangarSizeEntity.parameter.evChanged']; shipHangarSizeEntity.parameter.currentValue"/>
		<bind name="primaryEntityDH" value="'hangarSizeFighterEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + 'Fighter' + '_' + 'hangarSize'"/>
		<bind name="watchDH" value="'hangarSizeFighter'; ['hangarSizeFighterEntity.parameter.evChanged']; (format(hangarSizeFighterEntity.parameter.currentValue, 1, true) + tr(''))"/>
		<bind name="watchDH" value="'hangarSizeFighter'+'_vis'; ['hangarSizeFighterEntity.parameter.evChanged']; hangarSizeFighterEntity.parameter.currentValue"/>
		<bind name="primaryEntityDH" value="'hangarSizeBomberEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + 'Bomber' + '_' + 'hangarSize'"/>
		<bind name="watchDH" value="'hangarSizeBomber'; ['hangarSizeBomberEntity.parameter.evChanged']; (format(hangarSizeBomberEntity.parameter.currentValue, 1, true) + tr(''))"/>
		<bind name="watchDH" value="'hangarSizeBomber'+'_vis'; ['hangarSizeBomberEntity.parameter.evChanged']; hangarSizeBomberEntity.parameter.currentValue"/>
		<bind name="primaryEntityDH" value="'hangarSizeDiveEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + 'Dive' + '_' + 'hangarSize'"/>
		<bind name="watchDH" value="'hangarSizeDive'; ['hangarSizeDiveEntity.parameter.evChanged']; (format(hangarSizeDiveEntity.parameter.currentValue, 1, true) + tr(''))"/>
		<bind name="watchDH" value="'hangarSizeDive'+'_vis'; ['hangarSizeDiveEntity.parameter.evChanged']; hangarSizeDiveEntity.parameter.currentValue"/>
		<bind name="watch" value="'shipParams';
			[	{ title: 'IDS_SHIP_TOOLTIP_VISIBILITY', value: visibilityRange, paramsArr:
					[	{ title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_BY_SHIP',									value: visibilityByShipRangeBase,
							paramsArr:	[	{title: 'IDS_PARAM_VISIBILITY_GK',								value: visibilityByShipRangeGK,		isInvisible: (shootMGRange_vis == 0)},
											{title: 'IDS_VISIBILITY_DIST_BY_GK_IN_SMOKE_HUD_TOOLTIP',		value: visibilityInSmokeRangeGK,	isInvisible: (shootMGRange_vis == 0)},
											{title: 'IDS_PARAM_VISIBILITY_AA',								value: visibilityByShipRangeATBA, 	isInvisible: (aa_vis == 0)},
											{title: 'IDS_PARAM_VISIBILITY_FIRE',							value: visibilityByShipRangeFire},
											{title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_UNDERWATER',			value: visibilityRangeUnderwater, 	isInvisible: (visibilityRangeUnderwater_vis == null)}
										]
						},
						{ title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_BY_PLANE', value: visibilityPlaneRange,
							paramsArr:	[	{title: 'IDS_PARAM_VISIBILITY_GK',								value: visibilityByPlaneRangeGK,	isInvisible: (shootMGRange_vis == 0)},
											{title: 'IDS_PARAM_VISIBILITY_AA',								value: visibilityByPlaneRangeATBA,	isInvisible: (aa_vis == 0)},
											{title: 'IDS_PARAM_VISIBILITY_FIRE',							value: visibilityByPlaneRangeFire}
										]
						},
						{ title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_IN_SMOKE', value: visibilityInSmokeRangeBase}
					]
				},

				{ title: 'IDS_PARAM_HIGH_VISIBILITY_TIME',	value: mgVisibilityTime,	isInvisible: (shootMGRange_vis == 0)},

				{ title: 'IDS_PARAM_SELF_VISIBLE_RANGE',	value: visionRange},

			{ title: 'IDS_SHIP_PARAM_MAX_DIST',	value: ((shootRange_vis == 0) ? no_value : shootRange), isInvisible: ((shootMGRange_vis + shootTARange_vis) == 0),
					paramsArr:	[	{title: 'IDS_SHIP_PARAM_ARTILLERY',				value: shootMGRange,	isInvisible: (shootMGRange_vis == 0)},
									{title: 'IDS_SHIP_PARAM_TORPEDOES',				value: shootTARange,	isInvisible: (shootTARange_vis == 0)},
								],
				},

			{ title: 'IDS_SHIP_PARAM_HANGAR_SIZE',	value: shipHangarSize, isInvisible: !(shipHangarSize_vis),
				paramsArr:	[	{title: 'IDS_FIGHTER', 			value: hangarSizeFighter,	isInvisible: (hangarSizeFighter_vis == 0) || (hangarSizeFighter_vis == undefined)},
								{title: 'IDS_TORPEDOBOMBER', 	value: hangarSizeBomber,	isInvisible: (hangarSizeBomber_vis == 0) || (hangarSizeBomber_vis == undefined)},
								{title: 'IDS_DIVEBOMBER', 		value: hangarSizeDive,		isInvisible: (hangarSizeDive_vis == 0) || (hangarSizeDive_vis == undefined)},
							],
			},

			{ title: 'IDS_SHIP_PARAM_ATBA_SHORT', value: no_value, isInvisible: (atbaRange_vis == 0),
				paramsArr: 	[	{title: 'IDS_SHIP_PARAM_MAX_DIST', 	value: atbaRange},
								{title: 'IDS_SHIP_PARAM_EFFICIENCY', value: atbaEfficiency},
							],
			},

			{ title: 'IDS_SHIP_PARAM_AA', value: no_value, isInvisible: ((aaBaseNearState_vis + aaBaseMidState_vis + aaBaseFarState_vis) == 0),
				paramsArr:	[	{title: 'IDS_SHIP_PARAM_MAX_DIST', 	value: aaRange},
								{title: 'IDS_AA_NEAR_EFFICIENCY',	value: aaNearEfficiency,	isInvisible: (aaBaseNearState_vis == 0)},
								{title: 'IDS_AA_MID_EFFICIENCY',	value: aaMidEfficiency,		isInvisible: (aaBaseMidState_vis == 0)},
								{title: 'IDS_AA_FAR_EFFICIENCY',	value: aaFarEfficiency,		isInvisible: (aaBaseFarState_vis == 0)}
								]
				},

				{ 	title: tr('IDS_LOCAL_WEATHER_SHIP_PARAM_HEADER_' + weatherName), 
					value: no_value, isInvisible: (weatherName == null) || !(weatherStates.length), isNegative: true,
					paramsArr: [ {title: 'IDS_LOCAL_WEATHER_SHIP_PARAM_DESCRIPTION_' + weatherName, value: no_value, isTextParam: true} ]
				}
		]"/>
	</block>
	<block className="PlaneParamsArray">
		<bind name="firstEntityDH" value="'ownSquadronesEntity'; CC.ownSquadron; 'selected'"/>
		<bind name="watchDH" value="'planeType'; []; ownSquadronesEntity.plane.planeType"/>
		<bind name="var" value="{ planeIconNames: ['plane_scout_own', 'plane_bomber_own', 'plane_torpedo_own', 'plane_fighter_own_bg'] }"/>
		<bind name="watch" value="'planeIconName'; planeIconNames[planeType]"/>
		<bind name="watch" value="'planeTypeStr'; 	planeType == 1	? 'Dive' :
									planeType == 2	? 'Bomber'
													: 'Fighter'"/>
		<bind name="primaryEntityDH" value="'maxPlanesNumEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + planeTypeStr + '_' + 'maxPlanesNum'"/>
		<bind name="watchDH" value="'maxPlanesNum'; ['maxPlanesNumEntity.parameter.evChanged']; (format(maxPlanesNumEntity.parameter.currentValue, 1, true) + tr(''))"/>
		<bind name="primaryEntityDH" value="'visibilityDistByShipEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + planeTypeStr + '_' + 'visibilityDistByShip'"/>
		<bind name="watchDH" value="'visibilityDistByShip'; ['visibilityDistByShipEntity.parameter.evChanged']; (format(visibilityDistByShipEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="watchDH" value="'visibilityDistByShip'+'_vis'; ['visibilityDistByShipEntity.parameter.evChanged']; visibilityDistByShipEntity.parameter.currentValue"/>
		<bind name="primaryEntityDH" value="'visibilityDistByPlaneEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + planeTypeStr + '_' + 'visibilityDistByPlane'"/>
		<bind name="watchDH" value="'visibilityDistByPlane'; ['visibilityDistByPlaneEntity.parameter.evChanged']; (format(visibilityDistByPlaneEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="watchDH" value="'visibilityDistByPlane'+'_vis'; ['visibilityDistByPlaneEntity.parameter.evChanged']; visibilityDistByPlaneEntity.parameter.currentValue"/>
		<bind name="primaryEntityDH" value="'visibilityDistGuaranteedEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + planeTypeStr + '_' + 'visibilityDistGuaranteed'"/>
		<bind name="watchDH" value="'visibilityDistGuaranteed'; ['visibilityDistGuaranteedEntity.parameter.evChanged']; (format(visibilityDistGuaranteedEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="watchDH" value="'visibilityDistGuaranteed'+'_vis'; ['visibilityDistGuaranteedEntity.parameter.evChanged']; visibilityDistGuaranteedEntity.parameter.currentValue"/>
		<bind name="primaryEntityDH" value="'planeVisionRangeEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + planeTypeStr + '_' + 'visionRange'"/>
		<bind name="watchDH" value="'planeVisionRange'; ['planeVisionRangeEntity.parameter.evChanged']; (format(planeVisionRangeEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="primaryEntityDH" value="'attackPrepareTimeEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + planeTypeStr + '_' + 'attackPrepareTime'"/>
		<bind name="watchDH" value="'attackPrepareTime'; ['attackPrepareTimeEntity.parameter.evChanged']; (format(attackPrepareTimeEntity.parameter.currentValue, 1, true) + tr('IDS_SECOND_SPACE'))"/>
		<bind name="primaryEntityDH" value="'attackProcessTimeEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + planeTypeStr + '_' + 'attackProcessTime'"/>
		<bind name="watchDH" value="'attackProcessTime'; ['attackProcessTimeEntity.parameter.evChanged']; (format(attackProcessTimeEntity.parameter.currentValue, 1, true) + tr('IDS_SECOND_SPACE'))"/>
		<bind name="primaryEntityDH" value="'attackReloadTimeEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + planeTypeStr + '_' + 'attackReloadTime'"/>
		<bind name="watchDH" value="'attackReloadTime'; ['attackReloadTimeEntity.parameter.evChanged']; (format(attackReloadTimeEntity.parameter.currentValue, 1, true) + tr('IDS_SECOND_SPACE'))"/>
		<bind name="primaryEntityDH" value="'torpedoMaxDistEntity'; CC.parameter; selfAvatarEntityId + '_squad_' + planeTypeStr + '_' + 'torpedoMaxDist'"/>
		<bind name="watchDH" value="'torpedoMaxDist'; ['torpedoMaxDistEntity.parameter.evChanged']; (format(torpedoMaxDistEntity.parameter.currentValue, 1, true) + tr('IDS_KILOMETER_SPACE'))"/>
		<bind name="watchDH" value="'torpedoMaxDist'+'_vis'; ['torpedoMaxDistEntity.parameter.evChanged']; torpedoMaxDistEntity.parameter.currentValue"/>
		<bind name="watch" value="'planeParams';
		[	{ title: toUpperCase('IDS_SHIP_PARAM_PLANE_NAME_' + planeTypeStr), value: maxPlanesNum, iconPath: 'symbol:' + planeIconName },

			{ title: 'IDS_SHIP_TOOLTIP_VISIBILITY', value: no_value,
				paramsArr: 	[ 	{ title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_BY_SHIP', value: visibilityDistByShip, isInvisible: (visibilityDistByShip_vis == 0) },
								{ title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_BY_PLANE', value: visibilityDistByPlane, isInvisible: (visibilityDistByPlane_vis == 0) },
								{ title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_IN_SMOKE', value: visibilityDistGuaranteed, isInvisible: (visibilityDistGuaranteed_vis == 0) },
			]
			},

			{ title: 'IDS_PARAM_SELF_VISIBLE_RANGE', value: planeVisionRange},

			{ title: 'IDS_SHIP_PARAM_TORPEDO_MAX_DIST', value: torpedoMaxDist, isInvisible: !(torpedoMaxDist_vis)},

			{ title: 'IDS_SHIP_PARAM_PLANE_SQUAD', value: no_value,
				paramsArr: 	[ 	{ title: 'IDS_SHIP_PARAM_PLANE_PREPARE_TIME', value: attackPrepareTime },
								{ title: 'IDS_SHIP_PARAM_PLANE_PROCESS_TIME', value: attackProcessTime },
								{ title: 'IDS_SHIP_PARAM_PLANE_RELOAD_TIME', value: attackReloadTime },
							]
			},


			{ title: 'IDS_SPECTATE_CARRIER', iconName: 'carrier_small_own', iconHeight: '11px'},
			{ title: 'IDS_SHIP_TOOLTIP_VISIBILITY', value: visibilityRange, paramsArr:
				[	{ title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_BY_SHIP',	value: visibilityByShipRangeBase },
					{ title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_BY_PLANE', value: visibilityPlaneRange },
					{ title: 'IDS_SHIP_PARAM_VISIBILITY_DIST_IN_SMOKE', value: visibilityInSmokeRangeBase}
				]
			},

			{ title: 'IDS_SHIP_PARAM_HANGAR_SIZE',	value: shipHangarSize, isInvisible: !(shipHangarSize_vis),
				paramsArr:	[	{title: 'IDS_FIGHTER', 			value: hangarSizeFighter,	isInvisible: (hangarSizeFighter_vis == 0) || (hangarSizeFighter_vis == undefined)},
								{title: 'IDS_TORPEDOBOMBER', 	value: hangarSizeBomber,	isInvisible: (hangarSizeBomber_vis == 0) || (hangarSizeBomber_vis == undefined)},
								{title: 'IDS_DIVEBOMBER', 		value: hangarSizeDive,		isInvisible: (hangarSizeDive_vis == 0) || (hangarSizeDive_vis == undefined)},
							],
			},

		]"/>
	</block>
	<block className="ShipParamsTooltipHeader">
		<bind name="visible" value="(isInvisible != true)"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
				<alpha value="0.87"/>
				<marginLeft value="12px"/>
				<marginRight value="12px"/>
				<marginBottom value="10px"/>
				<marginTop value="8px"/>
				<align value="middle"/>
			</style>
			<block className="battle_stats_backgrounds" type="native">
				<bind name="visible" value="isNegative == true"/>
				<style>
					<marginLeft value="-12px"/>
					<marginRight value="-12px"/>
					<marginBottom value="-10px"/>
					<marginTop value="-10px"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="gotoAndStop!" value="'red'"/>
			</block>
			<block>
				<bind name="visible" value="!!(iconPath)"/>
				<styleClass value="$MiddleVAlignedAbsolutely"/>
				<style>
					<width value="20px"/>
					<height value="20px"/>
					<backgroundSize value="cover"/>
				</style>
				<bind name="style" value="'backgroundImage'; iconPath"/>
			</block>
			<block type="text">
				<style>
					<width value="100%"/>
					<leading value="-3"/>
				</style>
				<bind name="style" value="'marginLeft'; !!(iconPath) ? 24 : 0"/>
				<styleClass value="$TextDefaultBold17NM"/>
				<bind name="text" value="title"/>
			</block>
			<block type="text">
				<bind name="visible" value="value != no_value"/>
				<styleClass value="$TextDefaultBold17NM"/>
				<style>
					<marginLeft value="12px"/>
				</style>
				<bind name="text" value="value"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="(paramsArr.length &gt; 0)"/>
			<style>
				<width value="100%"/>
				<marginBottom value="2px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<top value="-3px"/>
					<marginLeft value="-1px"/>
					<marginRight value="-1px"/>
					<position value="absolute"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="inner_panel" type="native">
					<bind name="style" value="'marginBottom'; (($index &lt; (_paramsLength - 1)) ? '0px' : '-2px')"/>
					<style>
						<alpha value="1.5"/>
					</style>
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<alpha value="0.9"/>
					<marginTop value="4px"/>
					<marginBottom value="4px"/>
				</style>
				<bind name="repeat" value="paramsArr; 'ShipParamsTooltipSubHeader'; {_paramsLength: paramsArr.length}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="(_paramsLength &gt; 0 &amp;&amp; ($index &lt; (_paramsLength - 1))) ? true : false"/>
			<style>
				<width value="100%"/>
				<position value="absolute"/>
				<marginLeft value="-1px"/>
				<marginRight value="-1px"/>
				<bottom value="1"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ShipParamsTooltipSubHeader">
		<bind name="visible" value="(isInvisible != true)"/>
		<style>
			<width value="100%"/>
			<marginLeft value="12px"/>
			<marginRight value="12px"/>
			<marginTop value="6px"/>
		</style>
		<bind name="watch" value="'bottomMargin';	(($index &lt; (_paramsLength - 1)) &amp;&amp; (paramsArr != null))		? '10px' :
									($index == (_paramsLength - 1))								? '8px'
																								: '4px'"/>
		<bind name="style" value="'marginBottom'; bottomMargin"/>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<bind name="style" value="'leading'; isTextParam ? 0 : -4"/>
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$TextDefaultNM"/>
				<bind name="text" value="title"/>
			</block>
			<block type="text">
				<bind name="visible" value="value != no_value"/>
				<styleClass value="$TextDefaultNM"/>
				<style>
					<marginLeft value="12px"/>
				</style>
				<bind name="text" value="value"/>
			</block>
			<block>
				<bind name="visible" value="isTextParam != true"/>
				<style>
					<position value="absolute"/>
					<width value="100%"/>
					<bottom value="-2px"/>
					<alpha value="0.5"/>
				</style>
				<block className="DottedLine">
					<style>
						<backgroundImage value="symbol:dotted_line"/>
						<backgroundRepeatX value="true"/>
						<width value="100%"/>
						<height value="1px"/>
						<alpha value="0.5"/>
					</style>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="paramsArr.length &gt; 0 ? true : false"/>
			<style>
				<width value="100%"/>
				<alpha value="0.8"/>
				<marginTop value="4px"/>
			</style>
			<bind name="repeat" value="paramsArr; 'ShipParamsTooltipLine'; {_paramsLength: paramsArr.length}"/>
		</block>
	</block>
	<block className="ShipParamsTooltipLine">
		<bind name="visible" value="(isInvisible != true)"/>
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
			<marginLeft value="12px"/>
			<marginRight value="0px"/>
			<marginTop value="6px"/>
		</style>
		<bind name="style" value="'marginBottom'; (($index == (_paramsLength - 1)) ? '0px' : '1px')"/>
		<block type="text">
			<style>
				<width value="100%"/>
				<leading value="-4"/>
			</style>
			<styleClass value="$TextDefaultNM"/>
			<bind name="text" value="title"/>
		</block>
		<block type="text">
			<bind name="visible" value="value != no_value"/>
			<styleClass value="$TextDefaultNM"/>
			<style>
				<marginLeft value="12px"/>
				<bottom value="-11"/>
			</style>
			<bind name="text" value="value"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<width value="100%"/>
				<bottom value="-2px"/>
				<alpha value="0.5"/>
			</style>
			<block className="DottedLine">
				<style>
					<backgroundImage value="symbol:dotted_line"/>
					<backgroundRepeatX value="true"/>
					<width value="100%"/>
					<height value="1px"/>
					<alpha value="0.5"/>
				</style>
			</block>
		</block>
	</block>
	<block className="CentralDangersIndicationContainer">
		<styleClass value="$FullsizeAbsolute"/>
		<style>
			<align value="center|middle"/>
			<hitTest value="false"/>
		</style>
		<bind name="watch" value="'farDist'; _farDist ? _farDist : 260"/>
		<bind name="watch" value="'nearDist'; _nearDist ? _nearDist : 230"/>
		<bind name="watch" value="'innerDist'; _innerDist ? _innerDist : 190"/>
		<bind name="firstEntityDH" value="'airDefenseFocusEntity'; CC.airDefenseFocus"/>
		<bind name="watchDH" value="'airDefenseFocusActive'; ['airDefenseFocusEntity.airDefenseFocus.evActiveChanged']; airDefenseFocusEntity.airDefenseFocus.active"/>
		<bind name="firstEntityDH" value="'ownCarrierEntity'; CC.aircarrier;"/>
		<bind name="watchDH" value="'activeSquadron'; ['ownCarrierEntity.aircarrier.evStateChanged']; ownCarrierEntity ? ownCarrierEntity.aircarrier.activeSquadron : -1"/>
		<bind name="watch" value="'dangersCollectionPath'; activeSquadron == -1 ? 'shipDangers' : 'aircraftDangers'"/>
		<block>
			<style>
				<width value="0"/>
				<height value="0"/>
			</style>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="firstEntityDH" value="'cameraEntity'; CC.camera"/>
				<bind name="watchDH" value="'cameraMode'; ['cameraEntity.camera.evModeChanged']; cameraEntity.camera.mode"/>
				<bind name="firstEntityDH" value="'nearEntity'; CC.nearestEnemyIndication"/>
				<bind name="watchDH" value="'showNearestEnemy'; ['nearEntity.nearestEnemyIndication.evShowNearestEnemyChanged']; nearEntity.nearestEnemyIndication.showNearestEnemy"/>
				<bind name="instance" value="'NearEnemyItemContainer'; cameraMode != 5 &amp;&amp; showNearestEnemy ? {_farDist: farDist, _nearDist: nearDist, _innerDist: innerDist} : null"/>
			</block>
			<block>
				<bind name="visible" value="activeSquadron == -1"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="instance" value="'RecievedDamageContainer'; {_farDist: farDist, _nearDist: nearDist, _innerDist: innerDist}"/>
			</block>
			<block>
				<bind name="visible" value="!(airDefenseFocusActive)"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="instance" value="'DangerItemContainer'; {_dangersPath: dangersCollectionPath, _farDist: farDist, _nearDist: nearDist, _innerDist: innerDist}"/>
			</block>
		</block>
	</block>
	<block className="NearEnemyItemContainer">
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="firstEntityDH" value="'avatar'; CC.playerAvatar"/>
		<bind name="watchDH" value="'isAlive'; ['avatar.health.evKilled']; avatar.health.isAlive"/>
		<bind name="firstEntityDH" value="'ownCarrierEntity'; CC.aircarrier;"/>
		<bind name="watchDH" value="'activeSquadron'; ['ownCarrierEntity.aircarrier.evStateChanged']; ownCarrierEntity ? ownCarrierEntity.aircarrier.activeSquadron : -1"/>
		<bind name="watch" value="'isOnPlane'; activeSquadron != -1"/>
		<bind name="visible" value="isAlive || isOnPlane"/>
		<bind name="firstEntityDH" value="'nearEntity'; CC.nearestEnemyIndication"/>
		<bind name="watchDH" value="'yawToNearestEnemyDegrees'; ['nearEntity.nearestEnemyIndication.evYawToNearestEnemyRelativeDegreesChanged']; nearEntity.nearestEnemyIndication.yawToNearestEnemyRelativeDegrees"/>
		<bind name="instance" value="'CenteredRotationItem'; {_item: 'NearEnemyItem', _rotation: yawToNearestEnemyDegrees, _itemData: {_nearDist: _nearDist}}"/>
	</block>
	<block className="NearEnemyItem">
		<block>
			<style>
				<position value="absolute"/>
				<top value="-230px"/>
				<marginLeft value="-50%"/>
			</style>
			<bind name="style" value="'top'; -(_nearDist) + 'px'"/>
			<block className="sector_nearest_enemy" type="native"/>
		</block>
	</block>
	<block className="RecievedDamageContainer">
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="firstEntityDH" value="'dmgEntity'; CC.damageDanger"/>
		<bind name="handleEventDH" value="'dmgEntity.damageDanger.evDamage'; 'evReceiveDamage'"/>
		<bind name="fxInstance" value="'evReceiveDamage'; 'RecievedDamageItem'; {lifetime: 5, _innerDist: _innerDist}"/>
	</block>
	<block className="RecievedDamageItem">
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="firstEntityDH" value="'cameraEntity'; CC.camera"/>
		<bind name="firstEntityDH" value="'timerEntity'; CC.timer"/>
		<bind name="watchDH" value="'damageYaw'; ['timerEntity.timer.evFrequent']; $args[0] - cameraEntity.camera.yaw"/>
		<bind name="watch" value="'damageYawDegrees'; math.radToGrad(damageYaw)"/>
		<bind name="instance" value="'CenteredRotationItem'; {_item: 'RecievedDamageItemClip', _rotation: damageYawDegrees, _itemData: {_lifetime: lifetime, _innerDist: _innerDist}}"/>
	</block>
	<block className="RecievedDamageItemClip">
		<bind name="dispatch" value="'addedToStage'; 'evShow'; {}; 2"/>
		<bind name="dispatch" value="'evShow'; 'evFadeOut'; {}; 2; 0.3"/>
		<block>
			<style>
				<position value="absolute"/>
				<top value="190px"/>
			</style>
			<bind name="style" value="'top'; _innerDist + 'px'"/>
			<bind name="appear" value="'evShow'; 0.2; 0; {scaleX: 2, scaleY: 2, alpha:0}; {scaleX: 1, scaleY: 1, alpha: 1}; 1"/>
			<bind name="appear" value="'evFadeOut'; _lifetime-0.2; 0; {alpha: 1}; {alpha: 0}"/>
			<block className="danger_damage" type="native"/>
		</block>
	</block>
	<block className="DangerItemContainer">
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="collectionRepeatDH" value="CC.visibleDanger; 'DangerItem'; _dangersPath; {_farDist: _farDist, _nearDist: _nearDist}"/>
	</block>
	<block className="DangerItem">
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="entityDH" value="'dangerEntity'; $dataRef.ref.id"/>
		<bind name="watchDH" value="'dangerYawDegrees'; ['dangerEntity.visibleDanger.evChanged']; dangerEntity.visibleDanger.yawRelativeDegrees"/>
		<bind name="watchDH" value="'dangerType'; ['dangerEntity.visibleDanger.evChanged']; dangerEntity.visibleDanger.type"/>
		<bind name="watch" value="'typeToChild'; dangerType == 0 ? 'CollisionDangerItem' : 'SimpleDangerItem'"/>
		<bind name="instance" value="'CenteredRotationItem'; {_item: typeToChild, _rotation: dangerYawDegrees, _itemData: {_dangerEntityId: dangerEntity.id, _rotation: -(dangerYawDegrees), _farDist: _farDist, _nearDist: _nearDist}}"/>
	</block>
	<block className="CollisionDangerItem">
		<bind name="visible" value="dist == 'near'"/>
		<bind name="entityDH" value="'dangerEntity'; _dangerEntityId"/>
		<bind name="watchDH" value="'state'; ['dangerEntity.collisionDanger.evChanged']; dangerEntity.collisionDanger.state"/>
		<bind name="watch" value="'dist'; state &lt; 3 ? 'far' : 'near'"/>
		<block>
			<bind name="appear" value="'addedToStage'; 0.2; 0; {scaleX: 2, scaleY: 2, alpha:0}; {scaleX: 1, scaleY: 1, alpha: 1}; 1"/>
			<style>
				<position value="absolute"/>
				<top value="-260px"/>
				<marginLeft value="-50%"/>
				<width value="208px"/>
				<height value="52px"/>
				<align value="center|middle"/>
				<backgroundSize value="cover"/>
				<backgroundImage value="symbol:sector_collision_shallow_large"/>
			</style>
			<bind name="style" value="'top'; -(_farDist) + 'px'"/>
			<block className="icon_collision_terrain_center" type="native">
				<style>
					<marginLeft value="32px"/>
					<marginTop value="20px"/>
				</style>
				<bind name="rotation" value="_rotation"/>
			</block>
		</block>
	</block>
	<block className="SimpleDangerItem">
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="entityDH" value="'dangerEntity'; _dangerEntityId"/>
		<bind name="watchDH" value="'dangerType'; ['dangerEntity.visibleDanger.evChanged']; dangerEntity.visibleDanger.type"/>
		<bind name="watchDH" value="'dist'; ['dangerEntity.simpleDanger.evChanged']; dangerEntity.simpleDanger.dist"/>
		<bind name="watchDH" value="'shipSubtype'; []; dangerEntity.avatar.ship.ref.ship.subtype"/>
		<bind name="watch" value="'type'; 	dangerType == 1 ? 'torpedo' : 
							dangerType == 4	? toLowerCase(shipSubtype)
															: 'plane'"/>
		<bind name="y" value="dist == 'near' ? -(_nearDist) : -(_farDist)"/>
		<bind name="changeDispatch" value="dist; 'evToFar'; {}; 2; 'far'"/>
		<bind name="changeDispatch" value="dist; 'evToNear'; {}; 2; 'near'"/>
		<bind name="catch" value="'evToFar'; {secondEvToFar: true}"/>
		<bind name="watch" value="'nearDist'; secondEvToFar ? -(_nearDist) : -(_farDist + 20)"/>
		<bind name="appear" value="'addedToStage'; 0.2; 0; {alpha: 0}; {alpha: 1}; 2"/>
		<bind name="appear" value="'evToFar'; 0.2; 0; { y: nearDist }; { y: -(_farDist) }; 2"/>
		<bind name="appear" value="'evToNear'; 0.2; 0; { y: -(_farDist) }; { y: -(_nearDist) }; 2"/>
		<block>
			<style>
				<position value="absolute"/>
				<width value="32px"/>
				<height value="32px"/>
				<marginLeft value="-50%"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'symbol:icon_danger_' + type + '_' + dist"/>
		</block>
	</block>
	<block className="CenteredRotationItem">
		<styleClass value="$FullsizeAbsolute"/>
		<style>
			<top value="50%"/>
			<left value="50%"/>
		</style>
		<bind name="rotation" value="_rotation"/>
		<block>
			<style>
				<position value="absolute"/>
				<width value="0"/>
				<height value="0"/>
				<marginLeft value="-50%"/>
				<marginTop value="-50%"/>
			</style>
			<bind name="instance" value="_item; _itemData ? _itemData : {}"/>
		</block>
	</block>
	<css name="$IndicatorText">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<marginText value="-3px|-3px|-6px|-5px"/>
		<dropShadowFilter value="0 0 0x000000 0.7 2.0 2.0 1.0 1"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$IndicatorTextWarning">
		<textColor value="0xFFFF9900"/>
	</css>
	<css name="$IndicatorTextCritical">
		<textColor value="0xFFFF7000"/>
	</css>
	<block className="BattleIndicatorsContainer">
		<bind name="firstEntityDH" value="'ownCarrierEntity'; CC.aircarrier;"/>
		<bind name="watchDH" value="'activeSquadron'; ['ownCarrierEntity.aircarrier.evStateChanged']; ownCarrierEntity ? ownCarrierEntity.aircarrier.activeSquadron : -1"/>
		<bind name="watch" value="'isOnPlane'; activeSquadron != -1"/>
		<bind name="firstEntityDH" value="'avatar'; CC.playerAvatar"/>
		<bind name="watchDH" value="'isAlive'; ['avatar.health.evKilled']; avatar.health.isAlive"/>
		<bind name="visible" value="isAlive || isOnPlane"/>
		<styleClass value="$FullsizeAbsolute"/>
		<style>
			<align value="center|middle"/>
			<hitTest value="false"/>
		</style>
		<block>
			<style>
				<width value="0"/>
				<height value="0"/>
			</style>
			<block>
				<style>
					<position value="absolute"/>
					<left value="250"/>
					<bottom value="217"/>
				</style>
				<bind name="instance" value="'DetectIndicator'; {_isPlane: isOnPlane}"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<left value="340"/>
					<bottom value="226"/>
				</style>
				<bind name="instance" value="'IntuitionIndicator';  (isOnPlane == false) ? {} : null"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<left value="-250"/>
					<bottom value="156"/>
				</style>
				<bind name="instance" value="'FightersWardIndicator'; isOnPlane ? {} : null"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<left value="-250"/>
					<bottom value="217"/>
				</style>
				<bind name="instance" value="'DetectIndicator';  isOnPlane ? {_isPlane: false, _isOnSquadron: true} : null"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<left value="-340"/>
					<bottom value="226"/>
				</style>
				<bind name="instance" value="'WeatherIndicator'; {}"/>
			</block>
		</block>
	</block>
	<block className="DetectIndicator">
		<bind name="firstEntityDH" value="'bi'; CC.battleIndication"/>
		<bind name="firstEntityDH" value="'selfAvatarEntity'; CC.playerAvatar"/>
		<bind name="watchDH" value="'shipSpotType'; 			['bi.alertIndication.evSpottedChanged']; 		bi.alertIndication.spotType"/>
		<bind name="watchDH" value="'shipSpotFlags'; 		['bi.alertIndication.evSpottedChanged']; 		bi.alertIndication.spotFlags"/>
		<bind name="watchDH" value="'shipFocusedEnemies'; 	['bi.alertIndication.evFocusedEnemiesChanged']; bi.alertIndication.focusedEnemies"/>
		<bind name="watchDH" value="'squadronSpotType'; 		['bi.alertIndication.evSquadronSpottedChanged']; 			bi.alertIndication.squadronSpotType"/>
		<bind name="watchDH" value="'squadronSpotFlags'; 	['bi.alertIndication.evSquadronSpottedChanged']; 			bi.alertIndication.squadronSpotFlags"/>
		<bind name="watchDH" value="'underFighterAttack'; 	['bi.alertIndication.evUnderFighterAttackStatusChanged']; 	bi.alertIndication.underFighterAttackStatus"/>
		<bind name="watchDH" value="'underAntiAirAttack'; 	['bi.alertIndication.evUnderAntiAirAttackChanged'];			bi.alertIndication.underAntiAirAttack"/>
		<bind name="watchDH" value="'antiAirThreatCount'; 	['bi.alertIndication.evAntiAirThreatCountChanged']; 		bi.alertIndication.antiAirThreatCount"/>
		<bind name="watch" value="'isUnderFighterAttack'; _isPlane &amp;&amp; underFighterAttack &gt; 0"/>
		<bind name="watch" value="'isUnderAntiAirAttack'; _isPlane &amp;&amp; underAntiAirAttack"/>
		<bind name="watch" value="'spotType'; _isPlane ? squadronSpotType : shipSpotType"/>
		<bind name="watch" value="'focusedEnemies'; _isPlane ? (underAntiAirAttack ? antiAirThreatCount : 0) 
											: shipFocusedEnemies"/>
		<bind name="watch" value="'alertVisible'; _isPlane ? squadronSpotFlags &gt; 0 : shipSpotFlags &gt; 0"/>
		<bind name="var" value="{isVolley: false, volleyLifeTime: 1.0}"/>
		<bind name="catch" value="'evSetVolley'"/>
		<bind name="handleEventDH" value="'bi.alertIndication.evArtilleryAlert'; 'evVolley'; {}; 2"/>
		<bind name="dispatch" value="'evVolley'; !(_isPlane) ? 'evSetVolley' : ''; {isVolley: true}"/>
		<bind name="dispatchDelayReset" value="'evVolley'; 'evSetVolley'; {isVolley: false}; 2; volleyLifeTime"/>
		<bind name="transition" value="alertVisible; 0.3; 	{alpha: 0, scaleX: 2, scaleY: 2};
											{alpha: 1, scaleX: 1, scaleY: 1};
											{alpha: 0, scaleX: 2, scaleY: 2};
											alertVisible ? 2 : 1"/>
		<bind name="watch" value="'iconName'; 	isUnderFighterAttack		? (underFighterAttack == 1 ? 'fighters_warning' : 'fighters_critical') :
							 	isHit &amp;&amp; _isOnSquadron 		? 'attacked':
							 	isUnderAntiAirAttack 		? 'antiAir' :
							 	isVolley 					? 'volley' :
							 	spotType 					? spotType 
															: 'ship'"/>
		<bind name="var" value="{showDuration: 4}"/>
		<bind name="var" value="{isHit:	false}"/>
		<bind name="handleEventDH" value="'selfAvatarEntity.vehicle.evHit'; 'evAircraftHit'"/>
		<bind name="catch" value="'evAircraftHit'; {isHit: true}"/>
		<bind name="dispatchDelayReset" value="'evAircraftHit'; 'evDelayedAircraftHit'; {}; 2; showDuration"/>
		<bind name="catch" value="'evDelayedAircraftHit'; {isHit: false}"/>
		<block>
			<styleClass value="$MiddleVHAbsolutely"/>
			<block>
				<bind name="appear" value="'iconName'+varChanged; 0.2; 0; 	{scaleX: 2, scaleY: 2, left: -32, top: -32};
															{scaleX: 1, scaleY: 1, left: 0, top: 0}; 2"/>
				<style>
					<align value="center"/>
					<width value="64px"/>
					<height value="64px"/>
				</style>
				<block>
					<style>
						<width value="32px"/>
						<height value="32px"/>
						<align value="center|bottom"/>
					</style>
					<bind name="instance" value="'VisibilityItemsClip'; {_iconName: iconName ? iconName : 'ship'}"/>
				</block>
				<block type="text">
					<styleClass value="$IndicatorText"/>
					<style>
						<marginTop value="5px"/>
						<textAlign value="center"/>
						<leading value="-3"/>
					</style>
					<bind name="class" value="isVolley || ((underFighterAttack == 2) &amp;&amp; _isPlane) || (isHit &amp;&amp; (_isOnSquadron == true)) ? '$IndicatorTextCritical' : '$IndicatorTextWarning'"/>
					<bind name="watch" value="'iconLabel';	isUnderFighterAttack				? 'IDS_UNDER_FIGHTERS_ATTACK' :
							 				isUnderAntiAirAttack 				? 'IDS_UNDER_ANTI_AIR_ATTACK' :
							 				isVolley 							? 'IDS_VOLLEY':
							 				isHit &amp;&amp; (_isOnSquadron == true)	? 'IDS_ATTACKED'
												 								: 'IDS_DETECTED'"/>
					<bind name="text" value="(_isOnSquadron == true) &amp;&amp; (_isPlane == false) ? iconLabel + '_AIRCARRIER' : iconLabel"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="fade" value="(focusedEnemies &gt; 0) &amp;&amp; (_isOnSquadron != true); 0.15; {alpha: 0}; {alpha: 1}; {alpha: 0}; 2"/>
			<style>
				<position value="absolute"/>
				<top value="-27px"/>
				<left value="17px"/>
				<align value="center|middle"/>
				<height value="0px"/>
				<width value="0px"/>
			</style>
			<bind name="style" value="'top'; _isPlane || _isOnSquadron ? '-32px' : '-27px'"/>
			<bind name="style" value="'left'; _isPlane || _isOnSquadron ? '24px' : '17px'"/>
			<block>
				<style>
					<position value="absolute"/>
				</style>
				<bind name="fade" value="(focusedEnemies &gt; 0) &amp;&amp; (_isOnSquadron != true); 0.15; {alpha: 0, scaleX: 2, scaleY: 2}; {alpha: 1, scaleX: 1, scaleY: 1}; {alpha: 0, scaleX: 2, scaleY: 2}; 2"/>
				<block>
					<style>
						<position value="absolute"/>
						<width value="32px"/>
						<height value="32px"/>
						<left value="50%"/>
						<top value="50%"/>
						<marginLeft value="-50%"/>
						<marginTop value="-50%"/>
						<backgroundImage value="symbol:icon_visibility_priority"/>
					</style>
				</block>
			</block>
			<block type="text">
				<bind name="visible" value="focusedEnemies &gt; 0"/>
				<styleClass value="$TextDefaultBoldNM"/>
				<styleClass value="$IndicatorTextWarning"/>
				<style>
					<fontSize value="18"/>
					<marginTop value="-1px"/>
				</style>
				<bind name="text" value="focusedEnemies"/>
			</block>
		</block>
	</block>
	<block className="VisibilityItemsClip">
		<bind name="child" value="_iconName; {}; {	fighters_warning: 		'IconVisibilityFightersWarning',
									fighters_critical: 		'IconVisibilityFightersCritical',
									antiAir:				'IconVisibilityAntiAir',
									volley: 				'IconVisibilityVolley',
									ship: 					'IconVisibilityShip',
									plane: 					'IconVisibilityPlane',
									common_xray: 			'IconVisibilityCommonXray',
									attacked:				'IconVisibilityAircarrierAttacked',
									radar: 					'IconVisibilityRadar',
									rls: 					'IconVisibilityRLS',
									sonar: 					'IconVisibilitySonar'}"/>
	</block>
	<block className="IconVisibilityFightersWarning">
		<style>
			<width value="31px"/>
			<height value="30px"/>
			<backgroundImage value="symbol:icon_visibility_fighters_warning"/>
		</style>
	</block>
	<block className="IconVisibilityFightersCritical">
		<style>
			<width value="31px"/>
			<height value="30px"/>
			<backgroundImage value="symbol:icon_visibility_fighters_critical"/>
		</style>
	</block>
	<block className="IconVisibilityAntiAir">
		<style>
			<width value="32px"/>
			<height value="32px"/>
			<backgroundImage value="symbol:icon_visibility_antiair"/>
		</style>
	</block>
	<block className="IconVisibilityVolley">
		<style>
			<width value="6px"/>
			<height value="24px"/>
			<backgroundImage value="symbol:icon_visibility_volley"/>
		</style>
	</block>
	<block className="IconVisibilityShip">
		<style>
			<width value="6px"/>
			<height value="24px"/>
			<backgroundImage value="symbol:icon_visibility_ship"/>
		</style>
	</block>
	<block className="IconVisibilityPlane">
		<style>
			<width value="28px"/>
			<height value="28px"/>
			<backgroundImage value="symbol:icon_visibility_plane"/>
		</style>
	</block>
	<block className="IconVisibilityRadar">
		<style>
			<width value="28px"/>
			<height value="28px"/>
			<backgroundImage value="symbol:icon_visibility_ship"/>
		</style>
	</block>
	<block className="IconVisibilityAircarrierAttacked">
		<style>
			<width value="30px"/>
			<height value="30px"/>
			<backgroundImage value="symbol:icon_aircarrier_attacked"/>
		</style>
	</block>
	<block className="IconVisibilityRLS">
		<style>
			<width value="33px"/>
			<height value="32px"/>
			<backgroundImage value="symbol:icon_visibility_rls"/>
		</style>
	</block>
	<block className="IconVisibilitySonar">
		<style>
			<width value="33px"/>
			<height value="32px"/>
			<backgroundImage value="symbol:icon_visibility_sonar"/>
		</style>
	</block>
	<block className="IconVisibilityCommonXray">
		<style>
			<width value="34px"/>
			<height value="29px"/>
			<backgroundImage value="symbol:icon_visibility_xray"/>
		</style>
	</block>
	<block className="IntuitionIndicator">
		<bind name="firstEntityDH" value="'bi'; CC.battleIndication"/>
		<bind name="watchDH" value="'intuitionActive'; ['bi.alertIndication.evIntuitionActiveChanged']; bi.alertIndication.intuitionActive"/>
		<bind name="fade" value="intuitionActive; 0.15; {alpha: 0, scaleX: 2, scaleY: 2}; {alpha: 1, scaleX: 1, scaleY: 1}; {alpha: 0, scaleX: 2, scaleY: 2}; 2"/>
		<block>
			<style>
				<position value="absolute"/>
				<left value="50%"/>
				<top value="50%"/>
				<marginLeft value="-50%"/>
				<marginTop value="-50%"/>
				<align value="center"/>
			</style>
			<block>
				<style>
					<width value="32px"/>
					<height value="32px"/>
					<align value="center|bottom"/>
				</style>
				<block>
					<style>
						<width value="25px"/>
						<height value="25px"/>
						<backgroundImage value="symbol:icon_anti_intuition"/>
					</style>
				</block>
			</block>
			<block type="text">
				<styleClass value="$IndicatorText"/>
				<style>
					<marginTop value="5px"/>
				</style>
				<bind name="text" value="'IDS_DETECTED_BY_ENEMY_SHIP'"/>
			</block>
		</block>
	</block>
	<block className="FightersWardIndicator">
		<bind name="firstEntityDH" value="'bi'; CC.battleIndication"/>
		<bind name="watchDH" value="'wardInsideLifeTime'; 	['bi.fightersWardIndication.evWardTimerChanged']; bi.fightersWardIndication.wardInsideLifeTime"/>
		<bind name="var" value="{curState: 'normal'}"/>
		<bind name="watch" value="'state'; 	wardInsideLifeTime == 0		? curState :
							wardInsideLifeTime &lt;= 5		? 'critical' :
						 	wardInsideLifeTime &lt;= 20	? 'warning'
														: 'normal'"/>
		<bind name="catch" value="'state' + varChanged; {curState: state}"/>
		<bind name="watch" value="'iconName'; 'symbol:icon_inside_fighters_ward_' + state"/>
		<bind name="visible" value="wardInsideLifeTime &gt; 0"/>
		<bind name="fade" value="wardInsideLifeTime &gt; 0.2; 0.15; {alpha: 0, scaleX: 2, scaleY: 2}; {alpha: 1, scaleX: 1, scaleY: 1}; {alpha: 0, scaleX: 2, scaleY: 2}; 2"/>
		<block>
			<style>
				<position value="absolute"/>
				<left value="50%"/>
				<top value="50%"/>
				<marginLeft value="-50%"/>
				<marginTop value="-50%"/>
				<align value="center"/>
			</style>
			<block>
				<style>
					<width value="32px"/>
					<height value="32px"/>
					<align value="center|bottom"/>
				</style>
				<block>
					<style>
						<width value="30px"/>
						<height value="32px"/>
						<align value="center|middle"/>
					</style>
					<bind name="style" value="'backgroundImage'; iconName"/>
				</block>
			</block>
			<block type="text">
				<style>
					<height value="20px"/>
					<marginTop value="1px"/>
				</style>
				<bind name="style" value="'alpha'; wardInsideLifeTime != 0 ? 1 : 0"/>
				<styleClass value="$IndicatorText"/>
				<bind name="class" value="	state == 'critical'	? '$IndicatorTextCritical' :
						 	state == 'warning'  	? '$IndicatorTextWarning'
															: '$None'"/>
				<bind name="text" value="countdownFormat(wardInsideLifeTime, 0, true)"/>
			</block>
		</block>
	</block>
	<block className="WeatherIndicator">
		<bind name="firstEntityDH" value="'bi'; CC.battleIndication"/>
		<bind name="watchDH" value="'weatherVisible';	['bi.weatherIndication.evWeatherStateChanged']; 	bi.weatherIndication.weatherState &amp;&amp; bi.weatherIndication.weatherState != 'inv'"/>
		<bind name="watchDH" value="'weatherState'; 		['bi.weatherIndication.evWeatherStateChanged']; 	bi.weatherIndication.weatherState"/>
		<bind name="watchDH" value="'weatherTimeLeft'; 	['bi.weatherIndication.evWeatherTimeLeftChanged']; 	bi.weatherIndication.weatherTimeLeft"/>
		<bind name="firstEntityDH" value="'cameraEntity'; CC.camera"/>
		<bind name="watchDH" value="'visibilityRange'; 	['cameraEntity.camera.evVisibilityRangeChanged']; 	cameraEntity.camera.visibilityRange"/>
		<bind name="fade" value="weatherVisible; 0.15; {alpha: 0, scaleX: 2, scaleY: 2}; {alpha: 1, scaleX: 1, scaleY: 1}; {alpha: 0, scaleX: 2, scaleY: 2}; 2"/>
		<bind name="watch" value="'cycloneInProgress'; weatherState == 'cyclone' || weatherState == 'cyclone_end'"/>
		<bind name="changeDispatch" value="weatherState; 'evCycloneStart'; {}; 2; 'cyclone_start'"/>
		<bind name="changeDispatch" value="weatherState; 'evCycloneEnd'; {}; 2; 'cyclone_end'"/>
		<block>
			<style>
				<align value="center"/>
			</style>
			<styleClass value="$MiddleVHAbsolutely"/>
			<bind name="style" value="'alpha'; weatherState == 'cyclone_start' ? 0.7 : 1"/>
			<block>
				<style>
					<width value="32px"/>
					<height value="32px"/>
					<align value="center|bottom"/>
				</style>
				<block>
					<style>
						<width value="28px"/>
						<height value="23px"/>
						<backgroundImage value="symbol:icon_cyclone_active"/>
					</style>
					<bind name="style" value="'backgroundImage'; 'symbol:icon_cyclone_' + (weatherState == 'cyclone_start' ? 'inactive' : 'active')"/>
				</block>
			</block>
			<block type="text">
				<styleClass value="$IndicatorText"/>
				<style>
					<marginTop value="5px"/>
					<width value="100px"/>
					<textAlign value="center"/>
				</style>
				<bind name="appear" value="'evCycloneStart'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
				<bind name="appear" value="'evCycloneEnd'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
				<bind name="text" value="weatherState == 'cyclone' ? toUpperCase(tr('IDS_CYCLONE')) : countdownFormat(weatherTimeLeft, 0, true)"/>
			</block>
			<block type="text">
				<bind name="fade" value="cycloneInProgress; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
				<styleClass value="$IndicatorText"/>
				<style>
					<position value="absolute"/>
					<width value="100px"/>
					<textAlign value="center"/>
					<top value="-5px"/>
				</style>
				<bind name="text" value="visibilityRange + tr('IDS_KILOMETER_SPACE')"/>
			</block>
		</block>
	</block>
	<block className="SubmarineHUD">
		<bind name="collectionDH" value="CC.consumable; 'consumables'"/>
		<styleClass value="$FullsizeAbsolute"/>
		<block>
			<styleClass value="$MiddleVHAbsolutely"/>
			<block>
				<style>
					<width value="12px"/>
					<height value="12px"/>
					<marginTop value="7px"/>
					<hitTest value="false"/>
					<backgroundSize value="cover"/>
					<backgroundImage value="url:../submarine/submarine-sight.png"/>
				</style>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<block>
				<style>
					<marginRight value="450px"/>
				</style>
				<bind name="instance" value="'SubmarineOxygenBar'; {}"/>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<style>
				<bottom value="14px"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginBottom value="6px"/>
					<hitTest value="false"/>
				</style>
				<bind name="instance" value="'SubmarineTorpedoesReloadBars'; {}"/>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<block>
					<bind name="style" value="'marginRight'; (60*consumables.length - 20) + 'px'"/>
					<bind name="instance" value="'SubmarineWeaponsPanel'; {}"/>
				</block>
			</block>
		</block>
	</block>
	<block className="AircraftHUD">
		<bind name="firstEntityDH" value="'cameraEntity'; CC.camera"/>
		<bind name="watchDH" value="'tacticalMap'; ['cameraEntity.camera.evTacticalStateChanged']; cameraEntity.camera.isTactical"/>
		<bind name="firstEntityDH" value="'ownCarrierEntity'; CC.aircarrier;"/>
		<bind name="watchDH" value="'activeSquadron'; ['ownCarrierEntity.aircarrier.evStateChanged']; ownCarrierEntity.aircarrier.activeSquadron"/>
		<bind name="watchDH" value="'squadronCameraMode'; ['ownCarrierEntity.aircarrier.evSquadronCameraModeChanged']; ownCarrierEntity.aircarrier.squadronCameraMode"/>
		<bind name="firstEntityDH" value="'airDefenseFocusEntity'; CC.airDefenseFocus"/>
		<bind name="watchDH" value="'airDefenseFocusActive'; ['airDefenseFocusEntity.airDefenseFocus.evActiveChanged']; airDefenseFocusEntity.airDefenseFocus.active"/>
		<bind name="primaryEntityDH" value="'currentSquadronEntity'; CC.ownSquadron; activeSquadron"/>
		<bind name="watchDH" value="'flightState';	['currentSquadronEntity.ownSquadron.evStateChanged']; currentSquadronEntity.ownSquadron.state"/>
		<bind name="firstEntityDH" value="'avatar'; CC.playerAvatar"/>
		<bind name="watchDH" value="'timeToLive'; ['avatar.playerAvatar.evWillDieSoon']; avatar.playerAvatar.timeToLive"/>
		<bind name="watchDH" value="'isAlive'; ['avatar.health.evKilled']; avatar.health.isAlive"/>
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="watch" value="'isOnSquadron'; activeSquadron != -1 &amp;&amp; squadronCameraMode == 'default'"/>
		<bind name="watch" value="'isOnNoAvatarCamera'; squadronCameraMode != 'default'"/>
		<bind name="watch" value="'isTimerToDieVisible'; (isOnSquadron &amp;&amp; timeToLive != 0)"/>
		<bind name="watch" value="'isDeathCamera'; !(isOnSquadron || isAlive)"/>
		<bind name="fade" value="!tacticalMap &amp;&amp; !airDefenseFocusActive; 0.08; {alpha: 0}; {alpha: 1}; {alpha: 0}; 0"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="fade" value="isOnSquadron; 0.1; {alpha: 0}; {alpha:1}; {alpha: 0}; isOnSquadron ? 0.18 : 0.05"/>
			<bind name="instance" value="'AirplaneAimIndicators'; {}"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="watch" value="'isFlying'; flightState == 5"/>
			<bind name="fade" value="isFlying; 0.1; {alpha: 0, top: 5}; {alpha:1, top: 0}; {alpha: 0, top: 5}; 0; isFlying ? 0.18 : 0.1"/>
			<bind name="instance" value="'AirplaneHealthBar'; isFlying ? {} : null"/>
		</block>
		<block>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<style>
				<bottom value="180px"/>
			</style>
			<bind name="fade" value="isTimerToDieVisible; 0.1; {alpha: 0, top: 5}; {alpha:1, top: 0}; {alpha: 0, top: 5}; 0; isTimerToDieVisible ? 0.25 : 0"/>
			<bind name="instance" value="'AirplaneDeathWarning'; {}"/>
		</block>
		<block>
			<bind name="fade" value="isOnNoAvatarCamera &amp;&amp; isAlive; 0.08; {alpha: 0, top: 5}; {alpha:1, top: 0}; {alpha: 0, top: 5}; 0; 0.08"/>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<style>
				<bottom value="92px"/>
			</style>
			<block type="text">
				<style>
					<maxWidth value="590"/>
					<textAlign value="center"/>
					<leading value="-6"/>
				</style>
				<styleClass value="$TextDefaultBold21NM"/>
				<bind name="substitute" value="'KEYS'; 8; null; tr('IDS_CLICK_TO_RETURN_TO_AIRCARRIER_INFO'); '_bg'"/>
			</block>
		</block>
		<block>
			<style>
				<bottom value="0px"/>
				<left value="50%"/>
				<position value="absolute"/>
			</style>
			<bind name="fade" value="!isOnNoAvatarCamera &amp;&amp; !isDeathCamera; 0.08; {alpha: 0, top: 5}; {alpha:1, top: 0}; {alpha: 0, top: 5}; 0; 0.08"/>
			<bind name="instance" value="'AircraftCarrierWeaponsPanel'; {}"/>
		</block>
		<block>
			<style>
				<left value="50%"/>
				<position value="absolute"/>
			</style>
			<bind name="fade" value="(isOnSquadron || isOnNoAvatarCamera) &amp;&amp; isAlive; 0.1; {alpha: 0, top: 5}; {alpha:1, top: 0}; {alpha: 0, top: 5}; 0; isOnSquadron ? 0.18 : 0.08"/>
			<bind name="instance" value="'AirCraftStatusLog'; {}"/>
		</block>
	</block>
	<css name="$TextNano">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextSecondary">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextSecondaryNoFilter">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="13"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextSecondaryBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextDefault">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextDefaultBold">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextHeaderBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextHeader">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="19"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextHeaderWhite">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="19"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextHeaderHugeWhite">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="30"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextHeaderBigDefault">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextHeaderBigTeamKiller">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFF96CA"/>
	</css>
	<css name="$TextHeaderBigNegative">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFF6600"/>
	</css>
	<css name="$TextHeaderBigWhite">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextAccent">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="25"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextAccentBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="25"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextAccentSecond">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="60"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextHeaderUnready">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="25"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFF9933"/>
	</css>
	<css name="$TextDefaultWhite">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultWhiteBold">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextSmallCompareNegative">
		<fontFamily value="$WWSDefaultFont"/>
		<textColor value="0xFF6600"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
	</css>
	<css name="$TextSmallWhite">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextSmallGold">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFCC66"/>
	</css>
	<css name="$TextDefaultExpSmall">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$TextSmallNegative">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFF6600"/>
	</css>
	<css name="$TextTurquoiseQuests">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0x00cccc"/>
	</css>
	<css name="$TextLargeHeader">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="21"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextLargeHeaderBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="21"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextLargeHeaderBlack">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="21"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0x08222a"/>
	</css>
	<css name="$TextThumbelina">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="7"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextAccentWhite">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="25"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultTech">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0x9CBABA"/>
	</css>
	<css name="$TextHeaderBigDefaultTech">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="17"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0x9CBABA"/>
	</css>
	<css name="$BlackLabel">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$ZurichCondensedBold"/>
		<fontSize value="13"/>
		<selectable value="false"/>
		<textColor value="0x08222a"/>
	</css>
	<css name="$TextHeaderWhiteBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="19"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$ResultsReward">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="60"/>
		<letterSpacing value="-3"/>
		<marginRight value="2px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextAccentGreyBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<textColor value="0xDDDDDD"/>
		<fontSize value="60"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
	</css>
	<css name="$TextAccentBoldAccountLevel">
		<fontFamily value="$WWSDefaultFontBold"/>
		<textColor value="0xFFFFFF"/>
		<fontSize value="50"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
	</css>
	<css name="$TextAccentBoldAccountLevel1">
		<fontFamily value="$WWSDefaultFontBold"/>
		<textColor value="0xFFFFFF"/>
		<fontSize value="36"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
	</css>
	<css name="$TextAccentBoldAccountLevel2">
		<fontFamily value="$WWSDefaultFontBold"/>
		<textColor value="0xFFFFFF"/>
		<fontSize value="30"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
	</css>
	<css name="$Fullsize">
		<width value="100%"/>
		<height value="100%"/>
	</css>
	<css name="$FullsizeAbsolute">
		<width value="100%"/>
		<position value="absolute"/>
		<height value="100%"/>
	</css>
	<css name="$FullWidth">
		<width value="100%"/>
	</css>
	<css name="$MiddleAligned">
		<marginLeft value="-50%"/>
		<left value="50%"/>
	</css>
	<css name="$MiddleAlignedAbsolutely">
		<position value="absolute"/>
		<marginLeft value="-50%"/>
		<left value="50%"/>
	</css>
	<css name="$MiddleVAligned">
		<top value="50%"/>
		<marginTop value="-50%"/>
	</css>
	<css name="$EyeLevelVAligned">
		<top value="720:360,2160:900ah"/>
		<marginTop value="-50%"/>
	</css>
	<css name="$MiddleVAlignedAbsolutely">
		<position value="absolute"/>
		<top value="50%"/>
		<marginTop value="-50%"/>
	</css>
	<css name="$MiddleVHAbsolutely">
		<position value="absolute"/>
		<top value="50%"/>
		<marginLeft value="-50%"/>
		<marginTop value="-50%"/>
		<left value="50%"/>
	</css>
	<css name="$AlignRight">
		<position value="absolute"/>
		<right value="0"/>
	</css>
	<css name="$MouseDisable">
		<hitTest value="false"/>
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
	</css>
	<css name="$InfoLineBoundaries">
		<marginTop value="6px"/>
		<marginBottom value="6px"/>
	</css>
	<css name="$InfoBlockHorizontalIndent">
		<width value="100%"/>
		<marginLeft value="12px"/>
		<marginRight value="12px"/>
	</css>
	<css name="$InfoBlockIndent">
		<width value="100%"/>
		<marginTop value="9px"/>
		<marginLeft value="12px"/>
		<marginBottom value="9px"/>
		<marginRight value="12px"/>
	</css>
	<css name="$InfoBlockHorizontalIndentNoWidth">
		<marginLeft value="12px"/>
		<marginRight value="12px"/>
	</css>
	<css name="$DockPanelMargins">
		<marginLeft value="13px"/>
		<marginRight value="13px"/>
	</css>
	<css name="$InfoBlockIndentNoWidth">
		<marginBottom value="9px"/>
		<marginTop value="9px"/>
		<marginLeft value="12px"/>
		<marginRight value="12px"/>
	</css>
	<css name="$ShipTechStats">
		<width value="312px"/>
		<top value="32px"/>
		<position value="absolute"/>
		<right value="10px"/>
		<height value="100%"/>
	</css>
	<css name="$TextInputEnterButton">
		<right value="2px"/>
		<top value="50%"/>
		<height value="25px"/>
		<width value="52px"/>
		<position value="absolute"/>
		<marginTop value="-11px"/>
	</css>
	<css name="$TextAreaEnterButton">
		<position value="absolute"/>
		<height value="25px"/>
		<right value="2px"/>
		<width value="52px"/>
		<bottom value="0px"/>
	</css>
	<css name="$DefaultScrollBar">
		<wheelScrollSpeed value="15"/>
		<scrollbarController value="lesta.unbound.style.UbScrollingControllerModern"/>
		<scrollArea value="ModernScrollArea"/>
		<scrollbar value="ModernScrollBar"/>
		<scrollbarTrackMode value="scrollToCursor"/>
	</css>
	<css name="$None"/>
	<css name="$PxHorizontalCorrection">
		<marginLeft value="1px"/>
		<marginRight value="1px"/>
	</css>
	<css name="$PxIndent">
		<marginTop value="1px"/>
		<marginBottom value="1px"/>
		<marginLeft value="1px"/>
		<marginRight value="1px"/>
	</css>
	<css name="$BottomMenu">
		<position value="absolute"/>
		<bottom value="0px"/>
		<width value="100%"/>
		<height value="30px"/>
	</css>
	<block className="HorizontalDivider">
		<styleClass value="$PxHorizontalCorrection"/>
		<style>
			<width value="100%"/>
			<height value="3px"/>
		</style>
		<block className="divider_h" type="native">
			<styleClass value="$Fullsize"/>
		</block>
	</block>
	<css name="$ModernizationAndConsumScrollBar">
		<wheelScrollSpeed value="15"/>
		<scrollbarController value="lesta.unbound.style.UbScrollingControllerModern"/>
		<scrollArea value="ModernScrollArea"/>
		<scrollbar value="ModernScrollBarSimple"/>
		<scrollbarTrackMode value="scrollToCursor"/>
	</css>
	<block className="VerticalDivider">
		<style>
			<height value="100%"/>
			<width value="3px"/>
		</style>
		<block className="divider_v" type="native">
			<styleClass value="$Fullsize"/>
		</block>
	</block>
	<block className="TableDivider">
		<style>
			<backgroundImage value="symbol:dotted_line"/>
			<backgroundRepeatX value="true"/>
			<width value="100%"/>
			<height value="1px"/>
			<alpha value="0.1"/>
		</style>
	</block>
	<block className="Underline">
		<bind name="style" value="'backgroundColor'; (rollOver &amp;&amp; !mouseDown) ? '0xFFFFFFFF' : '0x00856933'"/>
		<bind name="transition" value="(rollOver &amp;&amp; !mouseDown) == true; 0.3; {scaleX : 0, alpha : 0}; {scaleX : 1, alpha :1}"/>
		<style>
			<backgroundColor value="0xFFFFFFFF"/>
			<position value="absolute"/>
			<height value="1px"/>
			<width value="100%"/>
			<bottom value="0px"/>
			<marginLeft value="2px"/>
			<marginRight value="2px"/>
		</style>
	</block>
	<block className="BlurMap">
		<bind name="visible" value="optionData.blurEnabled"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<style>
			<hitTest value="false"/>
		</style>
		<styleClass value="$FullsizeAbsolute"/>
		<block className="mc_blurmap_medium" type="native">
			<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
			<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="blurMap" value="0"/>
		</block>
		<block className="inner_panel" type="native">
			<style>
				<alpha value="0.5"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
	</block>
	<block className="BlurMapLow">
		<bind name="visible" value="optionData.blurEnabled"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<style>
			<hitTest value="false"/>
		</style>
		<styleClass value="$FullsizeAbsolute"/>
		<block className="mc_blurmap5" type="native">
			<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
			<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="blurMap" value="0"/>
		</block>
		<block className="inner_panel" type="native">
			<style>
				<alpha value="0.2"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
	</block>
	<block className="BlurMapNotifications">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="visible" value="optionData.blurEnabled"/>
		<style>
			<position value="absolute"/>
			<width value="100%"/>
			<height value="100%"/>
		</style>
		<block className="mc_blurmap5_feather" type="native">
			<bind name="fade" value="_start; 0.3; {alpha: 0, top: 10}; {alpha: 1, top:0 }; {alpha: 0, top: -20}; 1; 0.15"/>
			<style>
				<width value="100%"/>
				<height value="100%"/>
			</style>
			<bind name="blurMap" value="0"/>
		</block>
	</block>
	<block className="DeclareBlurLayer">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<bind name="visible" value="optionData.blurEnabled"/>
		<block className="transparentPixel" type="native">
			<bind name="blurLayer" value="0"/>
		</block>
		<style>
			<position value="absolute"/>
		</style>
	</block>
	<css name="$ContextMenuListItem">
		<width value="100%"/>
		<height value="29px"/>
	</css>
	<css name="$ContextMenuListItemContent">
		<width value="198px"/>
		<marginLeft value="6px"/>
		<marginRight value="6px"/>
	</css>
	<css name="$ContextMenuDimentions">
		<width value="210px"/>
	</css>
	<block className="DropShadow">
		<styleClass value="$FullsizeAbsolute"/>
		<styleClass value="$MouseDisable"/>
		<block className="drop_shadow" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
				<marginTop value="-2px"/>
				<marginRight value="-6px"/>
				<marginBottom value="-10px"/>
				<marginLeft value="-6px"/>
			</style>
		</block>
	</block>
	<block className="EmptyItem">
		<bind name="visible" value="false"/>
	</block>
	<block className="DottedLine">
		<style>
			<backgroundImage value="symbol:dotted_line"/>
			<backgroundRepeatX value="true"/>
			<width value="100%"/>
			<height value="1px"/>
			<alpha value="0.5"/>
		</style>
	</block>
	<css name="$DefaultTooltipBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -10.0,
		tinyOffset: 2,
		rightOffset: 6,
		bottomOffset: 26
	}"/>
	</css>
	<css name="$DefaultInstantTooltipBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.06,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.06,
		disappearOffset: -10.0,
		tinyOffset: 2,
		rightOffset: 6,
		bottomOffset: 26
	}"/>
	</css>
	<css name="$DefaultMenuBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.07,
		appearOffset: 10.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: 10.0,
		tinyOffset: 0,
		rightOffset: 0,
		bottomOffset: 0
	}"/>
	</css>
	<css name="$RightSubMenuBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.15,
		appearOffset: 0.0,
		disappearDelay: 0.35,
		disappearDuration: 0.1,
		disappearOffset: 5.0,
		tinyOffset: 0,
		rightOffset: 0,
		bottomOffset: 0,
		showDirection: 'right'
	}"/>
	</css>
	<css name="$LeftSubMenuBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.15,
		appearOffset: 0.0,
		disappearDelay: 0.35,
		disappearDuration: 0.1,
		disappearOffset: 5.0,
		tinyOffset: 0,
		rightOffset: 0,
		bottomOffset: 0,
		showDirection: 'left'
	}"/>
	</css>
	<css name="$VerticalInfotipBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -10.0,
		tinyOffset: 2,
		rightOffset: 0,
		bottomOffset: 0
	}"/>
	</css>
	<css name="$VerticalInfotipBehaviourCenter">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -10.0,
		tinyOffset: 2,
		rightOffset: -8,
		bottomOffset: 0,
		screenBottomOffset: 26,
		isTipCenter: true
	}"/>
	</css>
	<css name="$VerticalInfotipBehaviourCenterUpper">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -10.0,
		tinyOffset: 2,
		rightOffset: -8,
		bottomOffset: 0,
		isTipCenter: true,
		fixedDirectionUp: true
	}"/>
	</css>
	<css name="$ReplaysInfotip">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -10.0,

		rightOffset: 300,
		bottomOffset: 0,
		isTipCenter: true
	}"/>
	</css>
	<css name="$ReplaysInfotipFilter">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -10.0,

		rightOffset: 0,
		bottomOffset: 0,
		isTipCenter: true
	}"/>
	</css>
	<css name="$HorizontalInfotipBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -10.0,
		tinyOffset: 0,
		rightOffset: -10,
		bottomOffset: 0,
		isTipCenter: true
	}"/>
	</css>
	<css name="$FightButtonTooltipBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.0,
		disappearOffset: -10.0,
		tinyOffset: 2,
		rightOffset: 6,
		bottomOffset: 26
	}"/>
	</css>
	<css name="$WarningTooltipBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -10.0,
		tinyOffset: 2,
		rightOffset: 6,
		bottomOffset: 26
	}"/>
	</css>
	<css name="$ModuleTreeTooltipBehaviour">
		<userData value="{
		appearDelay: 0.05,
		appearDuration: 0.1,
		appearOffset: 5.0,
		disappearDelay: 0.0,
		disappearDuration: 0.1,
		disappearOffset: -10.0,
		tinyOffset: 2,
		rightOffset: 6,
		bottomOffset: 26
	}"/>
	</css>
	<css name="$SmallListItem">
		<width value="100%"/>
		<height value="18px"/>
	</css>
	<css name="$SmallListItemValue">
		<position value="absolute"/>
		<right value="0px"/>
	</css>
	<css name="$DefaultTooltipWidth">
		<width value="300px"/>
	</css>
	<block className="EmptyLine"/>
	<block className="MouseInstructionTooltip">
		<style>
			<hitTest value="false"/>
		</style>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'TooltipBackground'; {_isInBattle: _isInBattle}"/>
		</block>
		<block>
			<bind name="visible" value="_multiParagraphArray.length &gt; 0"/>
			<styleClass value="$InfoBlockHorizontalIndentNoWidth"/>
			<style>
				<marginTop value="9px"/>
			</style>
			<bind name="style" value="'marginBottom'; _marginBottomParagraphs 												? _marginBottomParagraphs :
									(_multiParagraphArray.length &gt; 0) &amp;&amp; (_mouseInstructions.length &gt; 0)	? '0px'
																											: '5px'"/>
			<bind name="repeat" value="_multiParagraphArray; 'RepeatParagraphItem'; {_maxWidth: _maxWidth, _marginBottom: _marginBottom, _leading: _leading}"/>
		</block>
		<block>
			<bind name="visible" value="_checkedLines.length &gt; 0"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="_checkedLines.length &gt; 0"/>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<bind name="repeat" value="_checkedLines; 'CheckedLineRepeater'; {_maxWidth: _maxWidth, _marginBottom: _marginBottom, _lastIndex: (_checkedLines.length - 1), _leading: _leading}"/>
		</block>
		<block>
			<bind name="visible" value="(_multiParagraphArray.length &gt; 0) &amp;&amp; (_mouseInstructions.length &gt; 0)"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="_mouseInstructions.length &gt; 0"/>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<bind name="repeat" value="_mouseInstructions; 'MouseInstructionRepeater'; {_maxWidth: _maxWidth, _lastIndex: (_mouseInstructions.length - 1), _leading: _leading}"/>
		</block>
	</block>
	<block className="SimpleTooltip">
		<block className="SimpleTooltipTemplate">
			<styleClass value="$DefaultTooltipBehaviour"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="hint_panel" type="native">
				<style>
					<position value="absolute"/>
				</style>
				<styleClass value="$Fullsize"/>
			</block>
			<block type="text">
				<styleClass value="$InfoBlockIndentNoWidth"/>
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="style" value="'leading'; (tooltipText.length &gt; 30 ? 0 : -3)"/>
				<style>
					<maxWidth value="300"/>
				</style>
				<bind name="text" value="tooltipText"/>
			</block>
		</block>
	</block>
	<block className="SubTextTooltip">
		<block className="SubTextTooltipTemplate">
			<styleClass value="$DefaultTooltipBehaviour"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
			<block className="hint_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$InfoBlockIndentNoWidth"/>
				<block type="text">
					<styleClass value="$TextHeaderBold"/>
					<style>
						<leading value="-3"/>
						<maxWidth value="260"/>
					</style>
					<bind name="text" value="tooltipText"/>
				</block>
				<block type="text">
					<styleClass value="$TextHeaderBigDefault"/>
					<style>
						<marginTop value="3px"/>
						<leading value="-3"/>
						<maxWidth value="260"/>
					</style>
					<bind name="text" value="tooltipSubText"/>
				</block>
			</block>
		</block>
	</block>
	<block className="SimpleWarningTooltip">
		<styleClass value="$WarningTooltipBehaviour"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'TooltipBackground'; {_isInBattle: _isInBattle}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<block className="icon_warning_orange" type="native">
				<style>
					<marginTop value="5px"/>
					<marginRight value="2px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 240"/>
				<style>
					<leading value="-3"/>
				</style>
				<bind name="text" value="_text"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="MultipleWarningsTooltip">
		<styleClass value="$WarningTooltipBehaviour"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'TooltipBackground'; {_isInBattle: _isInBattle}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<block className="icon_warning_orange" type="native">
				<style>
					<marginTop value="5px"/>
					<marginRight value="2px"/>
				</style>
			</block>
			<block>
				<bind name="repeat" value="_warningsArr; 'SimpleWarningText'; {}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="SimpleWarningText">
		<block type="text">
			<styleClass value="$TextDefault"/>
			<bind name="class" value="'$FontColorUnready'"/>
			<style>
				<maxWidth value="240"/>
				<leading value="-3"/>
			</style>
			<bind name="text" value="$value"/>
		</block>
	</block>
	<block className="StartButtonWarningsTooltip">
		<styleClass value="$WarningTooltipBehaviour"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'TooltipBackground'; {_isInBattle: _isInBattle}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<block className="icon_warning_orange" type="native">
				<style>
					<marginTop value="5px"/>
					<marginRight value="2px"/>
				</style>
			</block>
			<block>
				<params>
					<param name="name" value="MultipleWarningsTooltip"/>
				</params>
				<bind name="repeat" value="_warningsArr; 'StartButtonWarningText'; {}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="StartButtonWarningText">
		<bind name="firstEntityDH" value="'clanCurrentSeasonEntity'; CC.clanBattleSeason; 'current'"/>
		<bind name="watchDH" value="'cbs_primeTimeStartTime'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.primeTimeStartTime"/>
		<bind name="watchDH" value="'cbs_primeTimeFinishTime'; ['clanCurrentSeasonEntity.clanBattleSeason.evChanged']; clanCurrentSeasonEntity.clanBattleSeason.primeTimeFinishTime"/>
		<bind name="countdown" value="cbs_primeTimeStartTime; 'startPrimeTimeText'; 'HIGHEST,WITH_DAYS'; 'timeoutEvent'"/>
		<bind name="countdown" value="cbs_primeTimeFinishTime; 'finishPrimeTimeText'; 'HIGHEST,WITH_DAYS'; 'timeoutEvent'"/>
		<block type="text">
			<styleClass value="$TextDefault"/>
			<bind name="class" value="'$FontColorUnready'"/>
			<style>
				<maxWidth value="240"/>
				<leading value="-3"/>
			</style>
			<bind name="text" value="$value == 'IDS_CLAN_BATTLES_PRIMETIME_STARTS_IN'	?	subst('IDS_CLAN_BATTLES_PRIMETIME_STARTS_IN', [], {timeLeft: startPrimeTimeText}) 
																		:	$value"/>
		</block>
	</block>
	<block className="TooltipBackground">
		<styleClass value="$FullsizeAbsolute"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'DeclareBlurLayer'; _isInBattle ?  null : {}"/>
			<bind name="instance" value="'BlurMap'; _isInBattle ? null : {}"/>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="(optionData.contrast == true || _isInBattle == true)"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="!(_isInBattle)"/>
			<block className="hint_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
	</block>
	<block className="TimerTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'TooltipBackground'; {_isInBattle: _isInBattle}"/>
		</block>
		<block type="text">
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<styleClass value="$TextHeader"/>
			<bind name="class" value="'$FontSizeHeader4'"/>
			<bind name="pureText" value="_text"/>
		</block>
	</block>
	<block className="PlayerTooltipInvitationCountdown">
		<bind name="countdown" value="_expirationTime; 'countdownText'; 'mm:ss'"/>
		<style>
			<width value="100%"/>
		</style>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="4px"/>
				<marginLeft value="7px"/>
				<marginRight value="4px"/>
				<marginBottom value="3px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<marginRight value="6px"/>
				</style>
				<block>
					<style>
						<marginLeft value="4px"/>
					</style>
					<bind name="instance" value="'FormationPlayerIcon'; {_isEmptySlot: true, _formationType: _formationType}"/>
				</block>
				<block type="text">
					<style>
						<marginLeft value="4px"/>
						<maxWidth value="158"/>
						<leading value="-3"/>
					</style>
					<styleClass value="$TextDefaultBold"/>
					<bind name="class" value="'$FontColorWhite'"/>
					<bind name="text" value="_text"/>
				</block>
				<block type="text">
					<style>
						<top value="-4px"/>
					</style>
					<styleClass value="$TextHeaderBigDefault"/>
					<styleClass value="$AlignRight"/>
					<bind name="class" value="'$FontSizeHeader6'"/>
					<bind name="pureText" value="'-' + countdownText"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="TooltipHeaderWithIcon">
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
			<margin value="16px"/>
		</style>
		<block>
			<bind name="visible" value="_iconPath"/>
			<style>
				<width value="80px"/>
				<height value="80px"/>
			</style>
			<bind name="style" value="'backgroundImage'; _iconPath"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="16px"/>
			</style>
			<block type="text">
				<styleClass value="$TextDefaultBold17NM"/>
				<bind name="class" value="_headerClass ? _headerClass : '$None'"/>
				<style>
					<width value="100%"/>
					<leading value="-5"/>
					<marginTop value="2px"/>
				</style>
				<bind name="text" value="_headerText"/>
			</block>
			<block type="text">
				<bind name="visible" value="_subheaderText"/>
				<styleClass value="$TextDefault17NM"/>
				<bind name="class" value="_subheaderClass ? _subheaderClass : '$None'"/>
				<style>
					<width value="100%"/>
					<leading value="-3"/>
					<marginTop value="16px"/>
				</style>
				<bind name="text" value="_subheaderText"/>
			</block>
		</block>
	</block>
	<block className="TooltipContentTextBlock">
		<style>
			<width value="100%"/>
		</style>
		<block className="inner_panel" type="native">
			<bind name="visible" value="_withBackground == true"/>
			<styleClass value="$FullsizeAbsolute"/>
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<marginTop value="1px"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<margin value="16px"/>
			</style>
			<bind name="repeat" value="_multiParagraphArray; 'RepeatParagraphItemNM'; {_maxWidth: _maxWidth, _marginBottom: _marginBottom, _leading: (_leading ? _leading : -3)}"/>
		</block>
	</block>
	<block className="AccountCompletionRewardTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="340px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeaderBold"/>
				<style>
					<leading value="-3"/>
					<width value="100%"/>
				</style>
				<bind name="text" value="tooltipText"/>
			</block>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<style>
					<marginTop value="3px"/>
					<leading value="-3"/>
					<width value="100%"/>
				</style>
				<bind name="text" value="tooltipSubText"/>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<style>
					<leading value="-3"/>
					<width value="100%"/>
				</style>
				<bind name="text" value="'Награда за регистрацию аккаунта:'"/>
			</block>
		</block>
	</block>
	<block className="VoiceChatOutgoingIcon">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'VoiceChatState'"/>
		<bind name="transition" value="VoiceChatState.outgoing; 0.15; {alpha: 0}; {alpha: 1}"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; VoiceChatState.outgoing ?	{	_multiParagraphArray:  [{_paragraphText: 'IDS_VOICE_CHAT_OUTGOING_STATE_HINT'}],
													_maxWidth: 250, _isInBattle: _isInBattle} : null"/>
		<block>
			<bind name="transition" value="_isSpeaking; 0.15; {alpha: 0.6}; {alpha: 1}"/>
			<block className="icon_voice_chat" type="native"/>
		</block>
	</block>
	<css name="$TextMouseDisable">
		<mouseChildren value="false"/>
		<selectable value="false"/>
		<mouseEnabled value="false"/>
	</css>
	<css name="$MouseEnable">
		<hitTest value="true"/>
		<mouseChildren value="true"/>
		<mouseEnabled value="true"/>
	</css>
	<css name="$FontFamilyDefault">
		<fontFamily value="$WWSDefaultFont"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
	</css>
	<css name="$FontFamilyDefaultBold">
		<fontFamily value="$WWSDefaultFontBold"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
	</css>
	<css name="$Bold">
		<fontFamily value="$WWSDefaultFontBold"/>
	</css>
	<css name="$FontColorDefault">
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$FontColorGrey">
		<textColor value="0xDDDDDD"/>
	</css>
	<css name="$FontColorStrongGrey">
		<textColor value="0x636363"/>
	</css>
	<css name="$FontColorWhite">
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$FontColorBlueish">
		<textColor value="0x9CBABA"/>
	</css>
	<css name="$FontColorStrongBlueish">
		<textColor value="0x758b8b"/>
	</css>
	<css name="$FontColorDarkBlueish">
		<textColor value="0x2B393A"/>
	</css>
	<css name="$FontColorSpecialButton">
		<textColor value="0xFFE8D3"/>
	</css>
	<css name="$FontColorTurquoise">
		<textColor value="0x00cccc"/>
	</css>
	<css name="$FontColorBuoyancy">
		<textColor value="0x13C9F7"/>
	</css>
	<css name="$FontColorHealth">
		<textColor value="0x4ce8aa"/>
	</css>
	<css name="$FontColorGolden">
		<textColor value="0xFFCC66"/>
	</css>
	<css name="$FontColorGold">
		<textColor value="0xFFCC66"/>
	</css>
	<css name="$FontColorFreeExp">
		<textColor value="0xCCFF99"/>
	</css>
	<css name="$FontColorExp">
		<textColor value="0xEEEEEE"/>
	</css>
	<css name="$FontColorUnready">
		<textColor value="0xFF9933"/>
	</css>
	<css name="$FontColorAlmostBlack">
		<textColor value="0x08222a"/>
	</css>
	<css name="$FontColorTeamkiller">
		<textColor value="0xFF96CA"/>
	</css>
	<css name="$FontColorTTK">
		<textColor value="0xc8751c"/>
	</css>
	<css name="$FontColorParty">
		<textColor value="0x00cccc"/>
	</css>
	<css name="$FontColorDefaultButtonUp">
		<textColor value="0xc7e2e2"/>
	</css>
	<css name="$FontColorComparePositive">
		<textColor value="0x4CE8AA"/>
	</css>
	<css name="$FontColorCompareNegative">
		<textColor value="0xFF6600"/>
	</css>
	<css name="$FontColorMercenaries">
		<textColor value="0x4ce8aa"/>
	</css>
	<css name="$FontSizeThumbelina">
		<fontSize value="7"/>
	</css>
	<css name="$FontSizeNano">
		<fontSize value="11"/>
	</css>
	<css name="$FontSizeSmall">
		<fontSize value="13"/>
	</css>
	<css name="$FontSizeDefault">
		<fontSize value="15"/>
	</css>
	<css name="$FontSizeLarge">
		<fontSize value="17"/>
	</css>
	<css name="$FontSizeHeader6">
		<fontSize value="19"/>
	</css>
	<css name="$FontSizeHeader5">
		<fontSize value="21"/>
	</css>
	<css name="$FontSizeHeader4">
		<fontSize value="23"/>
	</css>
	<css name="$FontSizeHeader3">
		<fontSize value="25"/>
	</css>
	<css name="$FontSizeHeader2">
		<fontSize value="30"/>
	</css>
	<css name="$FontSizeHeader1">
		<fontSize value="36"/>
	</css>
	<css name="$FontAccentSize2">
		<fontSize value="50"/>
	</css>
	<css name="$FontAccentSize1">
		<fontSize value="60"/>
	</css>
	<css name="$LetterSpacingSmall">
		<letterSpacing value="0.8"/>
	</css>
	<css name="$InvertedTextEffect">
		<dropShadowFilter value="0 90 0xffffff 1.0 3.0 3.0 0.3"/>
		<textColor value="0x08222a"/>
	</css>
	<css name="$FontGlowFilterBright">
		<dropShadowFilter value="1 90 0xffffff 0.3 5.0 3.0 0.9 2"/>
	</css>
	<css name="$BlockGlowFilterBright">
		<dropShadowFilter value="1 90 0xffffff 0.3 4.0 3.0 0.2 2"/>
	</css>
	<css name="$GlowDisabler">
		<dropShadowFilter value="0 0 0x000000 0 0 0 0 0"/>
	</css>
	<css name="$DropShadowDisabler">
		<dropShadowFilter value="0 0 0x000000 0 0 0 0 0"/>
	</css>
	<css name="$FontDropShadowFilter1">
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
	</css>
	<css name="$FontDropShadowWhite">
		<dropShadowFilter value="0 90 0xffffff 1.0 3.0 3.0 0.3"/>
	</css>
	<css name="$TextDefault12NM">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="12"/>
		<marginText value="-3px|-3px|-6px|-5px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefault13NM">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<marginText value="-3px|-3px|-6px|-5px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold13NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<marginText value="-3px|-3px|-6px|-5px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultNM">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<marginText value="-3px|-3px|-6px|-5px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBoldNM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="15"/>
		<marginText value="-3px|-3px|-6px|-5px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefault17NM">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<marginText value="-3px|-4px|-7px|-6px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold17NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="17"/>
		<marginText value="-3px|-3px|-7px|-6px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefault19NM">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="19"/>
		<marginText value="-3px|-3px|-7px|-5px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold19NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="19"/>
		<marginText value="-3px|-3px|-8px|-6px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefault21NM">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="21"/>
		<marginText value="-3px|-3px|-8px|-7px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold21NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="21"/>
		<marginText value="-3px|-3px|-8px|-7px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold23NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="23"/>
		<marginText value="-3px|-3px|-9px|-6px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefault25NM">
		<fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="25"/>
		<marginText value="-3px|-3px|-9px|-8px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold25NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="25"/>
		<marginText value="-3px|-3px|-9px|-8px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold30NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="30"/>
		<marginText value="-3px|-4px|-11px|-8px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold36NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="36"/>
		<marginText value="-3px|-4px|-12px|-10px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold40NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="40"/>
		<marginText value="-3px|-4px|-13px|-10px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold46NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="46"/>
		<marginText value="-3px|-4px|-12px|-10px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TextDefaultBold60NM">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="60"/>
		<marginText value="-3px|-4px|-20px|-15px"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$ComplaintMenuListItemBattleMargins">
		<marginLeft value="2px"/>
		<marginRight value="2px"/>
	</css>
	<css name="$ComplaintMenuListItemPostbattleMargins">
		<marginLeft value="1px"/>
		<marginRight value="1px"/>
	</css>
	<block className="UIListPlayerContextMenu">
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'dynamicDivisionsData'; 'id'; _selfPlayer.divisionId; 'selfPlayerDivisionData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInvitedToDivision'; _player.name; 'playerInvitationData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'VoiceChatState'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'slimClientData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'evaluationLimits'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<bind name="primaryEntityDH" value="'entityAccountBattle'; CC.avatar; _player.id"/>
		<bind name="watchDH" value="'entityAccountBattleDbId'; [];  entityAccountBattle.accountSimple.dbId"/>
		<bind name="primaryEntityDH" value="'playerEntity'; CC.accountSimple; _playerDbId ? _playerDbId : entityAccountBattleDbId"/>
		<bind name="watchDH" value="'isSuspended'; ['playerEntity.accountSimple.evSuspendedChanged']; playerEntity.accountSimple.suspended"/>
		<bind name="watchDH" value="'isTextChatMuted'; ['playerEntity.avatar.evMuteChanged']; playerEntity.avatar.mute"/>
		<bind name="watchDH" value="'isBotAvatar'; []; playerEntity.avatar.isBot"/>
		<bind name="watchDH" value="'accountDbId'; [];  playerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'groupIdsOfAccount'; ['playerEntity.elementInGroups.evGroupsChanged']; playerEntity.elementInGroups.groupIds"/>
		<bind name="watchDH" value="'isIgnored';['playerEntity.contact.evIsIgnoredChanged']; !!playerEntity.contact.isIgnored"/>
		<bind name="watchDH" value="'canAddGroupEntitiesId'; ['playerEntity.elementInGroups.evCanAddGroupEntitiesChanged', 'dataHub.chat.ref.chat.evRosterChanged']; (playerEntity.elementInGroups) ? playerEntity.elementInGroups.canAddGroupEntitiesId : chat.canAddGroupEntitiesId"/>
		<bind name="watchDH" value="'playerEntityId'; []; playerEntity.id"/>
		<bind name="watch" value="'isInSameDivisionOnStart'; _isInPBS ? _isInSameDivisionOnStart : _player.isInSameDivisionOnStart"/>
		<bind name="watch" value="'isBot'; _isInPBS ? _isBot  : isBotAvatar"/>
		<bind name="serverTime" value="'serverTime'"/>
		<bind name="timeFormat" value="(_player.inviteCooldown - serverTime); 'mm:ss'; 'cooldownTimeText'"/>
		<bind name="watch" value="'isEnemyPlayer'; (_player.relation == 2)"/>
		<bind name="watch" value="'isFreePlacesInDivision'; ((selfPlayerDivisionData[0].staff.length + selfPlayerDivisionData[0].inPortParticipantsCount) &lt; 3)"/>
		<bind name="watch" value="'isDynamicDivisionsEnabled'; (((_battleType == BattleTypes.COOPERATIVE_BATTLE) || (_battleType == BattleTypes.RANDOM_BATTLE)) &amp;&amp;
												slimClientData.isFull)"/>
		<bind name="watch" value="'invitationDisableReason'; (_player.isLeaver)						? 'IDS_INVITATION_DISABLE_REASON_PLAYER_IS_OUT_OF_BATTLE':
											(_player.division != 0)					? 'IDS_INVITATION_DISABLE_REASON_ALREADY_IN_DIVISION' :
											!(_selfPlayer.isAlive)					? 'IDS_DIVISION_MANAGEMENT_LOCKED_FOR_DESTROYED' :
											!(_player.isAlive)						? 'IDS_INVITATION_DISABLE_REASON_DESTROYED' :
											!(isFreePlacesInDivision)				? 'IDS_INVITATION_DISABLE_REASON_NO_FREE_PLACES' :
											!(_player.invitationsEnabled)			? 'IDS_INVITATION_DISABLE_REASON_INVITATIONS_DISABLED' :
											(_player.inviteCooldown &gt; serverTime)	? (tr('IDS_WAIT_TIMEOUT_TO_INVITE_TO_DIVISION')+' '+cooldownTimeText)
																					: 'no_reason'"/>
		<bind name="watch" value="'isDivisionControlsEnable';	isDynamicDivisionsEnabled &amp;&amp;
												(_isInPBS != true) &amp;&amp;
												!(isEnemyPlayer) &amp;&amp;
												!(isBot) &amp;&amp;
												((_selfPlayer.isDivisionCommander) || (_selfPlayer.divisionId == 0)) &amp;&amp;
												!(isSuspended)"/>
		<bind name="watch" value="'canBeInChat';	((_battleType == BattleTypes.CLAN_BATTLE) &amp;&amp; VoiceChatState.enabled &amp;&amp; !(isEnemyPlayer)) ||
								((_player.isInSameDivision &amp;&amp; VoiceChatState.enabled) &amp;&amp; ((_battleType == BattleTypes.RANDOM_BATTLE) ||
																						 (_battleType == BattleTypes.COOPERATIVE_BATTLE) ||
																						 (_battleType == BattleTypes.PVE_BATTLE)))"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'MenuTooltipBackground'; {_isInBattle: _isBattleStats}"/>
		</block>
		<styleClass value="$DefaultMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="class" value="_isBattleStats ? '$ComplaintMenuListItemBattleMargins' : '$ComplaintMenuListItemPostbattleMargins'"/>
			<block>
				<bind name="visible" value="isDivisionControlsEnable"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<bind name="visible" value="_selfPlayer.isDivisionCommander &amp;&amp; _player.isInSameDivision"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="style" value="'alpha'; (_selfPlayer.isAlive) ? 1 : 0.5"/>
					<block>
						<styleClass value="$ContextMenuListItem"/>
						<block className="MenuItem">
							<styleClass value="$Fullsize"/>
							<block className="dock_submenu_item" type="native">
								<styleClass value="$FullsizeAbsolute"/>
							</block>
							<block type="text">
								<styleClass value="$TextDefault"/>
								<styleClass value="$MiddleVAligned"/>
								<styleClass value="$ContextMenuListItemContent"/>
								<bind name="text" value="'IDS_APPOINT_PLAYER_TO_COMMANDER'"/>
							</block>
						</block>
						<bind name="action" value="'click'; 'changeCommander'; {playerId: _player.id, teamId:playerEntity.preBattlePlayerSimple.teamId}"/>
					</block>
					<block>
						<styleClass value="$ContextMenuListItem"/>
						<block className="MenuItem">
							<styleClass value="$Fullsize"/>
							<block className="dock_submenu_item" type="native">
								<styleClass value="$FullsizeAbsolute"/>
							</block>
							<block type="text">
								<styleClass value="$TextDefault"/>
								<styleClass value="$MiddleVAligned"/>
								<styleClass value="$ContextMenuListItemContent"/>
								<bind name="text" value="'IDS_EXCLUDE_PLAYER_OUT_OF_DIVISION'"/>
							</block>
						</block>
						<bind name="action" value="'click'; 'kickPlayerFromDivision'; {playerId: _player.id}"/>
					</block>
					<block>
						<bind name="visible" value="!(_selfPlayer.isAlive)"/>
						<styleClass value="$FullsizeAbsolute"/>
						<style>
							<backgroundColor value="0x0100000"/>
						</style>
						<bind name="tooltip" value="'SimpleWarningTooltip'; !(_selfPlayer.isAlive) ? {_text: tr('IDS_DIVISION_MANAGEMENT_LOCKED_FOR_DESTROYED'), _isInBattle: _isBattleStats} : null"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="!(_player.isInSameDivision)"/>
					<style>
						<width value="100%"/>
					</style>
					<block>
						<bind name="visible" value="(!(_player.isInSameDivision) &amp;&amp; !(playerInvitationData))"/>
						<bind name="style" value="'alpha'; (invitationDisableReason == 'no_reason') ? 1 : 0.5"/>
						<bind name="tooltip" value="'SimpleWarningTooltip'; (invitationDisableReason != 'no_reason') ? {_text: invitationDisableReason, _isInBattle: _isBattleStats} : null"/>
						<style>
							<backgroundColor value="0x01000000"/>
						</style>
						<styleClass value="$ContextMenuListItem"/>
						<block>
							<styleClass value="$Fullsize"/>
							<bind name="style" value="'hitTest';  (invitationDisableReason == 'no_reason') ? true : false"/>
							<block className="MenuItem">
								<styleClass value="$Fullsize"/>
								<block className="dock_submenu_item" type="native">
									<styleClass value="$FullsizeAbsolute"/>
								</block>
								<block type="text">
									<styleClass value="$TextDefault"/>
									<styleClass value="$MiddleVAligned"/>
									<styleClass value="$ContextMenuListItemContent"/>
									<bind name="text" value="'IDS_INVITE_IN_DIVISION'"/>
								</block>
							</block>
						</block>
						<bind name="action" value="'click'; (invitationDisableReason == 'no_reason') ? 'inviteToDivision' : ''; {playerId: _player.id, playerName: _player.name, inviteType: InviteType.COMMON}"/>
					</block>
					<block>
						<bind name="visible" value="!!(playerInvitationData)"/>
						<styleClass value="$ContextMenuListItem"/>
						<block className="MenuItem">
							<styleClass value="$Fullsize"/>
							<block className="dock_submenu_item" type="native">
								<styleClass value="$FullsizeAbsolute"/>
							</block>
							<block type="text">
								<styleClass value="$TextDefault"/>
								<styleClass value="$MiddleVAligned"/>
								<styleClass value="$ContextMenuListItemContent"/>
								<bind name="text" value="'IDS_RECALL_INVITATION'"/>
							</block>
						</block>
						<bind name="action" value="'click'; 'revokeInvitationToDivision'; {id: playerInvitationData.id}"/>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginTop value="3px"/>
						<marginBottom value="2px"/>
						<marginLeft value="-2px"/>
						<marginRight value="-2px"/>
					</style>
					<block className="HorizontalDivider">
						<styleClass value="$PxHorizontalCorrection"/>
						<style>
							<width value="100%"/>
							<height value="3px"/>
						</style>
						<block className="divider_h" type="native">
							<styleClass value="$Fullsize"/>
						</block>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="visible" value="!(_isBattleLoading) &amp;&amp; !(isBot) &amp;&amp; !(isSuspended)"/>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="name" value="'id_complain'"/>
					<bind name="instance" value="'PlayerMenuItemExpanded'; 	{ 	_text: 'IDS_COMPLAIN', _battleType: _battleType, _isInBattle: _isBattleStats,
																_wantPraisePlayer: false, _evaluationLimitsComplain: evaluationLimits.complain,
																_player: _player, _isInPBS: _isInPBS, _playerDbId: _playerDbId ? _playerDbId : entityAccountBattleDbId, _arenaId: _arenaId, _isInSameDivisionOnStart: isInSameDivisionOnStart, _complaintsAvailable: _complaintsAvailable,
																_sortedBy: isEnemyPlayer ? 'team.enemy.complaint.sorted' : 'team.ally.complaint.sorted', 
															 }"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="name" value="'id_praise'"/>
					<bind name="instance" value="'PlayerMenuItemExpanded'; 	{ 	_text: 'IDS_PRAISE', _battleType: _battleType, _isInBattle: _isBattleStats, 
																_wantPraisePlayer: true, _evaluationLimitsPraise: evaluationLimits.praise,
																_player: _player, _isInPBS: _isInPBS, _playerDbId: _playerDbId ? _playerDbId : entityAccountBattleDbId, _arenaId: _arenaId, _isInSameDivisionOnStart: isInSameDivisionOnStart, _complaintsAvailable: _complaintsAvailable,
																_sortedBy: isEnemyPlayer ? 'team.enemy.praise.sorted' : 'team.ally.praise.sorted'
															 }"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="(_isBattleStats == true) &amp;&amp; !(isBot) &amp;&amp; !(isSuspended)"/>
				<bind name="name" value="'id_mute'"/>
				<style>
					<width value="100%"/>
				</style>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="action" value="'buttonClick'; isTextChatMuted ? 'unmuteUser' : 'muteUser'; {id: _player.id}"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginLeft value="7px"/>
						<hitTest value="false"/>
					</style>
					<block className="icon_text_chat_small" type="native">
						<style>
							<top value="6px"/>
							<marginRight value="4px"/>
						</style>
						<bind name="gotoAndStop!" value="(isTextChatMuted ? 'muted' : 'on')"/>
					</block>
					<block type="text">
						<style>
							<width value="100%"/>
							<marginBottom value="3px"/>
							<hitTest value="false"/>
							<marginRight value="4px"/>
							<leading value="-3"/>
						</style>
						<styleClass value="$TextDefault"/>
						<bind name="class" value="isTextChatMuted	? '$FontColorUnready'
													: '$FontColorWhite'"/>
						<bind name="text" value="isTextChatMuted ? 'IDS_UNMUTE_PLAYER_TEXT_CHAT' : 'IDS_MUTE_PLAYER_TEXT_CHAT'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<bind name="visible" value="(canBeInChat &amp;&amp; !(_isInPBS) &amp;&amp; !(isBot) &amp;&amp; !(isSuspended))"/>
				<bind name="name" value="'id_mute_voice'"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="watch" value="'voiceChatMenuText'; 	!(_player.isInVoiceChat) 	? 'IDS_PLAYER_IS_NOT_AVAILABLE_IN_VOICE_CHAT' :
												_player.isMuted				? 'IDS_UNMUTE_PLAYER_VOICE_CHAT'
																			: 'IDS_MUTE_PLAYER_VOICE_CHAT'"/>
				<bind name="watch" value="'state'; 	!(_player.isInVoiceChat)	? 'disabled' :
									_player.isMuted				? 'muted'
																: 'speak'"/>
				<bind name="style" value="'alpha'; !(_player.isInVoiceChat)	? 0.9 : 1"/>
				<bind name="style" value="'hitTest'; !(_player.isInVoiceChat)	? false : true"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="action" value="'buttonClick'; 'toggleVoice'; {playerName: _player.pureName, nickName: _player.name}"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginLeft value="7px"/>
						<hitTest value="false"/>
					</style>
					<block className="icon_voice_chat_small" type="native">
						<style>
							<marginTop value="6px"/>
							<marginRight value="4px"/>
						</style>
						<bind name="gotoAndStop!" value="state"/>
					</block>
					<block type="text">
						<style>
							<width value="100%"/>
							<marginBottom value="3px"/>
							<hitTest value="false"/>
							<marginRight value="4px"/>
							<leading value="-3"/>
						</style>
						<styleClass value="$TextDefault"/>
						<bind name="class" value="	!(_player.isInVoiceChat)	? '$FontColorUnready' :
									_player.isMuted				? '$FontColorUnready'
																: '$FontColorWhite'"/>
						<bind name="text" value="voiceChatMenuText"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block>
				<bind name="visible" value="!(isSuspended) &amp;&amp; !(isBot) &amp;&amp; ((canBeInChat &amp;&amp; _isBattleLoading) || !_isBattleLoading)"/>
				<style>
					<width value="100%"/>
					<marginTop value="3px"/>
					<marginBottom value="2px"/>
					<marginLeft value="-2px"/>
					<marginRight value="-2px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<bind name="dataRefDH" value="'contactsGroups'; 'dataHub.chat.ref.chat.contactsGroups.ref.items'"/>
			<bind name="dataRefDH" value="'chat'; 'dataHub.chat.ref.chat'"/>
			<bind name="var" value="{isChatServerAvailable: false}"/>
			<bind name="watchDH" value="'isChatServerAvailable'; ['chat.evConnected', 'chat.evDisConnected']; chat.isConnected"/>
			<block>
				<bind name="visible" value="!(isBot) &amp;&amp; !(isSuspended)"/>
				<style>
					<backgroundColor value="0x01000000"/>
					<width value="100%"/>
				</style>
				<bind name="style" value="'alpha'; isChatServerAvailable ? 1 : 0.5"/>
				<bind name="tooltip" value="'SimpleWarningTooltip'; !(isChatServerAvailable) ? {_text: tr('IDS_CONTACT_DISABLE_REASON_SERVER_CHAT_DISABLED'), _isInBattle: _isBattleStats} : null"/>
				<block>
					<styleClass value="$ContextMenuListItem"/>
					<bind name="visible" value="((groupIdsOfAccount==null) &amp;&amp; !(isIgnored))"/>
					<bind name="style" value="'hitTest';  isChatServerAvailable ? true : false"/>
					<block className="MenuItem">
						<styleClass value="$Fullsize"/>
						<block className="dock_submenu_item" type="native">
							<styleClass value="$FullsizeAbsolute"/>
						</block>
						<block type="text">
							<styleClass value="$TextDefault"/>
							<styleClass value="$MiddleVAligned"/>
							<styleClass value="$ContextMenuListItemContent"/>
							<bind name="text" value="'IDS_ADD_TO_CONTACTS'"/>
						</block>
					</block>
					<bind name="action" value="'click'; 'addContact'; {dbId: accountDbId}"/>
				</block>
				<block>
					<styleClass value="$ContextMenuListItem"/>
					<bind name="visible" value="((groupIdsOfAccount!=null) &amp;&amp; !(isIgnored))"/>
					<bind name="style" value="'hitTest';  isChatServerAvailable ? true : false"/>
					<block className="MenuItemWithAction">
						<styleClass value="$Fullsize"/>
						<block className="dock_submenu_item" type="native">
							<styleClass value="$FullsizeAbsolute"/>
						</block>
						<block type="text">
							<styleClass value="$TextDefault"/>
							<styleClass value="$MiddleVAligned"/>
							<styleClass value="$ContextMenuListItemContent"/>
							<bind name="text" value="'IDS_REMOVE_FROM_CONTACTS'"/>
						</block>
						<bind name="action" value="'click'; 'removeContact'; {dbId: accountDbId}"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="!(isIgnored) &amp;&amp; ((canAddGroupEntitiesId.length &gt; 0) &amp;&amp; (contactsGroups.length &gt; 1))"/>
					<bind name="style" value="'hitTest'; isChatServerAvailable ? true : false"/>
					<styleClass value="$ContextMenuListItem"/>
					<block className="MenuItem">
						<styleClass value="$Fullsize"/>
						<block className="dock_submenu_item" type="native">
							<styleClass value="$FullsizeAbsolute"/>
						</block>
						<block type="text">
							<styleClass value="$TextDefault"/>
							<styleClass value="$MiddleVAligned"/>
							<styleClass value="$ContextMenuListItemContent"/>
							<bind name="text" value="'IDS_ADD_TO_GROUP'"/>
						</block>
					</block>
					<block className="button_expand_h" type="native">
						<style>
							<position value="absolute"/>
							<right value="6px"/>
						</style>
						<styleClass value="$MouseDisable"/>
						<styleClass value="$MiddleVAligned"/>
					</block>
					<bind name="tooltip" value="'MoveToGroupContextSubMenu'; {_entityAccountId: playerEntityId, canAddGroupEntitiesId: canAddGroupEntitiesId, _dropDown: false, _isInBattle: _isBattleStats}; 7"/>
				</block>
				<block>
					<styleClass value="$ContextMenuListItem"/>
					<bind name="style" value="'hitTest'; isChatServerAvailable ? true : false"/>
					<block className="MenuItem">
						<styleClass value="$Fullsize"/>
						<block className="dock_submenu_item" type="native">
							<styleClass value="$FullsizeAbsolute"/>
						</block>
						<block type="text">
							<styleClass value="$TextDefault"/>
							<styleClass value="$MiddleVAligned"/>
							<styleClass value="$ContextMenuListItemContent"/>
							<bind name="text" value="(!isIgnored) ? 'IDS_IGNORE_PLAYER' : 'IDS_NOT_IGNORE_PLAYER'"/>
						</block>
					</block>
					<bind name="action" value="'click'; 'userIgnoreContact'; {dbId: accountDbId, ignore: !(isIgnored)}"/>
				</block>
				<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
				<bind name="watchDH" value="'clanId'; 	['selfPlayerEntity.clanman.evClanIdChanged']; selfPlayerEntity.clanman.clanId"/>
				<bind name="watchDH" value="'role'; 		['selfPlayerEntity.clanman.evRoleChanged']; selfPlayerEntity.clanman.role"/>
				<bind name="watchDH" value="'isFull'; 	['clanEntity.clanExtended.evIsFullChanged']; clanEntity.clanExtended.isFull"/>
				<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
				<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
				<bind name="watchDH" value="'clanName'; ['clanEntity.clanExtended.evNameChanged']; clanEntity.clanExtended.name"/>
				<bind name="watch" value="'haveOwnClan'; 			clanEntity != null"/>
				<bind name="watch" value="'canInvite'; 				(role == 'executive_officer' || role == 'recruitment_officer' || role == 'commander')"/>
				<bind name="watch" value="'alreadyInYourClan'; 		(playerEntity.clanman != null) &amp;&amp; (playerEntity.clanman.clanId == selfPlayerEntity.clanman.clanId)"/>
				<bind name="watch" value="'alreadyInAnotherClan'; 	(playerEntity.clanman != null) &amp;&amp; (playerEntity.clanman.clanId != selfPlayerEntity.clanman.clanId)"/>
				<bind name="watch" value="'noFreePlacesInClan'; 		isFull"/>
				<block>
					<bind name="visible" value="(haveOwnClan &amp;&amp; canInvite &amp;&amp; !alreadyInYourClan)"/>
					<bind name="action" value="'click'; 'ClanProxy.sendInvite'; { playerDBID: accountDbId }"/>
					<bind name="style" value="'alpha'; (alreadyInAnotherClan || noFreePlacesInClan) ? 0.5 : 1"/>
					<bind name="tooltip" value="'SimpleWarningTooltip'; (alreadyInAnotherClan || noFreePlacesInClan) ? { _text: 	noFreePlacesInClan 		? 'IDS_CLAN_INVITATION_DENY_REASON_CLAN_IS_FULL':
																												alreadyInAnotherClan 	? 'IDS_CLAN_INVITATION_DENY_REASON_PLAYER_ALREADY_IN_CLAN'
																																		: '', 
																										_isInBattle: _isBattleStats} 
																									: null"/>
					<style>
						<backgroundColor value="0x01000000"/>
					</style>
					<styleClass value="$ContextMenuListItem"/>
					<block>
						<styleClass value="$Fullsize"/>
						<block className="MenuItem">
							<styleClass value="$Fullsize"/>
							<block className="dock_submenu_item" type="native">
								<styleClass value="$FullsizeAbsolute"/>
							</block>
							<block type="text">
								<styleClass value="$TextDefault"/>
								<styleClass value="$MiddleVAligned"/>
								<styleClass value="$ContextMenuListItemContent"/>
								<bind name="text" value="'IDS_INVITATION_TO_CLAN'"/>
							</block>
						</block>
						<bind name="style" value="'hitTest'; (alreadyInAnotherClan || noFreePlacesInClan) ? false : true"/>
					</block>
				</block>
				<block>
					<params>
						<param name="name" value="id_profile"/>
					</params>
					<bind name="visible" value="realmConstants.showProfileInBrowser &amp;&amp; _isInPBS"/>
					<styleClass value="$ContextMenuListItem"/>
					<block className="MenuItem">
						<styleClass value="$Fullsize"/>
						<block className="dock_submenu_item" type="native">
							<styleClass value="$FullsizeAbsolute"/>
						</block>
						<block type="text">
							<styleClass value="$TextDefault"/>
							<styleClass value="$MiddleVAligned"/>
							<styleClass value="$ContextMenuListItemContent"/>
							<bind name="text" value="'IDS_PROFILE'"/>
						</block>
					</block>
					<bind name="request" value="'click'; 'showPlayerStats'; { playerId: accountDbId + '',  url: 'playerStats' }"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(isBot == true) || isSuspended"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
					<marginLeft value="7px"/>
					<marginBottom value="3px"/>
					<hitTest value="false"/>
					<marginRight value="4px"/>
					<leading value="-3"/>
					<alpha value="0.7"/>
				</style>
				<styleClass value="$TextDefault"/>
				<bind name="text" value="'IDS_NO_AVAILABLE_ACTIONS'"/>
			</block>
		</block>
	</block>
	<block className="PlayerMenuItemExpanded">
		<styleClass value="$ContextMenuListItem"/>
		<block className="MenuItem">
			<styleClass value="$Fullsize"/>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$ContextMenuListItemContent"/>
				<bind name="text" value="_text"/>
			</block>
		</block>
		<block className="button_expand_h" type="native">
			<style>
				<position value="absolute"/>
				<right value="6px"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
			<styleClass value="$MouseDisable"/>
		</block>
		<bind name="tooltip" value="'PlayerSubMenu'; {	_battleType: _battleType, _isInBattle: _isInBattle, _sortedBy: _sortedBy, _player: _player,
										_isInPBS: _isInPBS, _playerDbId: _playerDbId, _arenaId: _arenaId, _wantPraisePlayer: _wantPraisePlayer,
										_evaluationLimitsComplain: _evaluationLimitsComplain, _evaluationLimitsPraise: _evaluationLimitsPraise,
										_isInSameDivisionOnStart: _isInSameDivisionOnStart, _complaintsAvailable: _complaintsAvailable};
										TooltipBehaviour.submenu"/>
	</block>
	<block className="PlayerSubMenu">
		<bind name="watch" value="'isEvaluationDisabledReason';	(_battleType == BattleTypes.CLAN_BATTLE) 		? _wantPraisePlayer		? 'IDS_PRAISE_DISABLED_FOR_CLAN_BATTLES' 
																														: 'IDS_COMPLAIN_DISABLED_FOR_CLAN_BATTLES' 
																								: 
												(_battleType == BattleTypes.TRAINING_BATTLE)							? 'IDS_CUSTOM_ROOM' :
												(_evaluationLimitsComplain == 0) || (_evaluationLimitsPraise == 0)		? 'IDS_DAY_LIMIT_IS_OFF' :
												_isInSameDivisionOnStart						? _wantPraisePlayer 	? 'IDS_PRAISE_DISABLED_FOR_DIVISION_MEMBERS'
																														: 'IDS_COMPLAIN_DISABLED_FOR_DIVISION_MEMBERS' :
												!(_complaintsAvailable)							? _wantPraisePlayer		? 'IDS_PRAISE_TIMEOUT'
																														: 'IDS_COMPLAIN_TIMEOUT'
																								: false"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<style>
			<width value="270px"/>
		</style>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'MenuTooltipBackground'; { _isInBattle: _isInBattle }"/>
		</block>
		<block>
			<bind name="collectionRepeatDH" value="CC.playerEvaluationInfo; 'PlayerSubMenuItem'; _sortedBy; 
									{ 	_isEvaluationDisabledReason: isEvaluationDisabledReason, _isInPBS: _isInPBS,
									 	_playerDbId: _playerDbId, _arenaId: _arenaId, _player: _player}"/>
		</block>
		<block>
			<bind name="instance" value="'WarningsAndDisableReasons'; { 	_evaluationLimitsComplain: _evaluationLimitsComplain, 
														_evaluationLimitsPraise: _evaluationLimitsPraise, 
														_isEvaluationDisabledReason: isEvaluationDisabledReason }"/>
		</block>
	</block>
	<block className="PlayerSubMenuItem">
		<bind name="dataRefDH" value="'infoEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'evaluationType'; 	[]; infoEntity.playerEvaluationInfo.evaluationType"/>
		<bind name="watchDH" value="'evaluationTopic'; 	[]; infoEntity.playerEvaluationInfo.evaluationTopic"/>
		<bind name="watchDH" value="'messageIDS'; 		[]; infoEntity.playerEvaluationInfo.messageIDS"/>
		<style>
			<width value="270px"/>
		</style>
		<styleClass value="$ContextMenuListItem"/>
		<bind name="name" value="'id_' + messageIDS"/>
		<bind name="style" value="'alpha'; _isEvaluationDisabledReason ? 0.5 : 1"/>
		<bind name="action" value="'buttonClick'; 'sendEvaluation'; _isInPBS ? {type: evaluationType, topic: evaluationTopic, accountDBID: _playerDbId, arenaId: _arenaId}
															: {type: evaluationType, topic: evaluationTopic, nickname: _player.name, arenaId: _arenaId}"/>
		<block className="dock_submenu_item" type="native">
			<bind name="style" value="'hitTest'; _isEvaluationDisabledReason ? false : true"/>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block type="text">
			<styleClass value="$TextDefault"/>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<maxWidth value="252"/>
				<marginLeft value="6px"/>
			</style>
			<bind name="text" value="messageIDS"/>
		</block>
	</block>
	<block className="WarningsAndDisableReasons">
		<bind name="watch" value="'isEvaluationDisabledReason'; 	_isEvaluationDisabledReason "/>
		<bind name="watch" value="'disableReasonComplain'; 		(_evaluationLimitsComplain &gt; 0) &amp;&amp; !(_isEvaluationDisabledReason)"/>
		<bind name="watch" value="'disableReasonPraise'; 		(_evaluationLimitsPraise &gt; 0) &amp;&amp; !(_isEvaluationDisabledReason) "/>
		<bind name="watch" value="'warningTextClass'; 	(disableReasonComplain || disableReasonPraise) 	? '$FontColorUnready' : 
										isEvaluationDisabledReason 						? '$FontColorCompareNegative'
																						: '$None'"/>
		<bind name="watch" value="'warningText'; 		disableReasonComplain 							? (tr('IDS_DAY_LIMIT') + ' ' + _evaluationLimitsComplain) :
										disableReasonPraise 							? (tr('IDS_DAY_LIMIT') + ' ' + _evaluationLimitsPraise) :
										isEvaluationDisabledReason 						? isEvaluationDisabledReason
																						: ''"/>
		<style>
			<marginLeft value="9px"/>
			<marginBottom value="6px"/>
			<flow value="horizontal"/>
		</style>
		<block>
			<bind name="visible" value="disableReasonComplain || disableReasonPraise"/>
			<block className="icon_warning_orange" type="native">
				<style>
					<marginTop value="4px"/>
				</style>
			</block>
		</block>
		<block>
			<bind name="visible" value="isEvaluationDisabledReason"/>
			<block className="icon_warning_red" type="native">
				<style>
					<marginTop value="4px"/>
				</style>
			</block>
		</block>
		<block type="text">
			<params>
				<param name="name" value="warningsAndDisableReasons"/>
			</params>
			<style>
				<maxWidth value="240"/>
				<marginLeft value="1px"/>
			</style>
			<styleClass value="$TextDefault"/>
			<bind name="class" value="warningTextClass"/>
			<bind name="text" value="warningText"/>
		</block>
	</block>
	<block className="UIListVoiceTextChatIcons">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'VoiceChatState'"/>
		<bind name="primaryEntityDH" value="'playerEntity'; CC.avatar; _playerId"/>
		<bind name="watchDH" value="'pureName';			[]; playerEntity.avatar.pureName"/>
		<bind name="watchDH" value="'isTextChatMuted'; ['playerEntity.avatar.evMuteChanged']; playerEntity.avatar.mute"/>
		<bind name="watchDH" value="'relation'; 			['playerEntity.relation.evChanged']; playerEntity.relation.value"/>
		<bind name="watch" value="'isSelf'; (relation == 0)"/>
		<bind name="watch" value="'playerCanBeInChat';	((_battleType == BattleTypes.CLAN_BATTLE) &amp;&amp; VoiceChatState.enabled) ||
										((_isInSameDivision &amp;&amp; VoiceChatState.enabled) &amp;&amp;	((_battleType == BattleTypes.RANDOM_BATTLE) ||
																							(_battleType == BattleTypes.COOPERATIVE_BATTLE) ||
																							(_battleType == BattleTypes.PVE_BATTLE)))"/>
		<bind name="watch" value="'selfCanBeInChat';	((_battleType == BattleTypes.CLAN_BATTLE) &amp;&amp; isSelf) ||
									((isSelf &amp;&amp; _selfPlayerDivisionId) &amp;&amp;  ((_battleType == BattleTypes.RANDOM_BATTLE) ||
																			(_battleType == BattleTypes.COOPERATIVE_BATTLE) ||
																			(_battleType == BattleTypes.PVE_BATTLE)))"/>
		<bind name="watch" value="'canBeInChat'; (playerCanBeInChat || selfCanBeInChat)"/>
		<bind name="name" value="isTextChatMuted ? 'mute_' + pureName
								: 'not_mute_' + pureName"/>
		<block>
			<bind name="visible" value="canBeInChat"/>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="transition" value="canBeInChat &amp;&amp; isTextChatMuted &amp;&amp; (_isSpeaking || _isVoiceChatMuted || !(_isInVoiceChat)); 0.15; {alpha: 1, top: 9}; {alpha: 1, top: 3}; {alpha: 1, top: 9}; 1"/>
			<bind name="watch" value="'state';	!(_isInVoiceChat)	? 'disabled' :
								_isVoiceChatMuted	? 'muted' :
								_isSpeaking			? 'speak'
													: null"/>
			<block>
				<bind name="transition" value="state; 0.1; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1"/>
				<block className="icon_voice_chat_small" type="native">
					<bind name="gotoAndStop!" value="state"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="transition" value="canBeInChat &amp;&amp; isTextChatMuted &amp;&amp; (_isSpeaking || _isVoiceChatMuted || !(_isInVoiceChat)); 0.15; {alpha: 1, top: 8}; {alpha: 1, top: 14}; {alpha: 1, top: 8}; 1"/>
			<block>
				<bind name="transition" value="isTextChatMuted; 0.1; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1"/>
				<block className="icon_text_chat_small" type="native">
					<bind name="gotoAndStop!" value="'muted')"/>
				</block>
			</block>
		</block>
	</block>
	<block className="DropdownInfotip">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<style>
			<width value="1px"/>
		</style>
		<bind name="style" value="'width'; _width ? _width : '100px'"/>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
		</block>
		<block className="dock_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
				<marginTop value="-9px"/>
				<marginRight value="-14px"/>
				<marginBottom value="-19px"/>
				<marginLeft value="-14px"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="_dropdownContentElement; { _menuScope: _menuScope }"/>
		</block>
	</block>
	<block className="InstructionParagraph">
		<style>
			<width value="100%"/>
		</style>
		<block type="text">
			<styleClass value="$TextDefault"/>
			<style>
				<width value="100%"/>
				<alpha value="0.9"/>
			</style>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 220"/>
			<bind name="text" value="_text"/>
		</block>
	</block>
	<block className="InstructionMultiParagraph">
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
		</style>
		<block className="icon_instruction" type="native">
			<bind name="gotoAndStop!" value="_type"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="-3px"/>
			</style>
			<bind name="repeat" value="_instructionArray; 'InstructionParagraph'"/>
		</block>
	</block>
	<block className="InstructionWarning">
		<style>
			<flow value="horizontal"/>
		</style>
		<block className="icon_warning_orange" type="native"/>
		<block type="text">
			<style>
				<marginTop value="-4px"/>
				<marginLeft value="4px"/>
			</style>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 180"/>
			<styleClass value="$WarningTextOrange"/>
			<bind name="style" value="'leading'; _leading ? _leading : -3"/>
			<bind name="text" value="_instructionText"/>
		</block>
	</block>
	<block className="InstructionRestricion">
		<style>
			<flow value="horizontal"/>
		</style>
		<block className="icon_restrict_red" type="native"/>
		<block type="text">
			<style>
				<marginTop value="-3px"/>
				<marginLeft value="4px"/>
			</style>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 180"/>
			<styleClass value="$WarningTextRed"/>
			<bind name="style" value="'leading'; _leading ? _leading : -3"/>
			<bind name="text" value="_instructionText"/>
		</block>
	</block>
	<block className="InstructionIsOwned">
		<style>
			<flow value="horizontal"/>
		</style>
		<block className="icon_check" type="native"/>
		<block type="text">
			<styleClass value="$TextDefaultNM"/>
			<bind name="class" value="'$FontColorGolden'"/>
			<style>
				<marginTop value="2px"/>
				<marginLeft value="8px"/>
			</style>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 180"/>
			<bind name="style" value="'leading'; _leading ? _leading : -3"/>
			<bind name="text" value="_instructionText"/>
		</block>
	</block>
	<block className="MouseInstruction">
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<bind name="visible" value="_type!='no_icon'"/>
			<block className="icon_mouse" type="native">
				<bind name="gotoAndStop!" value="_type"/>
			</block>
		</block>
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 180"/>
			<bind name="style" value="'leading'; _leading ? _leading : 0"/>
			<bind name="style" value="'marginLeft'; (_type=='no_icon') ? '0px' : '4px'"/>
			<style>
				<marginTop value="-2px"/>
			</style>
			<bind name="text" value="_instructionText"/>
		</block>
	</block>
	<block className="MouseInstructionRepeater">
		<bind name="style" value="'marginBottom'; $index != _lastIndex ? '6px' : '0px'"/>
		<bind name="instance" value="'MouseInstruction'; _type == 'warning' || _type == 'restriction'	? null
																						: { _type: _type, _instructionText: _instructionText,
																							_maxWidth: _maxWidth, _leading: _leading}"/>
		<bind name="instance" value="'InstructionWarning'; _type == 'warning' ? {_instructionText: _instructionText, _maxWidth: _maxWidth, _leading: _leading} : null"/>
		<bind name="instance" value="'InstructionRestricion'; _type == 'restriction' ? {_instructionText: _instructionText, _maxWidth: _maxWidth, _leading: _leading} : null"/>
	</block>
	<block className="CheckedLine">
		<style>
			<flow value="horizontal"/>
		</style>
		<block className="icon_check" type="native">
			<style>
				<marginLeft value="2px"/>
				<marginTop value="8px"/>
			</style>
			<bind name="visible" value="!_isCheckMarkHidden"/>
		</block>
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<style>
				<width value="288px"/>
				<marginTop value="-2px"/>
				<multiline value="false"/>
			</style>
			<bind name="class" value="'$FontColorGolden'"/>
			<bind name="style" value="'leading'; _leading ? _leading : 0"/>
			<bind name="style" value="'marginLeft'; _isCheckMarkHidden ? '0' : '5px'"/>
			<bind name="text" value="_checkedLineText"/>
		</block>
	</block>
	<block className="CheckedLineRepeater">
		<bind name="style" value="'marginBottom'; $index != _lastIndex ? '6px' : '-2px'"/>
		<bind name="instance" value="'CheckedLine'; { _isCheckMarkHidden: _isCheckMarkHidden, _checkedLineText: _checkedLineText, _maxWidth: _maxWidth}"/>
	</block>
	<block className="InstructionBigTech">
		<style>
			<flow value="horizontal"/>
		</style>
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<bind name="style" value="'leading'; _leading ? _leading : 0"/>
			<style>
				<textAlign value="center"/>
			</style>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 500"/>
			<bind name="text" value="_instructionText"/>
		</block>
	</block>
	<block className="DockTopMenuLinkText">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<block type="text">
			<styleClass value="$TextDockNano"/>
			<bind name="class" value="rollOver &amp;&amp; !(mouseDown) ? '$FontColorDefault' : '$None'"/>
			<bind name="text" value="_label"/>
		</block>
	</block>
	<block className="EmptyStatusParagraph">
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="class" value="_sizeClass ? _sizeClass : '$FontSizeLarge'"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<style>
				<textAlign value="center"/>
			</style>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 250"/>
			<bind name="text" value="_text"/>
		</block>
	</block>
	<block className="InvertableTextLine">
		<block type="text">
			<bind name="name" value="_name"/>
			<bind name="class" value="_invert ? _normalClass : _invertedClass"/>
			<style>
				<position value="absolute"/>
				<alpha value="0.35"/>
				<top value="1px"/>
			</style>
			<bind name="style" value="'multiline'; _width ? false : true"/>
			<bind name="style" value="'width'; _width ? _width : 'auto'"/>
			<bind name="style" value="'letterSpacing'; _letterSpacing ? _letterSpacing : '0'"/>
			<bind name="text" value="_text"/>
		</block>
		<block type="text">
			<bind name="class" value="_invert ? _normalClass : _invertedClass"/>
			<style>
				<position value="absolute"/>
				<alpha value="0.1"/>
				<top value="-1px"/>
			</style>
			<bind name="style" value="'multiline'; _width ? false : true"/>
			<bind name="style" value="'width'; _width ? _width : 'auto'"/>
			<bind name="style" value="'letterSpacing'; _letterSpacing ? _letterSpacing : '0'"/>
			<bind name="text" value="_text"/>
		</block>
		<block type="text">
			<bind name="class" value="_invert ? _normalClass : _invertedClass"/>
			<style>
				<position value="absolute"/>
				<alpha value="0.2"/>
				<left value="1px"/>
			</style>
			<bind name="style" value="'multiline'; _width ? false : true"/>
			<bind name="style" value="'width'; _width ? _width : 'auto'"/>
			<bind name="style" value="'letterSpacing'; _letterSpacing ? _letterSpacing : '0'"/>
			<bind name="text" value="_text"/>
		</block>
		<block type="text">
			<bind name="class" value="_invert ? _normalClass : _invertedClass"/>
			<style>
				<position value="absolute"/>
				<alpha value="0.2"/>
				<left value="-1px"/>
			</style>
			<bind name="style" value="'multiline'; _width ? false : true"/>
			<bind name="style" value="'width'; _width ? _width : 'auto'"/>
			<bind name="style" value="'letterSpacing'; _letterSpacing ? _letterSpacing : '0'"/>
			<bind name="text" value="_text"/>
		</block>
		<block type="text">
			<bind name="class" value="_invert ? _invertedClass : _normalClass"/>
			<bind name="style" value="'multiline'; _width ? false : true"/>
			<bind name="style" value="'width'; _width ? _width : 'auto'"/>
			<bind name="style" value="'letterSpacing'; _letterSpacing ? _letterSpacing : '0'"/>
			<bind name="text" value="_text"/>
		</block>
	</block>
	<block className="ResizeFrame">
		<styleClass value="$FullsizeAbsolute"/>
		<block>
			<bind name="visible" value="!(restrict.up)"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_UP'"/>
			<style>
				<position value="absolute"/>
				<width value="100%"/>
				<height value="6px"/>
				<top value="-3px"/>
				<backgroundColor value="0x01ff0000"/>
			</style>
			<params>
				<param name="name" value="grip_top"/>
			</params>
		</block>
		<block>
			<bind name="visible" value="!(restrict.down)"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_DOWN'"/>
			<style>
				<position value="absolute"/>
				<width value="100%"/>
				<height value="6px"/>
				<bottom value="-3px"/>
				<backgroundColor value="0x01ff0000"/>
			</style>
			<params>
				<param name="name" value="grip_bottom"/>
			</params>
		</block>
		<block>
			<bind name="visible" value="!(restrict.left)"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_LEFT'"/>
			<style>
				<position value="absolute"/>
				<width value="6px"/>
				<height value="100%"/>
				<left value="-3px"/>
				<backgroundColor value="0x01ff0000"/>
			</style>
			<params>
				<param name="name" value="grip_left"/>
			</params>
		</block>
		<block>
			<bind name="visible" value="!(restrict.right)"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_RIGHT'"/>
			<style>
				<position value="absolute"/>
				<width value="6px"/>
				<height value="100%"/>
				<right value="-3px"/>
				<backgroundColor value="0x01ff0000"/>
			</style>
			<params>
				<param name="name" value="grip_right"/>
			</params>
		</block>
		<block>
			<bind name="visible" value="!(restrict.up || restrict.left)"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_UP_LEFT'"/>
			<style>
				<position value="absolute"/>
				<width value="12px"/>
				<height value="12px"/>
				<top value="-5px"/>
				<left value="-5px"/>
				<backgroundColor value="0x0100ff00"/>
			</style>
			<params>
				<param name="name" value="grip_top_left"/>
			</params>
		</block>
		<block>
			<bind name="visible" value="!(restrict.up || restrict.right)"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_UP_RIGHT'"/>
			<style>
				<position value="absolute"/>
				<width value="12px"/>
				<height value="12px"/>
				<top value="-5px"/>
				<right value="-5px"/>
				<backgroundColor value="0x0100ff00"/>
			</style>
			<params>
				<param name="name" value="grip_top_right"/>
			</params>
		</block>
		<block>
			<bind name="visible" value="!(restrict.down || restrict.left)"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_DOWN_LEFT'"/>
			<style>
				<position value="absolute"/>
				<width value="12px"/>
				<height value="12px"/>
				<bottom value="-5px"/>
				<left value="-5px"/>
				<backgroundColor value="0x0100ff00"/>
			</style>
			<params>
				<param name="name" value="grip_bottom_left"/>
			</params>
		</block>
		<block>
			<bind name="visible" value="!(restrict.down || restrict.right)"/>
			<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; 'HANGAR_DRAGGING_DOWN_RIGHT'"/>
			<style>
				<position value="absolute"/>
				<width value="12px"/>
				<height value="12px"/>
				<bottom value="-5px"/>
				<right value="-5px"/>
				<backgroundColor value="0x0100ff00"/>
			</style>
			<params>
				<param name="name" value="grip_bottom_right"/>
			</params>
		</block>
	</block>
	<css name="$WarningTextRed">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFF6600"/>
	</css>
	<css name="$WarningTextOrange">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFont"/>
		<fontSize value="15"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFF9933"/>
	</css>
	<block className="WarningMessage">
		<bind name="appear" value="'addedToStage'; 0.15; _delay; {alpha: 0, top: _startTop ? _startTop : 10}; {alpha: 1, top: 0}; 2"/>
		<bind name="var" value="{errorStringsToShowSupportLinkFor: [
		tr('IDS_ACCOUNT_ERROR_ALL_SPA_LOGIN_ALREADY_TAKEN')
	]}"/>
		<block type="text">
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 280"/>
			<bind name="class" value="_highWarning ? '$WarningTextRed' : '$WarningTextOrange'"/>
			<style>
				<textAlign value="center"/>
			</style>
			<bind name="text" value="_text"/>
		</block>
		<block>
			<bind name="visible" value="errorStringsToShowSupportLinkFor.indexOf(_text) &gt; -1"/>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="6px"/>
			</style>
			<bind name="instance" value="'LinkText'; errorStringsToShowSupportLinkFor.indexOf(_text) &gt; -1 	? {
																								_label: 'IDS_LINK_SUPPORT', 
																								_urlIdent: URL.SUPPORT, 
																								_tooltipText: 'IDS_LINK_SUPPORT_HINT', 
																								_name: 'ButtonSupport'} 
																							: null"/>
		</block>
	</block>
	<block className="WrongTextInputNotification">
		<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: _startTop ? _startTop : 10}; {alpha: 1, top: 0}; 2"/>
		<style>
			<width value="100%"/>
			<marginRight value="-1px"/>
			<marginLeft value="-1px"/>
		</style>
		<block>
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
				<marginTop value="1px"/>
				<marginBottom value="0px"/>
			</style>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap3" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
		</block>
		<block className="notification_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block className="button_close" type="native">
			<bind name="visible" value="_showCloseBtn == true"/>
			<style>
				<right value="8"/>
				<top value="7"/>
				<position value="absolute"/>
			</style>
			<bind name="dispatch" value="'buttonClick'; 'hideWrongMessageEv'; {}"/>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginTop value="8px"/>
				<marginBottom value="7px"/>
			</style>
			<bind name="instance" value="'WarningMessage'; true	? { _delay: 0.07, _startTop: _startTop, _messageHiglight: _messageHiglight, _maxWidth: _maxWidth, _text: _text}
												: null"/>
		</block>
		<bind name="dispatch" value="'click'; 'hideWrongMessageEv'; {}"/>
	</block>
	<block className="MultiParagraphHelpTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="330px"/>
		</style>
		<bind name="style" value="'width'; _width ? _width : '330px'"/>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<block className="GUIContrast">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="contrast_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="optionData.contrast"/>
			</block>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="watch" value="'iconType'; _iconType ? _iconType : 'question'"/>
			<block className="icon_question_mark" type="native">
				<bind name="visible" value="iconType == 'question'"/>
				<style>
					<marginRight value="6px"/>
					<marginTop value="4px"/>
				</style>
			</block>
			<block className="icon_info_big" type="native">
				<bind name="visible" value="iconType == 'info'"/>
				<style>
					<marginRight value="6px"/>
					<marginTop value="4px"/>
				</style>
			</block>
			<block className="mc_icon_ship" type="native">
				<bind name="visible" value="iconType == 'ship' &amp;&amp; _shipType != 'premiumShip'"/>
				<style>
					<marginRight value="6px"/>
					<marginTop value="10px"/>
				</style>
				<bind name="style" value="'marginLeft'; _shipType == 'Destroyer' ? '-2px' : '2px'"/>
				<bind name="gotoAndStop!" value="_shipType"/>
			</block>
			<block type="text">
				<style>
					<top value="1px"/>
				</style>
				<bind name="style" value="'maxWidth'; _width ? _width - 60 : 270"/>
				<styleClass value="$TextHeaderWhiteBold"/>
				<bind name="class" value="_shipType == 'premiumShip' ? '$FontColorGolden' : '$FontColorWhite'"/>
				<bind name="text" value="_tooltipHeader"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block>
				<style>
					<marginLeft value="12px"/>
					<marginRight value="12px"/>
					<marginTop value="9px"/>
					<marginBottom value="3px"/>
					<width value="100%"/>
				</style>
				<bind name="repeat" value="_multiParagraphArray; 'RepeatParagraphItem'; {_maxWidth: _width - 24}"/>
			</block>
		</block>
	</block>
	<block className="RepeatParagraphItem">
		<bind name="style" value="'marginBottom'; _marginBottom ? _marginBottom : '6px'"/>
		<bind name="class" value="_middleAligned ? '$MiddleAligned' : ''"/>
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<bind name="class" value="_class"/>
			<bind name="style" value="'leading'; _leading ? _leading : 0"/>
			<bind name="style" value="'textAlign'; _textAlign ? _textAlign : 'left'"/>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 300"/>
			<bind name="text" value="(_toUpperCase ? toUpperCase(tr(_paragraphText)) : _paragraphText)"/>
			<bind name="substitute" value="	_substitute.mapName ? _substitute.mapName : '';
							_substitute.imageOffset ? _substitute.imageOffset : 0;
							_substitute.map ? _substitute.map : {}"/>
		</block>
	</block>
	<block className="RepeatParagraphItemNM">
		<bind name="style" value="'marginBottom'; _marginBottom ? _marginBottom : '16px'"/>
		<bind name="class" value="_middleAligned ? '$MiddleAligned' : ''"/>
		<block type="text">
			<styleClass value="$TextDefaultNM"/>
			<bind name="class" value="_class"/>
			<bind name="style" value="'leading'; _leading ? _leading : 0"/>
			<bind name="style" value="'textAlign'; _textAlign ? _textAlign : 'left'"/>
			<bind name="style" value="'maxWidth'; _maxWidth ? _maxWidth : 300"/>
			<bind name="text" value="(_toUpperCase ? toUpperCase(tr(_paragraphText)) : _paragraphText)"/>
			<bind name="substitute" value="	_substitute.mapName ? _substitute.mapName : '';
							_substitute.imageOffset ? _substitute.imageOffset : 0;
							_substitute.map ? _substitute.map : {}"/>
		</block>
	</block>
	<block className="GUIContrast">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<styleClass value="$FullsizeAbsolute"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
	</block>
	<block className="CheckBox">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="watch" value="'isEnabled'; _disabled != true"/>
		<block className="checkbox_no_label" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="enabled" value="isEnabled"/>
			<bind name="selected" value="switchProperty"/>
		</block>
		<block type="text">
			<styleClass value="$TextHeaderBigDefault"/>
			<style>
				<marginLeft value="23px"/>
				<marginTop value="-3px"/>
				<hitTest value="false"/>
			</style>
			<bind name="style" value="'maxWidth'; _maxTfWidth ? _maxTfWidth : 300"/>
			<bind name="transition" value="(rollOver &amp;&amp; !mouseDown) &amp;&amp; isEnabled; 0.15; {alpha: 0.8}; {alpha: 1}; {alpha: 0.8}; 2"/>
			<bind name="text" value="label"/>
		</block>
	</block>
	<block className="IconSlimClient">
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: _isEventLike ? 'IDS_ENTER_IN_FULL_VERSION_FOR_ANNOUNCE_SHIPS' : 'IDS_ENTER_IN_FULL_VERSION_FOR_SHIPS'}"/>
		<block className="game_downloading" type="native"/>
	</block>
	<block className="BannerButtonInstance">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="transition" value="rollOver; 0.07; {alpha: 0.85}; {alpha: 0.95}"/>
		<style>
			<width value="217px"/>
			<height value="60px"/>
			<flow value="horizontal"/>
		</style>
		<bind name="name" value="_input"/>
		<bind name="input"/>
		<bind name="action" value="'click'; _action ? _action : null"/>
		<bind name="action" value="'click'; 'log'; { event: 'click:banner.' + _logItemName }"/>
		<block className="button_infopanel_no_label" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<height value="100%"/>
				<marginRight value="8px"/>
				<marginLeft value="12px"/>
				<hitTest value="false"/>
			</style>
			<block>
				<style>
					<width value="37px"/>
					<height value="100%"/>
				</style>
				<block>
					<bind name="style" value="'width'; _iconSize"/>
					<bind name="style" value="'height'; _iconSize"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$MiddleAligned"/>
					<bind name="style" value="'backgroundImage'; _iconUrl"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="8px"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<style>
						<width value="100%"/>
						<leading value="-3"/>
						<hitTest value="false"/>
						<alpha value="0.85"/>
					</style>
					<styleClass value="$TextDefaultBold17NM"/>
					<bind name="text" value="_label"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ShipTitleWithIconAndSilhouette">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _shipID; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<block>
			<block>
				<bind name="instance" value="'ShipTitleWithIconAndLevel'; {_shipID : _shipID}"/>
			</block>
			<block>
				<style>
					<width value="122px"/>
					<height value="22px"/>
					<marginLeft value="12px"/>
					<marginTop value="-2px"/>
				</style>
				<bind name="style" value="'backgroundImage'; 'url:' + shipInfo.pathTinyIcon"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ShipTitleWithIconAndLevel">
		<bind name="primaryEntityDH" value="'shipOwnEntity'; CC.ownShip; _shipID; 'evUpdate'"/>
		<bind name="watchDH" value="'playerShipInfo'; ['shipOwnEntity.ownShip.evUpdate', 'shipOwnEntity.ownShip.evCrewChanged']; shipOwnEntity.ownShip"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _shipID; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watchDH" value="'upgradableShipInfo'; ['shipEntity.upgradableShipInfo.evUpdate']; shipEntity.upgradableShipInfo"/>
		<block>
			<style>
				<height value="27px"/>
			</style>
			<block className="icon_wreath" type="native">
				<styleClass value="$MouseDisable"/>
				<style>
					<position value="absolute"/>
					<top value="-1px"/>
				</style>
				<bind name="visible" value="upgradableShipInfo.isElite || shipInfo.isPremium || shipInfo.uiSpecial"/>
				<bind name="gotoAndStop!" value="(shipInfo.isPremium || shipInfo.uiSpecial) 	? 'premium' : 'elite'"/>
			</block>
			<block>
				<style>
					<marginLeft value="5px"/>
					<marginTop value="7px"/>
				</style>
				<block className="icon_ship" type="native">
					<styleClass value="$MouseDisable"/>
					<bind name="gotoAndStop!" value="shipInfo.isPremium || shipInfo.uiSpecial 	? shipInfo.subtype + '_P'
																				: shipInfo.subtype"/>
				</block>
			</block>
			<block>
				<style>
					<marginLeft value="6px"/>
					<marginTop value="-2px"/>
				</style>
				<block type="text">
					<styleClass value="$FontShipnameWhite"/>
					<bind name="class" value="shipInfo.isPremium || shipInfo.uiSpecial	? '$FontShipnameGolden'
																		: '$FontShipnameWhite'"/>
					<bind name="text" value="shipInfo.levelRome + ' ' + toUpperCase(tr(shipInfo.nameIDS))"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="CharCounter">
		<bind name="transition" value="_string.length &gt; 0; 0.15; {alpha: 0, top:10}; {alpha: 1, top:0}; {alpha: 0, top:10}; 1; 0"/>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CHARS_LEFT'}"/>
		<style>
			<backgroundColor value="0x01000000"/>
		</style>
		<block type="text">
			<styleClass value="$TextDefault"/>
			<bind name="class" value="_string.length &gt; _maxChars ? '$FontColorUnready' : '$FontColorDefault'"/>
			<bind name="style" value="'alpha'; _string.length &gt; _maxChars ? 1 : 0.6"/>
			<bind name="text" value="_maxChars - _string.length"/>
		</block>
	</block>
	<block className="BusyIndicator">
		<bind name="fade" value="_showBusyIndicator; 0.15; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1; 0.3"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<block className="indicator_busy_small" type="native"/>
		</block>
		<block type="text">
			<bind name="visible" value="_label.length &gt; 0"/>
			<styleClass value="$TextDefaultTech"/>
			<bind name="class" value="'$Bold'"/>
			<style>
				<marginLeft value="6px"/>
				<marginTop value="-2px"/>
			</style>
			<bind name="text" value="toUpperCase(tr(_label))"/>
		</block>
	</block>
	<block className="FormationPlayerIcon">
		<style>
			<width value="15px"/>
		</style>
		<bind name="watch" value="'postfix'; isOtherDivision ? '_other_division' : ''"/>
		<block className="formation_player_status" type="native">
			<style>
				<marginTop value="3px"/>
			</style>
			<bind name="gotoAndStop!" value="_isEmptySlot					?	('empty_slot_' + _formationType) :
							isInBattle						?	('player_in_battle_' + _formationType + postfix) :
							_isWardog &amp;&amp; isReady			?	('player_ready_' + _formationType + '_merc') :
							_isWardog &amp;&amp; !isReady			?	('player_not_ready_' + _formationType + '_merc') :
							isCommander &amp;&amp; isReady			?	('commander_' + _formationType + postfix) :
							isCommander &amp;&amp; !isReady			?	('commander_not_ready_' +_formationType + postfix) :
							!isCommander &amp;&amp; isReady			?	('player_ready_' + _formationType + postfix) :
							!isCommander &amp;&amp; !isReady		?	('player_not_ready_' + _formationType + postfix)
															:	'empty_slot_division'"/>
		</block>
	</block>
	<css name="$TextBackBtn">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="17"/>
		<selectable value="false"/>
		<textColor value="0x9CBABA"/>
	</css>
	<block className="BackButton">
		<style>
			<height value="30px"/>
		</style>
		<block className="button_dock" type="native">
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: _text}"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="dispatch" value="'buttonClick'; _event	 ? _event  : null; _eventData	 ? _eventData : {}"/>
			<bind name="action" value="'buttonClick'; _action	 ? _action : null; _actionParams ? _actionParams : {}"/>
			<bind name="request" value="'buttonClick'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
			<params>
				<param name="focusable" value="false"/>
			</params>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<hitTest value="false"/>
			</style>
			<block className="icon_navigate" type="native">
				<bind name="gotoAndStop!" value="'left'"/>
				<style>
					<marginLeft value="6px"/>
				</style>
			</block>
			<block>
				<bind name="name" value="_name ? _name : '' "/>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<marginLeft value="2px"/>
					<marginRight value="7px"/>
				</style>
				<block>
					<style>
						<marginTop value="-4px"/>
					</style>
					<block type="text">
						<styleClass value="$TextBackBtn"/>
						<bind name="class" value="'$FontColorAlmostBlack'"/>
						<style>
							<position value="absolute"/>
							<alpha value="0.4"/>
							<top value="1px"/>
						</style>
						<bind name="text" value="_text"/>
					</block>
					<block type="text">
						<styleClass value="$TextBackBtn"/>
						<bind name="class" value="'$FontColorAlmostBlack'"/>
						<style>
							<position value="absolute"/>
							<alpha value="0.2"/>
							<top value="-1px"/>
						</style>
						<bind name="text" value="_text"/>
					</block>
					<block type="text">
						<styleClass value="$TextBackBtn"/>
						<bind name="class" value="'$FontColorAlmostBlack'"/>
						<style>
							<position value="absolute"/>
							<alpha value="0.2"/>
							<left value="1px"/>
						</style>
						<bind name="text" value="_text"/>
					</block>
					<block type="text">
						<styleClass value="$TextBackBtn"/>
						<bind name="class" value="'$FontColorAlmostBlack'"/>
						<style>
							<position value="absolute"/>
							<alpha value="0.2"/>
							<left value="-1px"/>
						</style>
						<bind name="text" value="_text"/>
					</block>
					<block type="text">
						<styleClass value="$TextBackBtn"/>
						<bind name="class" value="'$FontColorBlueish'"/>
						<bind name="text" value="_text"/>
					</block>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ScoreRatioCounter">
		<style>
			<flow value="horizontal"/>
		</style>
		<block>
			<bind name="tooltip" value="'SimpleTooltip'; _tooltipTextPlayerResult ? { tooltipText: _tooltipTextPlayerResult } : null"/>
			<bind name="style" value="'alpha'; (_playerPointsCounter == 0) ? 0.5 : 1"/>
			<block type="text">
				<bind name="class" value="'$TextHeaderWhiteBold'"/>
				<bind name="text" value="_playerPointsCounter"/>
			</block>
		</block>
		<block>
			<bind name="tooltip" value="'SimpleTooltip'; _tooltipTextTotalResult ? { tooltipText: _tooltipTextTotalResult } : null"/>
			<style>
				<alpha value="0.7"/>
			</style>
			<block type="text">
				<style>
					<marginTop value="1px"/>
				</style>
				<bind name="class" value="'$TextHeaderBold'"/>
				<bind name="text" value="'/'"/>
			</block>
			<block type="text">
				<style>
					<marginTop value="2px"/>
					<marginLeft value="-1px"/>
				</style>
				<bind name="class" value="'$TextHeaderBold'"/>
				<bind name="text" value="_totalPointsCounter"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="PlayerNameAndClanTag">
		<bind name="watch" value="'clanTagColor'; ('0xff' + _clanTagColor)"/>
		<bind name="watch" value="'haveClanTag'; _clanTag != null &amp;&amp;
								_clanTag != ''"/>
		<bind name="watch" value="'isColoredClanTag'; (haveClanTag &amp;&amp; !_noClanTagColor &amp;&amp; _clanTagColor != null)"/>
		<bind name="watch" value="'playerName'; 	isColoredClanTag 	?	_playerName :
								haveClanTag			?	('[' + _clanTag + ']' + _playerName)
													: _playerName"/>
		<bind name="watch" value="'fontColor'; 	_isSelf 	? 	_ttkStatus 			? '$FontColorTTK' :
												_ctkStatus			? '$FontColorCompareNegative' :
												_tkStatus 			? '$FontColorTeamkiller'
																	: '$FontColorGolden':
								!_isDead 	?  	_ttkStatus 			? '$FontColorTTK' :
												_isInSameDivision 	? '$FontColorGolden' :
												_tkStatus 			? '$FontColorTeamkiller'												
																	: '$FontColorWhite'
											: '$FontColorAlmostBlack'"/>
		<style>
			<hitTest value="false"/>
			<flow value="horizontal"/>
			<width value="100%f"/>
		</style>
		<block type="text">
			<style>
				<marginLeft value="3px"/>
			</style>
			<bind name="visible" value="isColoredClanTag == true"/>
			<style>
				<multiline value="false"/>
			</style>
			<styleClass value="$TextDefaultNM"/>
			<bind name="style" value="'fontSize'; _fontSize ? _fontSize : 15"/>
			<bind name="class" value="_isSelf ? '$Bold' : '$None'"/>
			<bind name="style" value="'textColor'; clanTagColor"/>
			<bind name="text" value="tr('[' + _clanTag + ']')"/>
		</block>
		<block type="text">
			<style>
				<marginLeft value="3px"/>
				<multiline value="false"/>
				<width value="100%f"/>
			</style>
			<styleClass value="$TextDefaultNM"/>
			<bind name="style" value="'fontSize'; _fontSize ? _fontSize : 15"/>
			<bind name="class" value="_isSelf 	? '$Bold' : '$None'"/>
			<bind name="class" value="(_isDead &amp;&amp; !_isSelf ? '$FontDropShadowWhite' : '$None')"/>
			<bind name="class" value="fontColor"/>
			<bind name="text" value="playerName"/>
		</block>
	</block>
	<block className="HotkeyWithText">
		<bind name="dispatch" value="'click'; _event	? _event  	: null; _eventData	 	? _eventData 	: {}"/>
		<bind name="action" value="'click'; _action	? _action 	: null; _actionParams 	? _actionParams : {}"/>
		<bind name="request" value="'click'; _request 	? _request 	: null; _requestParams 	? _requestParams: {}"/>
		<bind name="tooltip" value="'SimpleTooltip'; _tooltipText ? { tooltipText: _tooltipText } : null; 0"/>
		<block className="hotkey_holder_white_9slice" type="native">
			<block type="text">
				<style>
					<marginLeft value="3px"/>
					<marginRight value="3px"/>
					<marginTop value="-1px"/>
					<marginBottom value="-1px"/>
				</style>
				<styleClass value="$BlackLabel"/>
				<bind name="text" value="_text"/>
			</block>
		</block>
	</block>
	<block className="NavigationButton">
		<style>
			<marginBottom value="1px"/>
		</style>
		<block className="button_navigation_small" type="native">
			<bind name="name" value="_name"/>
			<bind name="label" value="_label"/>
			<bind name="selected" value="_selectedIndex == $index"/>
			<bind name="dispatch" value="'click'; 'evClicked'; { selectedIndex: $index }"/>
		</block>
	</block>
	<block className="StepProgressBar">
		<bind name="tooltip" value="'ArcEventLoyaltyRewardTooltip'; 			_showLoyaltyHint 	? { _index: $index, _side: _side } : null"/>
		<bind name="tooltip" value="'ArcEventLoyaltyRewardTooltipHistory'; 	_showHistoryHint 	? { _index: $index, _side: _side } : null"/>
		<bind name="tooltip" value="'ArcEventPersonalDailyProgressTooltip'; 	_showProgressHint 	? { _index: $index } : null"/>
		<bind name="watch" value="'isFull'; (_activeIndex == 0) ? false : ($index &lt;= (_activeIndex - 1))"/>
		<bind name="watch" value="'pureProgress'; (_activeIndex == 0) 			? ((_currValue / _arrayValues[$index]) * 10)
																: ((_currValue - _arrayValues[$index - 1]) / (_arrayValues[$index] - _arrayValues[$index - 1])) * 10"/>
		<bind name="watch" value="'progressValue'; 	(_activeIndex == $index) 	? pureProgress :
									isFull 						? 10
																: 0"/>
		<bind name="style" value="'width'; _width ? _width : '80px'"/>
		<style>
			<backgroundColor value="0x01000000"/>
		</style>
		<block>
			<style>
				<right value="-16"/>
				<marginBottom value="-30px"/>
			</style>
			<bind name="visible" value="_showLootbox == true"/>
			<bind name="style" value="'colorMatrixFilter'; ((_activeIndex == $index) &amp;&amp; (_currValue != 0)) || (isFull == true) ? '0 0 0 0' : '0 -100 0 0'"/>
			<bind name="style" value="'alpha'; (_activeIndex == $index) &amp;&amp; (_currValue != 0) ? 1 : 0.5"/>
			<bind name="instance" value="'RewardItemWithStamp'; { _issued: isFull, _scale: _scale, _backgroundImage: _backgroundImage }"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="8"/>
			</style>
			<bind name="style" value="'height'; _height ? _height : '5px'"/>
			<block className="indicator_progress_bar_bg" type="native">
				<bind name="visible" value="!isFull"/>
				<style>
					<width value="100%"/>
				</style>
			</block>
			<block className="indicator_progress_bar_yellow_no_bg" type="native">
				<bind name="visible" value="_showYellowBar"/>
				<style>
					<position value="absolute"/>
					<width value="100%"/>
				</style>
				<bind name="style" value="'alpha'; (_activeIndex == $index) &amp;&amp; (_currValue != 0) ? 1 : 0.5"/>
				<bind name="style" value="'height'; _height ? _height : '5px'"/>
				<bind name="value" value="progressValue"/>
			</block>
			<block className="indicator_progress_bar_grey_no_bg" type="native">
				<bind name="visible" value="!_showYellowBar"/>
				<style>
					<position value="absolute"/>
					<width value="100%"/>
				</style>
				<bind name="style" value="'alpha'; (_activeIndex == $index) &amp;&amp; (_currValue != 0) ? 1 : 0.5"/>
				<bind name="style" value="'height'; _height ? _height : '5px'"/>
				<bind name="value" value="progressValue"/>
			</block>
		</block>
		<block>
			<style>
				<right value="0px"/>
				<marginTop value="8"/>
			</style>
			<bind name="style" value="'alpha'; (_activeIndex == $index) &amp;&amp; (_currValue != 0) ? 1 : 0.5"/>
			<block type="text">
				<styleClass value="$TextDefaultBoldNM"/>
				<bind name="text" value="_arrayValues[$index]"/>
			</block>
		</block>
	</block>
	<block className="RewardItemWithStamp">
		<block>
			<style>
				<width value="80px"/>
				<height value="80px"/>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; _backgroundImage"/>
			<bind name="scaleX" value="_scale ? _scale : 1"/>
			<bind name="scaleY" value="_scale ? _scale : 1"/>
		</block>
		<block>
			<bind name="scaleX" value="_scale ? (_scale - 0.14) : 0.86"/>
			<bind name="scaleY" value="_scale ? (_scale - 0.14) : 0.86"/>
			<style>
				<position value="absolute"/>
				<alpha value="0.9"/>
				<hitTest value="false"/>
				<top value="46%"/>
				<left value="42%"/>
			</style>
			<block className="icon_issued" type="native">
				<bind name="gotoAndStop!" value="_issued	? 'issued' : 'not_issued'"/>
				<innerBind elementName="item.item" name="text" value="'IDS_ISSUED_STAMP'"/>
				<bind name="rotation" value="-2"/>
			</block>
		</block>
	</block>
	<block className="GiftBoxIconSmall">
		<block className="icon_giftbox_small" type="native">
			<bind name="scaleX" value="_scale ? _scale : 1"/>
			<bind name="scaleY" value="_scale ? _scale : 1"/>
			<bind name="gotoAndStop!" value="'normal'"/>
		</block>
		<block className="icon_issued_small" type="native">
			<style>
				<position value="absolute"/>
				<top value="55%"/>
				<left value="50%"/>
				<alpha value="0.9"/>
				<hitTest value="false"/>
			</style>
			<bind name="scaleX" value="_scale ? (_scale - 0.04) : 0.96"/>
			<bind name="scaleY" value="_scale ? (_scale - 0.04) : 0.96"/>
			<bind name="rotation" value="-2"/>
			<bind name="gotoAndStop!" value="_issued	? 'issued' : 'not_issued'"/>
			<innerBind elementName="item.item" name="text" value="'IDS_ISSUED_STAMP'"/>
		</block>
	</block>
	<block className="GiftBoxIconBig">
		<block className="icon_giftbox" type="native">
			<bind name="scaleX" value="_scale ? _scale : 1"/>
			<bind name="scaleY" value="_scale ? _scale : 1"/>
			<bind name="gotoAndStop!" value="'normal'"/>
		</block>
		<block className="icon_issued" type="native">
			<style>
				<position value="absolute"/>
				<top value="55%"/>
				<left value="50%"/>
				<alpha value="0.9"/>
				<hitTest value="false"/>
			</style>
			<bind name="scaleX" value="_scale ? (_scale - 0.04) : 0.96"/>
			<bind name="scaleY" value="_scale ? (_scale - 0.04) : 0.96"/>
			<bind name="rotation" value="-2"/>
			<bind name="gotoAndStop!" value="_issued	? 'issued' : 'not_issued'"/>
			<innerBind elementName="item.item" name="text" value="'IDS_ISSUED_STAMP'"/>
		</block>
	</block>
	<block className="ColorTransformPicker">
		<bind name="instance" value="'ColorTransformSlider'; {_maximum : 1, _minimum: 0, _step: 0.01, _value:1, _name:'redMultiplier'}"/>
		<bind name="instance" value="'ColorTransformSlider'; {_maximum : 1, _minimum: 0, _step: 0.01, _value:1, _name:'greenMultiplier'}"/>
		<bind name="instance" value="'ColorTransformSlider'; {_maximum : 1, _minimum: 0, _step: 0.01, _value:1, _name:'blueMultiplier'}"/>
		<bind name="instance" value="'ColorTransformSlider'; {_maximum : 1, _minimum: 0, _step: 0.01, _value:1, _name:'alphaMultiplier'}"/>
		<bind name="instance" value="'ColorTransformSlider'; {_maximum : 255, _minimum: -255, _step: 1, _value:0, _name:'redOffset'}"/>
		<bind name="instance" value="'ColorTransformSlider'; {_maximum : 255, _minimum: -255, _step: 1, _value:0, _name:'greenOffset'}"/>
		<bind name="instance" value="'ColorTransformSlider'; {_maximum : 255, _minimum: -255, _step: 1, _value:0, _name:'blueOffset'}"/>
		<bind name="instance" value="'ColorTransformSlider'; {_maximum : 255, _minimum: -255, _step: 1, _value:0, _name:'alphaOffset'}"/>
	</block>
	<block className="ColorTransformSlider">
		<style>
			<marginTop value="20px"/>
		</style>
		<block>
			<bind name="dispatch" value="'value'+varChanged; 'colorTransformChanged'; [_name, value]"/>
			<block>
				<style>
					<maxHeight value="500"/>
					<overflow value="scroll"/>
					<backgroundColor value="0x80000000"/>
				</style>
				<styleClass value="$DefaultScrollBar"/>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<style>
						<textColor value="0xffffffff"/>
						<maxWidth value="600"/>
						<marginBottom value="3px"/>
					</style>
					<bind name="text" value="'_name: ' + (_name)"/>
				</block>
			</block>
			<block>
				<style>
					<maxHeight value="500"/>
					<overflow value="scroll"/>
					<backgroundColor value="0x80000000"/>
				</style>
				<styleClass value="$DefaultScrollBar"/>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<style>
						<textColor value="0xffffffff"/>
						<maxWidth value="600"/>
						<marginBottom value="3px"/>
					</style>
					<bind name="text" value="'value: ' + (value)"/>
				</block>
			</block>
			<block>
				<bind name="mc" value="'slider_default'; ['valueChange']; ['value']; {maximum:_maximum, minimum:_minimum, step:_step, value:_value}"/>
			</block>
		</block>
	</block>
	<block className="ParamsModifierItem">
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
			<marginBottom value="16px"/>
		</style>
		<bind name="style" value="'paddingTop'; (_shrinkHeight == true) ? '-8px' : '0'"/>
		<block type="text">
			<styleClass value="$TextDefaultNM"/>
			<style>
				<leading value="-3"/>
				<alpha value="0.8"/>
				<width value="100%"/>
			</style>
			<bind name="text" value="attributeIDS"/>
		</block>
		<block type="text">
			<style>
				<marginLeft value="12px"/>
			</style>
			<styleClass value="$TextDefaultNM"/>
			<bind name="class" value="category == 'positive' ? '$FontColorComparePositive' : 
					 category == 'negative'	? '$FontColorCompareNegative'
					 						: '$FontColorDefault'"/>
			<bind name="substitute" value="''; 5; {
								 '[battleship]' : 'battleship_small_own',
								  '[aircarrier]' : 'carrier_small_own',
								   '[cruiser]' : 'cruiser_small_own',
								   '[destroyer]' : 'destroyer_small_own',
								   '[submarine]' : 'submarine_small_own'
								   }; measuredValue"/>
		</block>
		<block type="text">
			<style>
				<marginLeft value="4px"/>
			</style>
			<styleClass value="$TextDefaultNM"/>
			<bind name="style" value="'alpha'; category == 'positive' ? 0.65 : 0.8"/>
			<bind name="class" value="category == 'positive' ? '$FontColorComparePositive' : 
					 category == 'negative'	? '$FontColorCompareNegative'
					 						: '$FontColorDefault'"/>
			<bind name="text" value="measure"/>
		</block>
	</block>
	<block className="ParamsModifierList">
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="_attributesPositive; 'ParamsModifierItem'; {_shrinkHeight: _shrinkHeight}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="_attributesNegative; 'ParamsModifierItem'; {_shrinkHeight: _shrinkHeight}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="_attributesNeutral; 'ParamsModifierItem'; {_shrinkHeight: _shrinkHeight}"/>
		</block>
	</block>
	<block className="SubmarineWeaponsPanel">
		<style>
			<flow value="horizontal"/>
		</style>
		<bind name="catch" value="'weaponSelectedEv'"/>
		<bind name="collectionRepeatDH" value="CC.submarineTorpedo; 'SubmarineWeaponsPanelItem'; ''; {}"/>
	</block>
	<block className="SubmarineWeaponsPanelItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="dataRefDH" value="'submarineTorpedoEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'torpedoesGroupId';	[]; submarineTorpedoEntity.submarineTorpedo.id"/>
		<bind name="watchDH" value="'type';				[]; submarineTorpedoEntity.submarineTorpedo.type"/>
		<bind name="watchDH" value="'isSelected';		['submarineTorpedoEntity.submarineTorpedo.evSelectedChanged']; submarineTorpedoEntity.submarineTorpedo.selected"/>
		<bind name="watchDH" value="'commandName';		[]; submarineTorpedoEntity.submarineTorpedo.commandID"/>
		<bind name="watchDH" value="'nowReloadingId';	['submarineTorpedoEntity.submarineTorpedo.evNowReloadingIdChanged']; submarineTorpedoEntity.submarineTorpedo.nowReloadingId"/>
		<bind name="watchDH" value="'isAimedForward';	[]; submarineTorpedoEntity.submarineTorpedo.aimedForward"/>
		<bind name="primaryEntityDH" value="'cmdEntity'; CC.commandMappingCommandName; commandName"/>
		<bind name="watchDH" value="'commandId'; []; cmdEntity.commandMappingCommand.id"/>
		<bind name="collectionDH" value="CC.submarineTorpedoBarrel; 'allContainerBarrels'; 'byGroup.group' + torpedoesGroupId"/>
		<bind name="entityDH" value="'currentReloadindBarrelEntity'; nowReloadingId"/>
		<bind name="watchDH" value="'progressReloadValue'; ['currentReloadindBarrelEntity.progress.evChanged']; currentReloadindBarrelEntity.progress.value"/>
		<bind name="watchDH" value="'maxReloadValue'; ['currentReloadindBarrelEntity.progress.evChanged']; currentReloadindBarrelEntity.progress.max"/>
		<bind name="watchDH" value="'progressCooldownValue'; ['submarineTorpedoEntity.progress.evChanged']; submarineTorpedoEntity.progress.value"/>
		<bind name="watchDH" value="'maxCooldownValue'; ['submarineTorpedoEntity.progress.evChanged']; submarineTorpedoEntity.progress.max"/>
		<style>
			<width value="64px"/>
			<height value="64px"/>
			<marginLeft value="-4px"/>
			<marginRight value="-4px"/>
		</style>
		<bind name="firstEntityDH" value="'submarineEntity'; CC.submarine"/>
		<bind name="watchDH" value="'isLocked'; ['submarineEntity.submarine.evDepthChanged']; submarineEntity.submarine.depthIndex &gt; 1"/>
		<bind name="changeDispatch" value="isReloading; 'evReloadCompleted'; {}; 2; false"/>
		<bind name="watch" value="'isCooldown'; (progressCooldownValue != 0)"/>
		<bind name="watch" value="'isReloading'; allContainerBarrels[0].progress.value != 0"/>
		<bind name="watch" value="'isReloadingOrCooldown'; isCooldown || isReloading"/>
		<block>
			<style>
				<position value="absolute"/>
				<left value="-113"/>
				<bottom value="60px"/>
			</style>
			<bind name="instance" value="'SubmarineWeaponsPanelItemHint'; rollOver ? {_submarineTorpedoEntityId: submarineTorpedoEntity.id} : null"/>
		</block>
		<block>
			<bind name="transition" value="isSelected; 0.07; {scaleX: 0.86, scaleY: 0.86, alpha: 0.8}; {scaleX: 1, scaleY: 1, alpha: 1}; {scaleX: 0.86, scaleY: 0.86, alpha: 0.8}; isSelected ? 2 : 0"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<left value="32px"/>
				<top value="60px"/>
			</style>
			<block>
				<style>
					<backgroundColor value="0x9900ffcc"/>
					<left value="-27px"/>
					<top value="-54px"/>
					<width value="54px"/>
					<height value="52px"/>
					<backgroundStretchX value="true"/>
					<backgroundStretchY value="true"/>
					<position value="absolute"/>
				</style>
				<bind name="style" value="'backgroundImage'; isAimedForward	?	'symbol:torpedo_range_normal_1'
															:	'symbol:torpedo_range_rear_1'"/>
			</block>
			<block>
				<style>
					<left value="-30px"/>
					<top value="-58px"/>
					<width value="60px"/>
					<height value="60px"/>
					<backgroundStretchX value="true"/>
					<backgroundStretchY value="true"/>
					<position value="absolute"/>
				</style>
				<bind name="style" value="'backgroundImage'; ('url:../consumables/ammo_torpedo_halloween_' + type + '.png')"/>
			</block>
			<block className="gun_keycontrol_reload_tint_sprite" type="native">
				<bind name="transition" value="isReloadingOrCooldown; 0.1; {alpha: 0}; {alpha: 1}; {alpha: 0}"/>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<bind name="watch" value="'curMaskY';	isReloading ? (-56 * (1 - progressReloadValue/maxReloadValue)) :
									isCooldown	? (-56 * (1 - progressCooldownValue/maxCooldownValue))
												: -56"/>
			<block className="weapon_panel_mask" type="native">
				<bind name="visible" value="isReloadingOrCooldown || isLocked"/>
				<bind name="y" value="isLocked ? 0 : curMaskY"/>
				<bind name="isMask" value="true"/>
				<style>
					<position value="absolute"/>
					<width value="56px"/>
					<height value="56px"/>
					<alpha value="1"/>
				</style>
				<block className="gun_keycontrol_bg_sprite" type="native">
					<style>
						<position value="absolute"/>
						<top value="2px"/>
					</style>
				</block>
			</block>
			<block className="gun_keycontrol_reload_bar_sprite" type="native">
				<bind name="visible" value="isReloadingOrCooldown"/>
				<bind name="y" value="curMaskY"/>
				<style>
					<position value="absolute"/>
					<width value="54px"/>
					<alpha value="0.9"/>
				</style>
			</block>
			<block type="text">
				<bind name="fade" value="isReloadingOrCooldown &amp;&amp; !isLocked; 0.07; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: -5}"/>
				<style>
					<width value="100%"/>
					<left value="-32px"/>
					<top value="-36"/>
					<textAlign value="center"/>
					<position value="absolute"/>
				</style>
				<styleClass value="$TextDefault25NM"/>
				<bind name="style" value="'textColor'; 0xffffe68d"/>
				<bind name="pureText" value="countdownFormat(isReloading	?	progressReloadValue
														:	progressCooldownValue, 1, false, false)"/>
			</block>
			<block className="weapon_lock_icon" type="native">
				<style>
					<position value="absolute"/>
					<top value="2px"/>
				</style>
				<bind name="fade" value="isLocked; 0.1; {scaleX: 1.2,	scaleY: 1.2,	alpha: 0};
										{scaleX: 1,		scaleY: 1,		alpha: 1};
										{scaleX: 1.2,	scaleY: 1.2,	alpha: 0}"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<alpha value="0"/>
				</style>
				<bind name="appear" value="'evReloadCompleted'; 0.2; 0; {alpha: 0.7, scaleX: 1, scaleY: 1}; {alpha: 0, scaleX: 1.35, scaleY: 1.35}; 2"/>
				<block className="gun_keycontrol_ready_tint_sprite" type="native">
					<style>
						<alpha value="0.8"/>
					</style>
				</block>
				<block className="gun_keycontrol_ready_stroke_sprite" type="native">
					<style>
						<position value="absolute"/>
					</style>
				</block>
			</block>
		</block>
		<block className="gun_keycontrol_ready_stroke_sprite" type="native">
			<bind name="transition" value="isSelected; 0.07; {scaleX: 1.2, scaleY: 1.2, alpha: 0}; {scaleX: 1, scaleY: 1, alpha: 1}; {scaleX: 1.2, scaleY: 1.2, alpha: 0}; isSelected ? 2 : 0"/>
			<style>
				<position value="absolute"/>
				<left value="32px"/>
				<top value="60px"/>
			</style>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<bottom value="-22px"/>
				<left value="32px"/>
			</style>
			<block className="HotkeyAnimation" type="native">
				<bind name="commandId" value="commandId"/>
			</block>
		</block>
	</block>
	<block className="SubmarineWeaponsPanelItemHint">
		<bind name="entityDH" value="'submarineTorpedoEntity'; _submarineTorpedoEntityId"/>
		<bind name="watchDH" value="'type'; []; submarineTorpedoEntity.submarineTorpedo.type"/>
		<bind name="watchDH" value="'reloadTime';		[]; submarineTorpedoEntity.submarineTorpedo.reloadTime"/>
		<bind name="watchDH" value="'range';				[]; submarineTorpedoEntity.submarineTorpedo.range"/>
		<bind name="watchDH" value="'speed';				[]; submarineTorpedoEntity.submarineTorpedo.speed"/>
		<bind name="watchDH" value="'damage';			[]; submarineTorpedoEntity.submarineTorpedo.damage"/>
		<bind name="watchDH" value="'isAimedForward';	[]; submarineTorpedoEntity.submarineTorpedo.aimedForward"/>
		<bind name="watch" value="'attributesNeutral'; [	{attributeIDS: 'IDS_PARAMS_MODIFIER_RELOADTIME',	measuredValue: reloadTime,	measure: 'IDS_SECOND'},
										{attributeIDS: 'IDS_SHIP_PARAM_TORPEDO_DAMAGE',		measuredValue: damage,		measure: ''},
										{attributeIDS: 'IDS_SHIP_PARAM_TORPEDO_SPEED',		measuredValue: speed,		measure: 'IDS_KNOT'},
										{attributeIDS: 'IDS_SHIP_PARAM_TORPEDOES_MAX_DIST',	measuredValue: range,		measure: 'IDS_KILOMETER_SPACE'}]"/>
		<bind name="appear" value="'addedToStage'; 0.1; 0; {alpha: 0}; {alpha: 1}"/>
		<style>
			<width value="290px"/>
			<hitTest value="false"/>
		</style>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<alpha value="1.2"/>
			</style>
			<bind name="instance" value="'TooltipBackground'; {_isInBattle: true}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="14px"/>
				<marginLeft value="2px"/>
				<marginRight value="2px"/>
				<marginLeft value="2px"/>
				<marginBottom value="2px"/>
			</style>
			<block>
				<style>
					<marginLeft value="12px"/>
					<marginRight value="12px"/>
					<width value="100%"/>
					<marginBottom value="8px"/>
				</style>
				<block>
					<style>
						<left value="3px"/>
						<top value="4px"/>
						<width value="54px"/>
						<height value="52px"/>
						<backgroundStretchX value="true"/>
						<backgroundStretchY value="true"/>
						<position value="absolute"/>
					</style>
					<bind name="style" value="'backgroundImage'; isAimedForward	?	'symbol:torpedo_range_normal_1'
																:	'symbol:torpedo_range_rear_1'"/>
				</block>
				<block>
					<style>
						<width value="60px"/>
						<height value="60px"/>
						<backgroundStretchX value="true"/>
						<backgroundStretchY value="true"/>
					</style>
					<bind name="style" value="'backgroundImage'; ('url:../consumables/ammo_torpedo_halloween_' + type + '.png')"/>
				</block>
				<block type="text">
					<style>
						<marginLeft value="12px"/>
						<width value="100%"/>
						<alpha value="0.9"/>
						<leading value="-3"/>
					</style>
					<styleClass value="$TextDefaultBold17NM"/>
					<bind name="text" value="tr('IDS_HALLOWEEN_TORPEDOES_TITLE_' + toUpperCase(type))"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<alpha value="1"/>
				</style>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="1.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<alpha value="1"/>
						<marginLeft value="12px"/>
						<marginRight value="12px"/>
						<marginTop value="18px"/>
						<marginBottom value="-4px"/>
					</style>
					<bind name="repeat" value="attributesNeutral; 'ParamsModifierItem'; {_shrinkHeight: true}"/>
				</block>
			</block>
		</block>
	</block>
	<block className="SubmarineTorpedoesReloadBars">
		<style>
			<flow value="horizontal"/>
		</style>
		<bind name="collectionRepeatDH" value="CC.submarineTorpedo; 'SubmarineTorpedoReloadBarContainer'; ''; {}"/>
	</block>
	<block className="SubmarineTorpedoReloadBarContainer">
		<bind name="dataRefDH" value="'submarineTorpedoEntity'; '$dataRef.ref'"/>
		<style>
			<flow value="horizontal"/>
			<marginLeft value="10px"/>
			<marginRight value="10px"/>
		</style>
		<bind name="watchDH" value="'torpedoesGroupId';	[]; submarineTorpedoEntity.submarineTorpedo.id"/>
		<bind name="watchDH" value="'aimState';			['submarineTorpedoEntity.submarineTorpedo.evAimStateChanged']; submarineTorpedoEntity.submarineTorpedo.aimState"/>
		<bind name="watchDH" value="'nowReloadingId';	['submarineTorpedoEntity.submarineTorpedo.evNowReloadingIdChanged']; submarineTorpedoEntity.submarineTorpedo.nowReloadingId"/>
		<bind name="watchDH" value="'isSelected';		['submarineTorpedoEntity.submarineTorpedo.evSelectedChanged']; submarineTorpedoEntity.submarineTorpedo.selected"/>
		<bind name="watchDH" value="'progressCooldownValue'; ['submarineTorpedoEntity.progress.evChanged']; submarineTorpedoEntity.progress.value"/>
		<bind name="watch" value="'isCooldown'; (progressCooldownValue != 0)"/>
		<bind name="style" value="'alpha'; isSelected ? 1 : 0.4"/>
		<block type="text">
			<style>
				<marginRight value="5px"/>
				<top value="-1px"/>
			</style>
			<styleClass value="$TextDefault13NM"/>
			<bind name="text" value="torpedoesGroupId + 1"/>
		</block>
		<block>
			<style>
				<marginTop value="2px"/>
			</style>
			<bind name="entityDH" value="'currentReloadindBarrelEntity'; nowReloadingId"/>
			<bind name="watchDH" value="'progressReloadValue'; ['currentReloadindBarrelEntity.progress.evChanged']; currentReloadindBarrelEntity.progress.value"/>
			<bind name="watch" value="'isReloading'; nowReloadingId != 0"/>
			<block type="text">
				<bind name="visible" value="isReloading"/>
				<style>
					<width value="100%"/>
					<textAlign value="center"/>
					<top value="-14"/>
					<position value="absolute"/>
					<alpha value="0.9"/>
				</style>
				<styleClass value="$TextDefaultNM"/>
				<bind name="pureText" value="countdownFormat(progressReloadValue, 1, false, false)"/>
			</block>
			<block className="NewReloadBarBG" type="native">
				<style>
					<width value="100%"/>
					<marginLeft value="-1px"/>
					<marginRight value="-1px"/>
					<position value="absolute"/>
				</style>
			</block>
			<block>
				<style>
					<marginTop value="2px"/>
				</style>
				<bind name="collectionRepeatDH" value="CC.submarineTorpedoBarrel; 'SubmarineTorpedoReloadItem'; 'byGroup.group' + torpedoesGroupId; {_aimState: aimState, _isCooldown: isCooldown}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="SubmarineTorpedoReloadItem">
		<bind name="dataRefDH" value="'barrelEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'torpedoesGroupId'; []; barrelEntity.submarineTorpedoBarrel.groupId"/>
		<bind name="collectionDH" value="CC.submarineTorpedoBarrel; 'submarineTorpedoBarrels'; 'byGroup.group' + torpedoesGroupId"/>
		<bind name="watch" value="'isReloaded'; (progressValue == 0)"/>
		<bind name="watch" value="'isReloadingOrCooldown'; _isCooldown || !(isReloaded)"/>
		<bind name="var" value="{containerWidth: 70}"/>
		<bind name="watch" value="'barItemWidth'; (containerWidth/submarineTorpedoBarrels.length - (submarineTorpedoBarrels.length - 1)*2)"/>
		<bind name="style" value="'marginRight'; ($index &lt; (submarineTorpedoBarrels.length - 1) ? '2px' : '0px')"/>
		<bind name="watchDH" value="'progressValue'; ['barrelEntity.progress.evChanged']; barrelEntity.progress.value"/>
		<bind name="watchDH" value="'progressMax';	['barrelEntity.progress.evChanged']; barrelEntity.progress.max"/>
		<style>
			<width value="1px"/>
		</style>
		<bind name="style" value="'width'; (barItemWidth +'px')"/>
		<block className="NewReloadBarProgressOrange" type="native">
			<bind name="visible" value="isReloadingOrCooldown || (_aimState != RotationState.AIMED)"/>
			<style>
				<position value="absolute"/>
				<height value="2px"/>
			</style>
			<bind name="style" value="'width'; (barItemWidth * (1 - progressValue/progressMax)) + 'px'"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<width value="100%"/>
				<height value="2px"/>
			</style>
			<bind name="visible" value="!isReloadingOrCooldown &amp;&amp; (_aimState == RotationState.AIMED)"/>
			<block className="NewReloadBarProgressGreen" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block className="NewReloadBarDivider" type="native">
			<bind name="visible" value="($index &gt; 0)"/>
			<style>
				<position value="absolute"/>
				<left value="-2px"/>
				<top value="-2px"/>
			</style>
		</block>
	</block>
	<block className="SubmarineOxygenBar">
		<bind name="firstEntityDH" value="'submarineEntity'; CC.submarine"/>
		<bind name="watchDH" value="'depth';			['submarineEntity.submarine.evDepthChanged']; submarineEntity.submarine.depth"/>
		<bind name="watchDH" value="'oxygen';		['submarineEntity.submarine.evOxygenChanged']; submarineEntity.submarine.oxygen"/>
		<bind name="watchDH" value="'maxOxygen';		[]; submarineEntity.submarine.maxOxygen"/>
		<bind name="watchDH" value="'oxygenSpeed'; ['submarineEntity.submarine.evOxygenSpeedChanged']; -(submarineEntity.submarine.oxygenSpeed)"/>
		<bind name="watchDH" value="'isOxygenAlert'; ['submarineEntity.submarine.evIsInDangerOxygenLevelChanged']; submarineEntity.submarine.isInDangerOxygenLevel"/>
		<bind name="watchDH" value="'isInMinOxygenState'; ['submarineEntity.submarine.evIsInMinOxygenStateChanged']; submarineEntity.submarine.isInMinOxygenState"/>
		<bind name="watch" value="'curTimeInSeconds';	oxygen/oxygenSpeed"/>
		<bind name="timeFormat" value="(curTimeInSeconds &gt; 0) ? curTimeInSeconds : 0; 'mm:ss'; 'formattedText'"/>
		<bind name="watch" value="'oxygenLeft'; oxygen/maxOxygen"/>
		<bind name="fade" value="oxygenLeft &lt; 1; 0.11; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1; depth == 'SURFACE' ? 3 : 0"/>
		<bind name="watch" value="'curMaskY'; math.round(121 * (1 - oxygenLeft))"/>
		<bind name="watch" value="'curCapY'; curMaskY - (curMaskY % 2)"/>
		<bind name="changeDispatch" value="curCapY; 'curMaskYChanged'; {}; 2"/>
		<block className="oxygen_bar_bg" type="native">
			<style>
				<height value="123px"/>
			</style>
		</block>
		<block className="universal_mask" type="native">
			<bind name="y" value="curMaskY"/>
			<bind name="isMask" value="true"/>
			<style>
				<position value="absolute"/>
				<width value="4px"/>
				<top value="1px"/>
				<height value="121px"/>
				<alpha value="1"/>
			</style>
			<block className="oxygen_bar" type="native">
				<style>
					<position value="absolute"/>
					<left value="1px"/>
				</style>
			</block>
			<block className="oxygen_bar_orange" type="native">
				<bind name="fade" value="isOxygenAlert; 0.1; {alpha: 0}; {alpha: 1}; {alpha: 0};"/>
				<style>
					<position value="absolute"/>
					<left value="1px"/>
				</style>
			</block>
		</block>
		<block className="oxygen_bar_cap" type="native">
			<style>
				<position value="absolute"/>
				<left value="1px"/>
				<marginTop value="1px"/>
			</style>
			<bind name="appear" value="depth != 'SURFACE' ? 'curMaskYChanged' : null; 0.7; 0; {alpha: 0}; {alpha: 1}"/>
			<bind name="y" value="curCapY"/>
		</block>
		<block>
			<bind name="fade" value="(oxygenLeft &lt; 1) &amp;&amp; (depth != 'SURFACE'); 0.13; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: 5}; 1; 0"/>
			<style>
				<position value="absolute"/>
				<width value="40px"/>
				<bottom value="12px"/>
				<right value="0"/>
				<alpha value="0.9"/>
			</style>
			<bind name="instance" value="'BlinkingTextField'; {	_text: formattedText, 
												_textClass: '$TextDefaultBoldNM', 
												_blinkOffColor: !(isOxygenAlert) || isInMinOxygenState ? '0xFFFFFF' : '0xFFFDAA0E', 
												_blinkOnColor: '0xFE6500',
												_blinkDuration: 0.4, 
												_blinkEnabled: isInMinOxygenState}"/>
		</block>
	</block>
	<block className="BlinkingTextField">
		<style>
			<width value="100%"/>
		</style>
		<bind name="var" value="{blinkOn: false}"/>
		<bind name="dispatch" value="'addedToStage'; _blinkEnabled != false ? 'evBlinkOn' : ''; {}; 2; _blinkDuration"/>
		<bind name="changeDispatch" value="_blinkEnabled; 'evBlinkOn'; {}; true; true"/>
		<bind name="dispatch" value="'evDelayedBlinkOn'; _blinkEnabled != false ? 'evBlinkOn' : ''; {}; 2; _blinkDuration"/>
		<bind name="catch" value="'evBlinkOn'; {blinkOn: true}; 'evDelayedBlinkOff'"/>
		<bind name="dispatch" value="'evDelayedBlinkOff'; 'evBlinkOff'; {}; 2; _blinkDuration"/>
		<bind name="catch" value="'evBlinkOff'; {blinkOn: false}; 'evDelayedBlinkOn'"/>
		<block type="text">
			<style>
				<position value="absolute"/>
				<textAlign value="center"/>
			</style>
			<bind name="style" value="'textColor'; _blinkOffColor"/>
			<bind name="class" value="_textClass"/>
			<bind name="pureText" value="_text"/>
		</block>
		<block type="text">
			<bind name="transition" value="blinkOn; _blinkDuration; {alpha: 0}; {alpha: 1}"/>
			<style>
				<position value="absolute"/>
				<textAlign value="center"/>
			</style>
			<bind name="style" value="'textColor'; _blinkOnColor"/>
			<bind name="class" value="_textClass"/>
			<bind name="pureText" value="_text"/>
		</block>
	</block>
	<block className="AirplaneAimIndicators">
		<bind name="firstEntityDH" value="'ownCarrierEntity'; CC.aircarrier;"/>
		<bind name="watchDH" value="'activeSquadron'; ['ownCarrierEntity.aircarrier.evStateChanged']; ownCarrierEntity.aircarrier.activeSquadron"/>
		<styleClass value="$FullsizeAbsolute"/>
		<style>
			<hitTest value="false"/>
		</style>
		<block>
			<styleClass value="$MiddleVHAbsolutely"/>
			<bind name="instance" value="'AirplaneForsageIndicator'; {_activeSquadron: activeSquadron}"/>
		</block>
		<block>
			<styleClass value="$MiddleVHAbsolutely"/>
			<bind name="instance" value="'AirplaneCentralAim'; false ? {_activeSquadron: activeSquadron} : null"/>
		</block>
		<block>
			<styleClass value="$MiddleVHAbsolutely"/>
			<bind name="instance" value="'AirplaneAttackIndicator'; {_activeSquadron: activeSquadron}"/>
		</block>
	</block>
	<block className="AirplaneCentralAim">
		<bind name="primaryEntityDH" value="'currentSquadronEntity'; CC.ownSquadron; _activeSquadron"/>
		<bind name="watchDH" value="'attackState'; ['currentSquadronEntity.ownSquadron.evAttackingStateChanged']; currentSquadronEntity.ownSquadron.attackState"/>
		<bind name="firstEntityDH" value="'timerEntity'; CC.timer"/>
		<bind name="watchDH" value="'timeRemain'; ['timerEntity.timer.evFrequent']; currentSquadronEntity.countDown ? currentSquadronEntity.countDown.endTime - timerEntity.timer.currentTime : 0"/>
		<bind name="watchDH" value="'reloadPercent'; []; currentSquadronEntity.countDown ? 1 - timeRemain / currentSquadronEntity.countDown.duration : 1"/>
		<bind name="watch" value="'showReload'; reloadPercent &lt; 1 &amp;&amp; (timeRemain &gt; 0.15)"/>
		<bind name="watch" value="'curMaskY'; 	!(showReload) 		? 0 :
								attackState == 2 	? 9 * reloadPercent
												 	: 9 * (1 - reloadPercent)"/>
		<style>
			<width value="20px"/>
			<height value="11px"/>
		</style>
		<bind name="watch" value="'crosshairColor'; showReload &amp;&amp; isIn(attackState, [0, 1, 3]) 	? 'prepare' :
									attackState == 2							? 'attack'
																				: ''"/>
		<block className="universal_mask" type="native">
			<bind name="visible" value="showReload"/>
			<bind name="y" value="math.floor(curMaskY)"/>
			<bind name="isMask" value="true"/>
			<style>
				<width value="18px"/>
				<height value="9px"/>
				<top value="1px"/>
				<left value="1px"/>
			</style>
			<block>
				<bind name="fade" value="showReload &amp;&amp; crosshairColor; 0.2; {alpha: 0}; {alpha: 1}; {alpha: 0}; 0; 0.2"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="style" value="'backgroundImage'; 'url:../service_kit/hud_elements/plane_crosshair/' + crosshairColor + '.png'"/>
			</block>
		</block>
		<block>
			<bind name="fade" value="!(showReload); 0.2; {alpha: 0}; {alpha: 1}; {alpha: 0}; 0; showReload ? 0 : 0.2"/>
			<style>
				<width value="18px"/>
				<height value="9px"/>
				<top value="1px"/>
				<left value="1px"/>
				<position value="absolute"/>
				<backgroundImage value="url:../service_kit/hud_elements/plane_crosshair/default.png"/>
			</style>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundImage value="url:../service_kit/hud_elements/plane_crosshair/bgr.png"/>
			</style>
		</block>
	</block>
	<block className="AirplaneForsageIndicator">
		<bind name="primaryEntityDH" value="'currentSquadronEntity'; CC.ownSquadron; _activeSquadron"/>
		<bind name="watchDH" value="'isForsageUsing';		['currentSquadronEntity.forsageElement.evForsageStateChanged'];	currentSquadronEntity.forsageElement.isUsing"/>
		<bind name="watchDH" value="'forsageCurrentValue';	['currentSquadronEntity.forsageElement.evCurrentChanged'];		currentSquadronEntity.forsageElement.current"/>
		<bind name="watchDH" value="'healState';				['currentSquadronEntity.forsageElement.evHealStateChanged'];	currentSquadronEntity.forsageElement.healState"/>
		<bind name="watchDH" value="'flightSpeed';			['currentSquadronEntity.flightSpeed.evValueChanged'];			currentSquadronEntity.flightSpeed.value"/>
		<bind name="watchDH" value="'forsageMaxValue';		[]; currentSquadronEntity.forsageElement.max"/>
		<bind name="watchDH" value="'forsageMaxRegenTime';	[]; currentSquadronEntity.forsageElement.maxRegenTime"/>
		<bind name="handleEventDH" value="'currentSquadronEntity.forsageElement.evForsageFinished'; 'evForsageFinished'"/>
		<bind name="dispatch" value="'evForsageFinished'; 'evForsageFinishedAnimate'"/>
		<bind name="watch" value="'currentPersent'; (forsageCurrentValue / forsageMaxValue)"/>
		<style>
			<left value="3px"/>
			<position value="absolute"/>
		</style>
		<block>
			<style>
				<right value="122px"/>
				<top value="-80px"/>
				<width value="28px"/>
				<height value="160px"/>
				<position value="absolute"/>
				<backgroundImage value="url:../aircraft/forsage_aim_bgr.png"/>
			</style>
		</block>
		<bind name="watch" value="'radiusCircle'; 152"/>
		<block className="lesta.display.Sector" type="native">
			<style>
				<position value="absolute"/>
			</style>
			<bind name="rotation" value="0"/>
			<bind name="offset" value="145"/>
			<bind name="color" value="0xFFFFFF"/>
			<bind name="arc" value="1 + 67 * currentPersent"/>
			<bind name="radius" value="radiusCircle"/>
			<bind name="innerRadius" value="radiusCircle - 8"/>
			<bind name="isMask" value="true"/>
			<block className="forsage_progress_bar" type="native">
				<bind name="transition" value="currentPersent != 1 || showForsageIndicator; 0.2; {alpha: 0}; {alpha: 1}; {alpha: 0}; 2; currentPersent != 1 ? 0 : 0.2"/>
				<style>
					<position value="absolute"/>
				</style>
			</block>
		</block>
		<block>
			<style>
				<right value="164px"/>
				<position value="absolute"/>
			</style>
			<block type="text">
				<style>
					<textAlign value="right"/>
					<alpha value="0.9"/>
				</style>
				<styleClass value="$TextDefaultBold19NM"/>
				<bind name="text" value="math.round(flightSpeed)"/>
			</block>
			<block type="text">
				<style>
					<textAlign value="right"/>
					<marginTop value="1px"/>
					<alpha value="0.7"/>
					<marginLeft value="2px"/>
				</style>
				<styleClass value="$TextDefault17NM"/>
				<bind name="text" value="' ' + tr('IDS_FORSAGE_INDICATOR_KILOMETERS')"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<bind name="watch" value="'showForsageIndicator'; (isForsageUsing || healState == 1)"/>
		<block>
			<style>
				<alpha value="0"/>
				<position value="absolute"/>
				<right value="188px"/>
				<top value="24px"/>
			</style>
			<bind name="fade" value="showForsageIndicator; 0.2; {alpha: 0}; {alpha: 1}; {alpha: 0}; 2; showForsageIndicator ? 0 : 0.2"/>
			<bind name="appear" value="'evForsageFinishedAnimate'; 0.2; 0.0; {alpha: 1}; {alpha: 0.5}"/>
			<bind name="appear" value="'evForsageFinishedAnimate'; 0.2; 0.25; {alpha: 0.5}; {alpha: 1}"/>
			<bind name="instance" value="'ForsageIndicatorConsumableIcon'; {_healState: healState, _currentPersent: currentPersent}"/>
		</block>
	</block>
	<block className="AirplaneAttackIndicator">
		<bind name="primaryEntityDH" value="'currentSquadronEntity'; CC.ownSquadron; _activeSquadron"/>
		<bind name="watchDH" value="'attackState'; ['currentSquadronEntity.ownSquadron.evAttackingStateChanged']; currentSquadronEntity.ownSquadron.attackState"/>
		<bind name="firstEntityDH" value="'timerEntity'; CC.timer"/>
		<bind name="watchDH" value="'timeRemain'; ['timerEntity.timer.evFrequent']; currentSquadronEntity.countDown ? currentSquadronEntity.countDown.endTime - timerEntity.timer.currentTime : 0"/>
		<bind name="watchDH" value="'reloadPercent'; []; currentSquadronEntity.countDown ? 1 - timeRemain / currentSquadronEntity.countDown.duration : 1"/>
		<bind name="watch" value="'reloadPercentFX'; reloadPercent &lt; 1 ? reloadPercent : attackState == 0 ? 0 : 1"/>
		<bind name="watch" value="'showReload'; reloadPercent &lt; 1 &amp;&amp; (timeRemain &gt; 0.15)"/>
		<bind name="watch" value="'isReloadHacked'; (reloadPercent != 1 &amp;&amp; attackState == 0)"/>
		<bind name="watch" value="'colorState';	isReloadHacked								? '0xffff9933' :
								attackState == 0			? '0xFFf5f5f5' :
								attackState == 1	? '0xffff9933' :
								attackState == 2		? '0xFF4ce7a9' :
								attackState == 3			? '0xffff9933' 
																			: '0xff0000ff'"/>
		<bind name="watch" value="'radiusCircle'; 150"/>
		<block>
			<style>
				<left value="124px"/>
				<top value="-80px"/>
				<width value="26px"/>
				<height value="160px"/>
				<position value="absolute"/>
				<backgroundImage value="url:../aircraft/attack_aim_bgr.png"/>
			</style>
		</block>
		<block>
			<bind name="fade" value="showReload; 0.15; {alpha: 0}; {alpha: 1}; {alpha: 0}; 2"/>
			<bind name="instance" value="'AttackIndicatorProgress';
			{
				_rotation: 0,
				_angle: 33,
				_radius: radiusCircle,
				_innerRadius: radiusCircle - 2,
				_arc: -66,
				_color: colorState,
				_reloadPercentFX: ((attackState == 1 || isReloadHacked) ? 1 - reloadPercentFX : reloadPercentFX)
			}
		"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<left value="162px"/>
				<height value="196px"/>
			</style>
			<bind name="fade" value="showReload; 0.15; {alpha: 0}; {alpha: 1}; {alpha: 0}; 2"/>
			<bind name="watch" value="'reloadTextColor'; attackState &gt;= 2 &amp;&amp; timeRemain &lt;= 1 ? '0xFF0000' : '0xFFFFFF'"/>
			<block type="text">
				<style>
					<textAlign value="left"/>
					<alpha value="0.9"/>
				</style>
				<styleClass value="$TextDefaultBold19NM"/>
				<bind name="style" value="'textColor'; reloadTextColor"/>
				<bind name="transition" value="timeRemain &gt;= 60; 0.15;	{scaleX:1, ubScaleX:1, scaleY:1, ubScaleY:1};
														{scaleX:0.8, ubScaleX:0.8, scaleY:0.8, ubScaleY:0.8}"/>
				<bind name="text" value="(showReload ? countdownFormat(timeRemain) : '')"/>
			</block>
			<block type="text">
				<style>
					<textAlign value="left"/>
					<marginTop value="1px"/>
					<alpha value="0.7"/>
					<marginLeft value="2px"/>
				</style>
				<styleClass value="$TextDefault17NM"/>
				<bind name="style" value="'textColor'; reloadTextColor"/>
				<bind name="text" value="(showReload ? (' ' + tr('s')) : '')"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="AttackIndicatorProgress">
		<style>
			<position value="absolute"/>
			<top value="0px"/>
		</style>
		<bind name="watch" value="'energyInPercent'; _arc * (1 - _reloadPercentFX)"/>
		<block className="lesta.display.Sector" type="native">
			<bind name="rotation" value="_rotation"/>
			<bind name="offset" value="_angle"/>
			<bind name="color" value="_color"/>
			<bind name="arc" value="energyInPercent"/>
			<bind name="radius" value="_radius"/>
			<bind name="innerRadius" value="_innerRadius"/>
		</block>
	</block>
	<block className="ForsageIndicatorConsumableIcon">
		<style>
			<width value="30px"/>
			<height value="28px"/>
			<position value="absolute"/>
		</style>
		<bind name="watch" value="'itemImageUrl'; _healState == 1 	? '../aircraft/forsage_indicator_icon_enabled.png'
								 					: '../aircraft/forsage_indicator_icon.png'"/>
		<bind name="style" value="'backgroundImage'; 'url:' + itemImageUrl"/>
		<block>
			<bind name="fade" value="_currentPersent == 0; 0.25; {alpha: 0}; {alpha: 0.8}; {alpha: 0}; 2"/>
			<bind name="style" value="'backgroundImage';	'url:../aircraft/forsage_indicator_icon_low.png'"/>
		</block>
	</block>
	<css name="$ColorStatePlaneLowHP">
		<backgroundColor value="0xFFFF3300"/>
	</css>
	<css name="$ColorStatePlaneHalfHP">
		<backgroundColor value="0xFFFF9900"/>
	</css>
	<css name="$ColorStatePlaneFullHP">
		<backgroundColor value="0xFF4CE8AA"/>
	</css>
	<css name="$ColorStatePlaneDamage">
		<backgroundColor value="0xFFFFFFFF"/>
	</css>
	<block className="AirplaneHealthBar">
		<bind name="firstEntityDH" value="'ownSquadronesEntity'; CC.ownSquadron; 'selected'"/>
		<bind name="watchDH" value="'maxPlanes';			['ownSquadronesEntity.health.evValueChanged']; ownSquadronesEntity.health.max"/>
		<bind name="watchDH" value="'currentHP_points';	['ownSquadronesEntity.squadron.evCurrentHPChanged'];	ownSquadronesEntity.squadron.currentHP"/>
		<bind name="watchDH" value="'maxHP_points';		['ownSquadronesEntity.squadron.evMaxHPChanged'];		ownSquadronesEntity.squadron.maxHP"/>
		<bind name="watchDH" value="'planeNameIDS';		[]; ownSquadronesEntity.plane.planeNameIDS"/>
		<bind name="watchDH" value="'levelRome';			[]; ownSquadronesEntity.plane.levelRome"/>
		<bind name="var" value="{ planeIconNames: ['plane_scout_own', 'plane_bomber_own', 'plane_torpedo_own', 'plane_fighter_own_bg'] }"/>
		<bind name="var" value="{ planeIconTopOffset: ['-6px', '-5px', '-6px', '-4px'] }"/>
		<bind name="watch" value="'healthPointWidth'; math.round(314/maxPlanes)}"/>
		<bind name="fade" value="currentHP_points &gt; 0; 0.1; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: -10}; 1; 0.05"/>
		<styleClass value="$MiddleAlignedAbsolutely"/>
		<style>
			<width value="314px"/>
			<bottom value="115px"/>
		</style>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="repeat" value="maxPlanes; 'AirplanesHealthPointBgr'; {_healthPointWidth:	healthPointWidth}"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="collectionRepeatDH" value="CC.aircraft; 'AirplanesHealthPoint';	'bySquadron.' + ownSquadronesEntity.squadron.id;
																		{_healthPointWidth:	healthPointWidth}"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="currentHP_points ? true : false"/>
			<style>
				<width value="314px"/>
				<top value="12px"/>
				<position value="absolute"/>
			</style>
			<block>
				<style>
					<position value="absolute"/>
					<left value="1px"/>
					<width value="22px"/>
				</style>
				<bind name="style" value="'top'; planeIconTopOffset[ownSquadronesEntity.plane.planeType]"/>
				<bind name="style" value="'backgroundImage'; 'symbol:' + planeIconNames[ownSquadronesEntity.plane.planeType]"/>
			</block>
			<block type="text">
				<style>
					<left value="23px"/>
					<position value="absolute"/>
					<width value="200px"/>
					<multiline value="false"/>
				</style>
				<styleClass value="$TextDefaultBoldNM"/>
				<bind name="text" value="levelRome + ' ' + tr(planeNameIDS)"/>
			</block>
			<block>
				<style>
					<position value="absolute"/>
					<right value="1px"/>
				</style>
				<bind name="watch" value="'healthPercent'; currentHP_points/maxHP_points"/>
				<block type="text">
					<style>
						<marginRight value="3px"/>
					</style>
					<styleClass value="$TextDefaultBoldNM"/>
					<bind name="class" value="	healthPercent &gt;= 0.75	? '$TextColorHUDPositivePC' :
								healthPercent &gt;= 0.25	? '$TextColorHUDWarningPC' :
								healthPercent &gt; 0		? '$TextColorHUDCriticalPC'
														: '$TextColorHUDDeadPC'"/>
					<bind name="text" value="format(currentHP_points, -1)"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultNM"/>
					<bind name="text" value="'/' + format(maxHP_points, -1)"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="AirplanesHealthPointBgr">
		<block className="hud_bar_bg_sliced" type="native">
			<bind name="style" value="'width'; _healthPointWidth + 'px'"/>
		</block>
	</block>
	<block className="HUDHealthLabel">
		<style>
			<flow value="horizontal"/>
		</style>
		<bind name="watch" value="'_healthPercent'; _healthValue/_maxHealth"/>
		<block type="text">
			<style>
				<marginRight value="3px"/>
			</style>
			<styleClass value="$TextDefaultBoldNM"/>
			<bind name="class" value="	_healthPercent &gt;= 0.75	? '$TextColorHUDPositivePC' :
						_healthPercent &gt;= 0.25	? '$TextColorHUDWarningPC' :
						_healthPercent &gt; 0		? '$TextColorHUDCriticalPC'
												: '$TextColorHUDDeadPC'"/>
			<bind name="text" value="format(_healthValue, -1)"/>
		</block>
		<block type="text">
			<styleClass value="$TextDefaultNM"/>
			<bind name="text" value="'/' + format(_maxHealth, -1)"/>
		</block>
	</block>
	<block className="AirplanesHealthPoint">
		<bind name="dataRefDH" value="'selectedOwnPlaneEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'currentState'; ['selectedOwnPlaneEntity.health.evValueChanged']; selectedOwnPlaneEntity.health.value"/>
		<bind name="watch" value="'airplaneColorStatus';	(currentState	==	0)		? '$ColorStatePlaneFullHP' :
										(currentState	==	1)		? '$ColorStatePlaneHalfHP'
																	: '$ColorStatePlaneLowHP'"/>
		<bind name="var" value="{bufferColorStatus: airplaneColorStatus}"/>
		<bind name="watch" value="'startPlanePosition'; $index * _healthPointWidth"/>
		<bind name="handleEventDH" value="'selectedOwnPlaneEntity.aircraftAnimation.evPlayOutAnimation'; 'evPlayOut'"/>
		<bind name="dispatch" value="'evPlayOut'; 'evPlayOut_animation'; {}; 0; 0"/>
		<bind name="dispatch" value="'evPlayOut'; 'evPlayOut_blink'; {}; 0; 0"/>
		<bind name="appear" value="'evPlayOut_animation'; 0.25; 2; {alpha: 1}; {alpha: 0}"/>
		<bind name="handleEventDH" value="'selectedOwnPlaneEntity.aircraftAnimation.evPlayDeathAnimation'; 'evPlaneDeath'"/>
		<bind name="dispatch" value="'evPlaneDeath'; 'evPlaneDeath_animation'; []; 0; 0"/>
		<bind name="appear" value="'evPlaneDeath_animation'; 0.3; 0.0; {alpha: 1}; {alpha: 0}	"/>
		<bind name="changeDispatch" value="airplaneColorStatus; bufferColorStatus != airplaneColorStatus ? 'evPlayBlink' : null; {}; true"/>
		<bind name="style" value="'width'; (_healthPointWidth-2) + 'px'"/>
		<style>
			<height value="2px"/>
			<marginLeft value="1px"/>
			<marginRight value="1px"/>
			<marginTop value="1px"/>
		</style>
		<bind name="var" value="{playOutStart: false}"/>
		<bind name="catch" value="'evPlayOut'; {playOutStart: true}"/>
		<bind name="class" value="airplaneColorStatus"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<styleClass value="$ColorStatePlaneDamage"/>
			<bind name="style" value="'alpha'; 0.0"/>
			<bind name="catch" value="'evPlayBlink'; {bufferColorStatus: airplaneColorStatus}"/>
			<bind name="appear" value="'evPlayBlink'; 0.25; 0; {alpha: 0}; {alpha: 1}"/>
			<bind name="appear" value="'evPlayBlink'; 0.25; 0.3; {alpha: 1}; {alpha: 0}"/>
			<bind name="appear" value="'evPlayOut_blink'; 0.25; 0.0; {alpha: 0}; {alpha: 1}"/>
			<bind name="appear" value="'evPlayOut_blink'; 0.25; 0.3; {alpha: 1}; {alpha: 0}"/>
			<bind name="appear" value="'evPlayOut_blink'; 0.25; 0.6; {alpha: 0}; {alpha: 1}"/>
			<bind name="appear" value="'evPlayOut_blink'; 0.25; 0.9; {alpha: 1}; {alpha: 0}"/>
			<bind name="appear" value="'evPlayOut_blink'; 0.25; 1.2; {alpha: 0}; {alpha: 1}"/>
			<bind name="appear" value="'evPlayOut_blink'; 0.25; 1.5; {alpha: 1}; {alpha: 0}"/>
		</block>
	</block>
	<css name="$TextColorHUDPositivePC">
		<textColor value="0xFF4CE8AA"/>
	</css>
	<css name="$TextColorHUDWarningPC">
		<textColor value="0xFFFF9933"/>
	</css>
	<css name="$TextColorHUDCriticalPC">
		<textColor value="0xFFFE4D2A"/>
	</css>
	<css name="$TextColorHUDDeadPC">
		<textColor value="0xFF111111"/>
	</css>
	<block className="AircraftCarrierWeaponsPanel">
		<bind name="firstEntityDH" value="'ownCarrierEntity'; CC.aircarrier;"/>
		<bind name="watchDH" value="'activeSquadron'; ['ownCarrierEntity.aircarrier.evStateChanged']; ownCarrierEntity ? ownCarrierEntity.aircarrier.activeSquadron : -1"/>
		<bind name="collectionDH" value="CC.ownSquadron; 'ownSquadrons'"/>
		<bind name="collectionDesign" value="DES_ownSquadrons; 'selectedOwnSquadron'; {'filter': $entity.selection.value == true}; ['selection.evChanged']"/>
		<style>
			<top value="-74px"/>
		</style>
		<block>
			<style>
				<bottom value="40px"/>
				<marginLeft value="-50%"/>
				<position value="absolute"/>
			</style>
			<bind name="visible" value="(activeSquadron == -1)"/>
			<bind name="instance" value="'AircraftCarrierPanelInstruction'; {_selectedSquadronEntityId: selectedOwnSquadron[0].id}"/>
		</block>
		<bind name="instance" value="'CarrierControlPanel'; {_activeSquadron: activeSquadron}"/>
		<bind name="instance" value="'SquadronControlPanel'; {_activeSquadron: activeSquadron}"/>
	</block>
	<block className="ATBAOffIndicator">
		<bind name="primaryEntityDH" value="'controlEntity'; CC.simpleControl; 1"/>
		<bind name="watchDH" value="'atbaSwitchedOn'; ['controlEntity.simpleControl.evChanged']; controlEntity.simpleControl.enabled"/>
		<style>
			<marginLeft value="-29px"/>
			<marginTop value="-3px"/>
			<position value="absolute"/>
		</style>
		<block className="atbaOffIndicator" type="native">
			<bind name="isShown" value="atbaSwitchedOn == false"/>
		</block>
	</block>
	<block className="PlanePullItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="entityDH" value="'squadronEntity'; $dataRef.ref.id"/>
		<bind name="watchDH" value="'ammoType';			[]; squadronEntity.plane.ammoType"/>
		<bind name="watchDH" value="'curPlanesInHangar';	['squadronEntity.hangar.evChanged'];		squadronEntity.hangar.planeCount"/>
		<bind name="style" value="'marginLeft'; $index == 0 ? '16px' : '14px'"/>
		<style>
			<width value="32px"/>
			<top value="26px"/>
		</style>
		<bind name="var" value="{ planeIconNames: [	'planes_hangar_rocket_HE',
									'planes_hangar_bomb_HE',
									'planes_hangar_bomb_AP',
									'planes_hangar_torpedo',
									'planes_hangar_torpedo_deepwater'] }"/>
		<bind name="watch" value="'planeIconPath'; 'url:../aircraft/hangar_icons/' + planeIconNames[ammoType] + '.png'"/>
		<block>
			<style>
				<position value="absolute"/>
				<left value="-129"/>
				<bottom value="24px"/>
			</style>
			<bind name="instance" value="'PlanePullItemHint'; rollOver ? {_squadronEntityId: $dataRef.ref.id, _planeIconPath: planeIconPath} : null"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<top value="-7px"/>
			</style>
			<bind name="instance" value="'PlaneReloadProgress'; {squadronEntityId: $dataRef.ref.id, _width: 32}"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<width value="30px"/>
				<height value="30px"/>
				<left value="1px"/>
			</style>
			<bind name="style" value="'alpha'; (curPlanesInHangar &gt; 0 ? 1 : 0.5)"/>
			<bind name="style" value="'backgroundImage'; planeIconPath"/>
		</block>
	</block>
	<block className="PlanePullItemHint">
		<bind name="entityDH" value="'squadronEntity'; _squadronEntityId"/>
		<bind name="watchDH" value="'planeCount';				[]; squadronEntity.hangar.planeCount"/>
		<bind name="watchDH" value="'maxPlaneCount';				[]; squadronEntity.hangar.maxPlaneCount"/>
		<bind name="watchDH" value="'planesInAirCount';			[]; squadronEntity.hangar.planesInAirCount"/>
		<bind name="watchDH" value="'timeToRestore';				[]; squadronEntity.hangar.timeToRestore"/>
		<bind name="watchDH" value="'ammoType';					[]; squadronEntity.plane.ammoType"/>
		<bind name="watch" value="'squadronType'; 	ammoType == 0				?  tr('IDS_DOCK_AMMO_TITLE_FIGHTER'):
									ammoType == 1 				?  tr('IDS_DOCK_AMMO_TITLE_DIVE'):
									ammoType == 2			?  tr('IDS_DOCK_AMMO_TITLE_DIVE_AP'):
									ammoType == 3				?  tr('IDS_DOCK_AMMO_TITLE_BOMBER'):
									ammoType == 4	?  tr('IDS_DOCK_AMMO_TITLE_BOMBER_DEEPWATER')
																					:  ''"/>
		<bind name="watch" value="'attributesNeutral'; [	{attributeIDS: 'IDS_HANGAR_SQUADRON_PLANES_CURRENT',		measuredValue: planeCount,			measure: ''},
										{attributeIDS: 'IDS_HANGAR_SQUADRON_PLANES_MAX',			measuredValue: maxPlaneCount,		measure: ''},
										{attributeIDS: 'IDS_HANGAR_SQUADRON_PLANES_IN_THE_AIR',		measuredValue: planesInAirCount,	measure: ''},
										{attributeIDS: 'IDS_HANGAR_SQUADRON_PLANES_TIME_RESTORE',	measuredValue: timeToRestore,		measure: 'IDS_SECOND'}]"/>
		<bind name="appear" value="'addedToStage'; 0.1; 0; {alpha: 0}; {alpha: 1}"/>
		<style>
			<width value="290px"/>
			<hitTest value="false"/>
		</style>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<alpha value="1.2"/>
			</style>
			<bind name="instance" value="'TooltipBackground'; {_isInBattle: true}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="14px"/>
				<marginLeft value="2px"/>
				<marginRight value="2px"/>
				<marginLeft value="2px"/>
				<marginBottom value="2px"/>
			</style>
			<block>
				<style>
					<marginLeft value="12px"/>
					<marginRight value="12px"/>
					<width value="100%"/>
					<marginBottom value="8px"/>
				</style>
				<block>
					<style>
						<width value="30px"/>
						<height value="30px"/>
					</style>
					<bind name="style" value="'backgroundImage'; _planeIconPath"/>
				</block>
				<block type="text">
					<style>
						<marginLeft value="12px"/>
						<width value="100%"/>
						<alpha value="0.9"/>
						<leading value="-3"/>
					</style>
					<styleClass value="$TextDefaultBold17NM"/>
					<bind name="text" value="squadronType"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<alpha value="1"/>
				</style>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="1.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<alpha value="1"/>
						<marginLeft value="12px"/>
						<marginRight value="12px"/>
						<marginTop value="18px"/>
						<marginBottom value="-4px"/>
					</style>
					<bind name="repeat" value="attributesNeutral; 'ParamsModifierItem'; {_shrinkHeight: true}"/>
				</block>
			</block>
		</block>
	</block>
	<block className="CarrierControlPanel">
		<style>
			<flow value="horizontal"/>
			<marginLeft value="-50%"/>
			<position value="absolute"/>
		</style>
		<bind name="fade" value="_activeSquadron == -1; _activeSquadron == -1 ? 0.2 : 0;	{alpha: 0, top: 5};
																										{alpha: 1, top: 0};
																										{alpha: 0, top: 5};
				_activeSquadron == -1 ? 0.15 : 0 "/>
		<bind name="instance" value="'ATBAOffIndicator'; {}"/>
		<block>
			<bind name="collectionRepeatDH" value="CC.ownSquadron; 'CarrierControlItem'; ''; {}"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<marginLeft value="16px"/>
			</style>
			<bind name="instance" value="'CarrierControlConsumables'; {}"/>
		</block>
	</block>
	<block className="SquadronControlPanel">
		<style>
			<flow value="horizontal"/>
			<marginLeft value="-50%"/>
			<position value="absolute"/>
		</style>
		<bind name="fade" value="_activeSquadron != -1; _activeSquadron != -1 ? 0.2 : 0; {alpha: 0, top: 5};
																										{alpha: 1, top: 0};
																										{alpha: 0, top: 5};
				_activeSquadron != -1 ? 0.15 : 0"/>
		<bind name="firstEntityDH" value="'selfAvatarEntity'; CC.playerAvatar"/>
		<bind name="watchDH" value="'isAlive'; ['selfAvatarEntity.health.evKilled']; selfAvatarEntity.health.isAlive"/>
		<block>
			<bind name="instance" value="'SquadronControlWeapon';		{_activeSquadron: _activeSquadron}"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<marginLeft value="16px"/>
			</style>
			<bind name="instance" value="'SquadronControlConsumables';	{_activeSquadron: _activeSquadron}"/>
			<bind name="instance" value="'SquadronControlItemReturn';	{_activeSquadron: _activeSquadron}"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<left value="100%"/>
				<marginLeft value="1280:10,1920:18aw"/>
				<position value="absolute"/>
			</style>
			<bind name="visible" value="isAlive"/>
			<bind name="collectionRepeatDH" value="CC.ownSquadron; 'PlanePullItem'; ''; {}"/>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="SquadronControlConsumables">
		<style>
			<flow value="horizontal"/>
		</style>
		<bind name="primaryEntityDH" value="'currentSquadronEntity'; CC.ownSquadron; _activeSquadron"/>
		<bind name="collectionRepeatDH" value="CC.battleConsumable; 'ConsumableControlItem'; 'bySquadron.' + currentSquadronEntity.squadron.id; {}"/>
	</block>
	<block className="CarrierControlConsumables">
		<style>
			<flow value="horizontal"/>
		</style>
		<bind name="collectionRepeatDH" value="CC.battleConsumable; 'ConsumableControlItem'; 'shipConsumables'; {_isAircarrier: true}"/>
	</block>
	<block className="ConsumableControlItem">
		<bind name="dataRefDH" value="'consumableEntity'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'consumableName';	[];															consumableEntity.battleConsumable.ident"/>
		<bind name="watchDH" value="'consumableCmd';		[];															consumableEntity.battleConsumable.cmd"/>
		<bind name="watchDH" value="'consumableIndex';	['consumableEntity.battleConsumable.evStateChanged'];		consumableEntity.battleConsumable.index"/>
		<bind name="watchDH" value="'consumableNum';		['consumableEntity.battleConsumable.evConsumeNumChanged'];	consumableEntity.battleConsumable.consumeNum"/>
		<bind name="watchDH" value="'consumableState';	['consumableEntity.battleConsumable.evStateChanged'];		consumableEntity.battleConsumable.state"/>
		<bind name="watchDH" value="'ownerSquadronId';	['consumableEntity.battleConsumable.evStateChanged'];		consumableEntity.battleConsumable.ownerSquadronId"/>
		<bind name="watch" value="'atWork';		consumableState == 1"/>
		<bind name="watch" value="'isReloading';	consumableState == 2"/>
		<bind name="watch" value="'isEmpty';		consumableState == 3"/>
		<bind name="watch" value="'consumePostfix'; consumableNum == 0 &amp;&amp; !atWork ? '_empty' : ''"/>
		<bind name="watch" value="'itemImageUrl'; '../consumables/' + consumableName + consumePostfix + '.png'"/>
		<bind name="action" value="'click'; _isAircarrier ? null : 'useConsumable'; {consumableIndex: consumableIndex, squadronId: ownerSquadronId}"/>
		<bind name="battleHint" value="['CONSUME', consumableEntity.id]"/>
		<bind name="primaryEntityDH" value="'cmdEntity'; CC.commandMappingCommandName; consumableCmd"/>
		<bind name="watchDH" value="'commandId'; ['cmdEntity.commandMappingCommand.evChanged']; _isAircarrier ? null : cmdEntity.commandMappingCommand.id"/>
		<block>
			<bind name="instance" value="'SlotItem'; {	_itemImageUrl: itemImageUrl, _charges: consumableNum,
										_cmd: commandId}"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<width value="60px"/>
				<height value="60px"/>
				<left value="6px"/>
			</style>
			<bind name="visible" value="isReloading || atWork"/>
			<bind name="instance" value="'SlotReloadFXTimestamp'; {	_reloadEntityId: consumableEntity.id,
													_atWork: atWork}"/>
		</block>
		<block className="HotkeyAnimation" type="native">
			<bind name="visible" value="!!commandId"/>
			<style>
				<position value="absolute"/>
				<bottom value="-23px"/>
				<left value="36px"/>
				<height value="21px"/>
			</style>
			<bind name="commandId" value="commandId"/>
			<bind name="active" value="!(atWork || isReloading || consumableNum == 0)"/>
		</block>
		<block>
			<bind name="visible" value="!commandId"/>
			<style>
				<position value="absolute"/>
				<width value="46px"/>
				<height value="16px"/>
				<alpha value="0.8"/>
				<left value="13px"/>
				<bottom value="-10px"/>
				<backgroundImage value="url:../aircraft/key_auto_label.png"/>
			</style>
		</block>
	</block>
	<block className="SquadronControlWeapon">
		<bind name="primaryEntityDH" value="'currentSquadronEntity'; CC.ownSquadron; _activeSquadron"/>
		<bind name="watchDH" value="'ammoType';			[]; currentSquadronEntity.plane.ammoType"/>
		<bind name="watchDH" value="'numPlanes';			['currentSquadronEntity.health.evValueChanged']; currentSquadronEntity.health.value"/>
		<bind name="watchDH" value="'attackState';		['currentSquadronEntity.ownSquadron.evAttackingStateChanged'];	currentSquadronEntity.ownSquadron.attackState"/>
		<bind name="watchDH" value="'flightState';		['currentSquadronEntity.ownSquadron.evStateChanged']; currentSquadronEntity.ownSquadron.state"/>
		<bind name="primaryEntityDH" value="'cmdEntity'; CC.commandMappingCommandName; 'CMD_WEAPON_0'"/>
		<bind name="watchDH" value="'commandId'; ['cmdEntity.commandMappingCommand.evChanged']; cmdEntity.commandMappingCommand.id"/>
		<bind name="watch" value="'weaponImageUrl';  '../aircraft/planetype_weapon_' + ammoType + '.png'"/>
		<bind name="watch" value="'atWork';		attackState == 2"/>
		<bind name="watch" value="'isLocked';	flightState == 4"/>
		<bind name="firstEntityDH" value="'timerEntity'; CC.timer"/>
		<bind name="watchDH" value="'timeRemain'; ['timerEntity.timer.evFrequent']; currentSquadronEntity.countDown	? currentSquadronEntity.countDown.endTime - timerEntity.timer.currentTime
																									: 0"/>
		<bind name="watch" value="'showReload'; (timeRemain &gt; 0)"/>
		<block>
			<bind name="instance" value="'SlotItem'; {	_isSelected: true,
										_itemImageUrl: weaponImageUrl,
										_isLocked: isLocked,
										_cmd: commandId,
										_hideCharges: true}"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<width value="60px"/>
				<height value="60px"/>
				<left value="6px"/>
			</style>
			<bind name="visible" value="showReload == true"/>
			<bind name="instance" value="'SlotReloadFX'; {	_reloadEntityId: currentSquadronEntity.id,
											_atWork: atWork}"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<bottom value="-23px"/>
				<left value="36px"/>
			</style>
			<block className="HotkeyAnimation" type="native">
				<style>
					<height value="21px"/>
				</style>
				<bind name="commandId" value="commandId"/>
				<bind name="active" value="!(isLocked || atWork || showReload || numPlanes == 0)"/>
			</block>
		</block>
		<bind name="battleHint" value="['SQUADRON_WEAPON', _activeSquadron]"/>
	</block>
	<block className="CarrierControlItem">
		<bind name="entityDH" value="'squadronEntity'; $dataRef.ref.id"/>
		<bind name="watchDH" value="'isSelected';		['squadronEntity.selection.evChanged'];		squadronEntity.selection.value"/>
		<bind name="watchDH" value="'ammoType';			[];											squadronEntity.plane.ammoType"/>
		<bind name="watchDH" value="'squadronID';		[];											squadronEntity.ownSquadron.id"/>
		<bind name="watchDH" value="'curPlanesInHangar';	['squadronEntity.hangar.evChanged'];		squadronEntity.hangar.planeCount"/>
		<bind name="watchDH" value="'maxSquadPlanes';	[];											squadronEntity.health.max"/>
		<bind name="watchDH" value="'curSquadPlanes';	['squadronEntity.health.evValueChanged']; squadronEntity.health.value"/>
		<bind name="action" value="'click'; 'selectSquadron'; {id: squadronID}"/>
		<bind name="battleHint" value="['SQUADRON', $index]"/>
		<bind name="watch" value="'consumePostfix'; curSquadPlanes == 0 ? '_empty' : ''"/>
		<bind name="watch" value="'itemImageUrl'; '../aircraft/planetype_' + ammoType + consumePostfix + '.png'"/>
		<bind name="primaryEntityDH" value="'cmdEntity'; CC.commandMappingCommandName; 'CMD_SQUADRON_' + $index"/>
		<bind name="watchDH" value="'commandId'; ['cmdEntity.commandMappingCommand.evChanged']; cmdEntity.commandMappingCommand.id"/>
		<block>
			<style>
				<position value="absolute"/>
				<top value="-6px"/>
				<left value="5px"/>
			</style>
			<bind name="instance" value="'PlaneReloadProgress'; {squadronEntityId: $dataRef.ref.id, _width: 62}"/>
		</block>
		<block>
			<bind name="instance" value="'SlotItem'; {	_itemImageUrl: itemImageUrl,
										_isSelected: isSelected,
										_charges: curSquadPlanes,
										_cmd: commandId,
										_hideCharges: true}"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<bottom value="-23px"/>
				<left value="36px"/>
			</style>
			<block className="HotkeyAnimation" type="native">
				<style>
					<height value="21px"/>
				</style>
				<bind name="commandId" value="commandId"/>
				<bind name="active" value="!(isLocked || atWork || showReload || curSquadPlanes == 0)"/>
			</block>
		</block>
		<block type="text">
			<style>
				<position value="absolute"/>
				<textAlign value="right"/>
				<top value="5px"/>
				<right value="6px"/>
				<hitTest value="false"/>
			</style>
			<styleClass value="$TextDefaultBoldNM"/>
			<bind name="style" value="'alpha';	((curPlanesInHangar &gt;= maxSquadPlanes) || (curPlanesInHangar == 0)) ? 1 : 0.65"/>
			<bind name="class" value="curPlanesInHangar != 0 ? '$FontColorWhite' : '$TextColorHUDCriticalPC'"/>
			<bind name="text" value="curSquadPlanes"/>
		</block>
	</block>
	<block className="PlaneReloadProgress">
		<bind name="firstEntityDH" value="'cameraEntity'; CC.camera"/>
		<bind name="watchDH" value="'altVision'; ['cameraEntity.camera.evAltVisionChanged']; cameraEntity.camera.altVision"/>
		<bind name="entityDH" value="'squadronEntity'; squadronEntityId"/>
		<bind name="watchDH" value="'curPlanesInHangar';     ['squadronEntity.hangar.evChanged'];		squadronEntity.hangar.planeCount"/>
		<bind name="watchDH" value="'maxPlanesInHangar';     ['squadronEntity.hangar.evChanged'];		squadronEntity.hangar.maxPlaneCount"/>
		<bind name="watchDH" value="'restoreEndTimestamp';   ['squadronEntity.hangar.evChanged'];        squadronEntity.hangar.restoreTime"/>
		<bind name="watchDH" value="'restoreDuration';	[]; squadronEntity.hangar.timeToRestore"/>
		<bind name="watchDH" value="'maxSquadPlanes';	['squadronEntity.health.evValueChanged'];	squadronEntity.health.max"/>
		<bind name="watchDH" value="'curSquadPlanes';	['squadronEntity.health.evValueChanged'];	squadronEntity.health.value"/>
		<block>
			<bind name="visible" value="!(altVision &amp;&amp; restoreAnimation)"/>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<style>
				<top value="-11px"/>
			</style>
			<block type="text">
				<style>
					<alpha value="0.8"/>
					<marginRight value="3px"/>
				</style>
				<styleClass value="$TextDefault13NM"/>
				<bind name="class" value="curPlanesInHangar &gt;= maxSquadPlanes	? '$TextDefaultBold13NM'
																: '$TextDefault13NM'"/>
				<bind name="text" value="curPlanesInHangar"/>
			</block>
			<block type="text">
				<style>
					<marginTop value="1px"/>
					<alpha value="0.8"/>
				</style>
				<styleClass value="$TextDefault12NM"/>
				<bind name="text" value="'/' + maxPlanesInHangar"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="(altVision &amp;&amp; restoreAnimation)"/>
			<styleClass value="$MiddleAlignedAbsolutely"/>
			<style>
				<top value="-11px"/>
			</style>
			<block type="text">
				<style>
					<alpha value="0.8"/>
					<marginRight value="1px"/>
				</style>
				<styleClass value="$TextDefaultBold13NM"/>
				<bind name="textCountdown" value="true; restoreEndTimestamp; 'mm:ss'"/>
			</block>
		</block>
		<block className="hud_bar_bg_sliced" type="native">
			<style>
				<height value="4px"/>
			</style>
			<bind name="style" value="'width'; _width + 'px'"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<height value="2px"/>
				<marginLeft value="1px"/>
				<marginTop value="1px"/>
			</style>
			<bind name="style" value="'backgroundColor'; _color ? _color : '0xFF4CE8AA'"/>
			<bind name="style" value="'width'; (_width - 2) + 'px'"/>
			<bind name="timestampTween" value="true; restoreDuration; restoreEndTimestamp; {scaleX:0}; {scaleX:1}; 'onRestoreStart'; 'onRestoreEnd'"/>
		</block>
		<bind name="catch" value="'onRestoreStart'; {restoreAnimation: true}"/>
		<bind name="catch" value="'onRestoreEnd'; {restoreAnimation: false}"/>
	</block>
	<block className="SquadronControlItemReturn">
		<bind name="primaryEntityDH" value="'currentSquadronEntity'; CC.ownSquadron; _activeSquadron"/>
		<bind name="watchDH" value="'attackState'; ['currentSquadronEntity.ownSquadron.evAttackingStateChanged']; currentSquadronEntity.ownSquadron.attackState"/>
		<bind name="watchDH" value="'flightState'; ['currentSquadronEntity.ownSquadron.evStateChanged']; currentSquadronEntity.ownSquadron.state"/>
		<bind name="primaryEntityDH" value="'cmdEntity'; CC.commandMappingCommandName; 'CMD_LAND'"/>
		<bind name="watchDH" value="'commandId'; ['cmdEntity.commandMappingCommand.evChanged']; cmdEntity.commandMappingCommand.id"/>
		<bind name="firstEntityDH" value="'selfAvatarEntity'; CC.playerAvatar"/>
		<bind name="watchDH" value="'isDead'; ['selfAvatarEntity.health.evKilled']; !selfAvatarEntity.health.isAlive"/>
		<bind name="battleHint" value="['SIMPLE', 'IDS_BATTLE_HINT_SQUADRON_CONTROL_RETURN']"/>
		<bind name="watch" value="'itemImageUrl'; '../aircraft/plane_return.png'"/>
		<bind name="watch" value="'isLocked'; (attackState != 0) || isDead || (flightState == 4)"/>
		<bind name="action" value="'click'; isLocked ? null : 'landPlane'"/>
		<block>
			<bind name="instance" value="'SlotItem'; {_itemImageUrl: itemImageUrl, _isLocked: isLocked, _cmd: commandId}"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<bottom value="-23px"/>
				<left value="36px"/>
			</style>
			<block className="HotkeyAnimation" type="native">
				<style>
					<height value="21px"/>
				</style>
				<bind name="commandId" value="commandId"/>
				<bind name="active" value="!(isLocked)"/>
			</block>
		</block>
	</block>
	<block className="SlotItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="watch" value="'isSelectable'; !!(_cmd)"/>
		<style>
			<width value="60px"/>
			<height value="60px"/>
			<marginRight value="6px"/>
			<marginLeft value="6px"/>
		</style>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:' + _itemImageUrl"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="visible" value="_isSelected == true"/>
			<bind name="style" value="'backgroundImage'; 'url:../aircraft/isSelected.png'"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="transition" value="rollOver &amp;&amp; isSelectable; 0.15; {alpha: 0}; {alpha: 1}"/>
			<bind name="watch" value="'itemImageUrl'; _isLocked	? 'url:../aircraft/isDisabled.png'
												: 'url:../aircraft/isHovered.png'"/>
			<bind name="style" value="'backgroundImage'; itemImageUrl"/>
		</block>
		<block>
			<bind name="fade" value="_isLocked; 0.1; {alpha: 0}; {alpha:1}"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundColor value="0x80000000"/>
			</style>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="style" value="'backgroundImage'; 'url:../aircraft/icon_lock.png'"/>
			</block>
		</block>
		<block type="text">
			<bind name="visible" value="((_charges &gt; 0) &amp;&amp; (_hideCharges != true))"/>
			<style>
				<position value="absolute"/>
				<textAlign value="right"/>
				<top value="5px"/>
				<right value="0px"/>
			</style>
			<styleClass value="$TextDefaultBoldNM"/>
			<bind name="text" value="_charges"/>
		</block>
	</block>
	<block className="AircraftCarrierPanelInstruction">
		<bind name="entityDH" value="'selectedSquadronEntity'; _selectedSquadronEntityId"/>
		<bind name="watchDH" value="'numPlanes';		['selectedSquadronEntity.health.evValueChanged']; selectedSquadronEntity.health.value"/>
		<bind name="watchDH" value="'flightState'; ['selectedSquadronEntity.ownSquadron.evStateChanged']; selectedSquadronEntity.ownSquadron.state"/>
		<bind name="watchDH" value="'ammoType';		[]; selectedSquadronEntity.plane.ammoType"/>
		<bind name="watchDH" value="'commandId';		[]; selectedSquadronEntity.ownSquadron.commandId"/>
		<bind name="primaryEntityDH" value="'cmdEntity'; CC.commandMappingCommand; commandId"/>
		<bind name="watchDH" value="'commandName'; ['cmdEntity.commandMappingCommandName.evChanged']; cmdEntity.commandMappingCommandName.commandName"/>
		<bind name="watch" value="'notEnough'; numPlanes == 0 ? '_NOT_ENOUGH' : ''"/>
		<bind name="watch" value="'logMessage'; 	ammoType == 0				?  tr('IDS_AIRCRAFT_CARRIER_LOGMESSAGE_FIGHTER' + notEnough):
								ammoType == 1 				?  tr('IDS_AIRCRAFT_CARRIER_LOGMESSAGE_BOMBER' + notEnough):
								ammoType == 2			?  tr('IDS_AIRCRAFT_CARRIER_LOGMESSAGE_BOMBER_AP' + notEnough):
								ammoType == 3				?  tr('IDS_AIRCRAFT_CARRIER_LOGMESSAGE_TORPEDO' + notEnough):
								ammoType == 4	?  tr('IDS_AIRCRAFT_CARRIER_LOGMESSAGE_TORPEDO_DEEPWATER' + notEnough)
																				:  ''"/>
		<bind name="fade" value="flightState == 2; 0.15; {alpha: 0, top: 10}; {alpha: 1, top: 0}; {alpha: 0, top: 10}; 2"/>
		<bind name="watch" value="'logMessageSubst'; subst(logMessage, [], {_cmd: '[' + commandName + ']'})"/>
		<block type="text">
			<style>
				<maxWidth value="590"/>
				<textAlign value="center"/>
				<leading value="-6"/>
			</style>
			<styleClass value="$TextDefaultBold21NM"/>
			<bind name="substitute" value="'KEYS'; 8; null; logMessageSubst; '_bg'"/>
		</block>
	</block>
	<block className="SlotReloadFXTimestamp">
		<bind name="entityDH" value="'reloadEntity'; _reloadEntityId"/>
		<style>
			<align value="center|middle"/>
			<width value="60px"/>
			<height value="60px"/>
		</style>
		<bind name="watchDH" value="'duration'; ['reloadEntity.countDown.evChanged']; reloadEntity.countDown.duration"/>
		<bind name="watchDH" value="'endTime'; ['reloadEntity.countDown.evChanged']; reloadEntity.countDown.endTime"/>
		<bind name="catch" value="'evStartReload'; {reloadState: 1}"/>
		<bind name="catch" value="'evCheckStartUsing'; {reloadState: 2}"/>
		<bind name="catch" value="'evReloaded'; {reloadState: 3}"/>
		<bind name="catch" value="'evUsed'; {reloadState: 4}"/>
		<block>
			<style>
				<position value="absolute"/>
				<alpha value="0.5"/>
				<width value="60px"/>
				<height value="60px"/>
				<backgroundColor value="0xFF000000"/>
			</style>
			<bind name="fade" value="reloadEntity.countDown &amp;&amp; reloadState &amp;&amp; (reloadState &lt; 3); 0.1; {alpha: 0}; {alpha:0.5}"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<width value="60px"/>
				<height value="60px"/>
				<top value="100%"/>
				<alpha value="0.25"/>
				<backgroundColor value="0xFFFF9933"/>
			</style>
			<bind name="style" value="'backgroundColor'; _atWork ? '0xFF4CE8AA' : '0xFFFF9933'"/>
			<bind name="timestampTween" value="reloadEntity.countDown &amp;&amp; _atWork &amp;&amp; reloadState!=4; duration; endTime; { scaleY: -1 }; { scaleY: 0 }; 'evCheckStartUsing'; 'evUsed'"/>
			<bind name="timestampTween" value="reloadEntity.countDown &amp;&amp; !(_atWork); duration; endTime; { scaleY: 0}; { scaleY: -1 }; 'evStartReload'; 'evReloaded' "/>
		</block>
		<bind name="changeDispatch" value="reloadState == 2; 'evStartUsing'; {}; 2; true"/>
		<bind name="dispatch" value="'evStartUsing'; (getTimeTo(endTime) + 0.5 &gt;= duration) ? 'evShowEffect' : null"/>
		<block>
			<style>
				<position value="absolute"/>
				<top value="30px"/>
				<left value="30px"/>
				<alpha value="0"/>
			</style>
			<bind name="appear" value="'evShowEffect'; 0.5; 0; {alpha: 1, scaleX: 0.8, scaleY: 0.8}; {alpha: 0, scaleX: 1.5, scaleY: 1.5}; 1"/>
			<block>
				<style>
					<position value="absolute"/>
					<marginLeft value="-30px"/>
					<marginTop value="-30px"/>
					<width value="60px"/>
					<height value="60px"/>
					<backgroundColor value="0xFFF1F1F1"/>
				</style>
			</block>
		</block>
		<block type="text">
			<styleClass value="$TextDefault21NM"/>
			<bind name="class" value="_atWork ? '$TextColorHUDPositivePC' : '$TextColorHUDWarningPC'"/>
			<bind name="fade" value="reloadState &amp;&amp; (reloadState &lt; 3); 0.1; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: 5}; 2"/>
			<bind name="textCountdown" value="reloadEntity.countDown; endTime"/>
		</block>
		<block>
			<bind name="fade" value="_atWork; 0.1; {alpha: 0}; {alpha:1}"/>
			<style>
				<position value="absolute"/>
				<width value="60px"/>
				<height value="2px"/>
				<bottom value="0px"/>
				<backgroundColor value="0xFF4CE8AA"/>
			</style>
		</block>
	</block>
	<block className="SlotReloadFX">
		<bind name="entityDH" value="'reloadEntity'; _reloadEntityId"/>
		<bind name="firstEntityDH" value="'timerEntity'; CC.timer"/>
		<bind name="watchDH" value="'timeRemain'; ['timerEntity.timer.evFrequent'];	reloadEntity.countDown	? reloadEntity.countDown.endTime - timerEntity.timer.currentTime
																							: 0"/>
		<bind name="watchDH" value="'reloadPercent'; []; reloadEntity.countDown	? (_atWork	? timeRemain / reloadEntity.countDown.duration
																			: 1 - timeRemain / reloadEntity.countDown.duration)
																: (_atWork ? 1 : 0)"/>
		<bind name="watch" value="'showReload'; (timeRemain &gt; 0)"/>
		<style>
			<align value="center|middle"/>
			<width value="60px"/>
			<height value="60px"/>
		</style>
		<block>
			<style>
				<position value="absolute"/>
				<alpha value="0.5"/>
				<width value="60px"/>
				<height value="60px"/>
				<backgroundColor value="0xFF000000"/>
			</style>
			<bind name="fade" value="showReload; 0.1; {alpha: 0}; {alpha:0.5}"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<width value="60px"/>
				<height value="60px"/>
				<top value="100%"/>
				<alpha value="0.25"/>
				<backgroundColor value="0xFFFF9933"/>
			</style>
			<bind name="style" value="'backgroundColor'; _atWork ? '0xFF4CE8AA' : '0xFFFF9933'"/>
			<bind name="scaleY" value="-(reloadPercent)"/>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<top value="30px"/>
				<left value="30px"/>
				<alpha value="0"/>
			</style>
			<bind name="changeDispatch" value="reloadPercent == 1; 'evReloaded'; {}; 2; true"/>
			<bind name="appear" value="'evReloaded'; 0.5; 0; {alpha: 1, scaleX: 0.8, scaleY: 0.8}; {alpha: 0, scaleX: 1.5, scaleY: 1.5}; 1"/>
			<block>
				<style>
					<position value="absolute"/>
					<marginLeft value="-30px"/>
					<marginTop value="-30px"/>
					<width value="60px"/>
					<height value="60px"/>
					<backgroundColor value="0xFFF1F1F1"/>
				</style>
			</block>
		</block>
		<block type="text">
			<styleClass value="$TextDefault21NM"/>
			<bind name="class" value="_atWork ? '$TextColorHUDPositivePC' : '$TextColorHUDWarningPC'"/>
			<bind name="fade" value="showReload; 0.1; {alpha: 0, top: 5}; {alpha: 1, top: 0}; {alpha: 0, top: 5}; 2"/>
			<bind name="text" value="countdownFormat(timeRemain)"/>
		</block>
		<block>
			<bind name="fade" value="_atWork; 0.1; {alpha: 0}; {alpha:1}"/>
			<style>
				<position value="absolute"/>
				<width value="60px"/>
				<height value="2px"/>
				<bottom value="0px"/>
				<backgroundColor value="0xFF4CE8AA"/>
			</style>
		</block>
	</block>
	<block className="AirCraftStatusLog">
		<bind name="firstEntityDH" value="'selfAvatarEntity'; CC.playerAvatar"/>
		<bind name="firstEntityDH" value="'battleIndicationEntity'; CC.battleIndication"/>
		<bind name="watchDH" value="'shipSpotType';	['battleIndicationEntity.alertIndication.evSpottedChanged'];	battleIndicationEntity.alertIndication.spotType"/>
		<bind name="watchDH" value="'isSpotted';		['battleIndicationEntity.alertIndication.evSpottedChanged'];	battleIndicationEntity.alertIndication.spotFlags"/>
		<bind name="dispatch" value="'isSpotted' + varChanged; 'isSpottedChanged'; {}; 2; 0.05"/>
		<bind name="var" value="{isThisSpottingNotShowed: true}"/>
		<bind name="catch" value="'isSpottedChanged'; {isThisSpottingNotShowed: !isSpotted ? true : isThisSpottingNotShowed}"/>
		<bind name="var" value="{showDuration: 4}"/>
		<bind name="var" value="{messageCooldown: 0.8}"/>
		<bind name="var" value="{isHit:	false}"/>
		<bind name="handleEventDH" value="'selfAvatarEntity.vehicle.evHit'; 'evAircraftHit'"/>
		<bind name="catch" value="'evAircraftHit';	{isHit: true}"/>
		<bind name="dispatchDelayReset" value="'evAircraftHit'; 'evDelayedAircraftHit'; {}; 2; showDuration"/>
		<bind name="catch" value="'evDelayedAircraftHit';	{isHit: false}"/>
		<bind name="dispatch" value="'isSpottedChanged';		'checkNewMessage'; {}; 2"/>
		<bind name="dispatch" value="'isHit' + varChanged;	'checkNewMessage'; {}; 2"/>
		<bind name="dispatch" value="'curMessageShown'; 'checkNewMessage'; {}; 2; messageCooldown"/>
		<bind name="var" value="{isMessageShown: true}"/>
		<bind name="var" value="{newMessage: 'no_new_message'}"/>
		<bind name="var" value="{curMessage: 'no_new_message'}"/>
		<bind name="dispatch" value="'showNewMessage'; 'curMessageShown'; {}; 2; showDuration"/>
		<bind name="catch" value="'curMessageShown'; {isMessageShown: true, newMessage: 'no_new_message'}"/>
		<bind name="catch" value="'checkNewMessage'; {newMessage:	(isHit										? 'IDS_AIRCARRIER_LOG_FEEDBACK_HIT' :
													isSpotted &gt; 0 &amp;&amp; isThisSpottingNotShowed	? 'IDS_AIRCARRIER_LOG_FEEDBACK_SPOTTED'
																								: 'no_new_message')};
									'newMessageChecked'"/>
		<bind name="dispatch" value="'newMessageChecked'; ((newMessage != 'no_new_message' &amp;&amp; isMessageShown) ? 'showNewMessage' : null);	{}; 2; 0.05"/>
		<bind name="catch" value="'showNewMessage'; {curMessage: newMessage, isMessageShown: false,								
									isThisSpottingNotShowed: newMessage == 'IDS_AIRCARRIER_LOG_FEEDBACK_SPOTTED'		? false
																											: isThisSpottingNotShowed}"/>
		<bind name="soundOn" value="'showNewMessage'; 'popped'; 'aircarrier_log_feedback'"/>
		<style>
			<alpha value="0"/>
			<marginLeft value="-50%"/>
			<top value="200px"/>
			<hitTest value="false"/>
		</style>
		<bind name="transition" value="isMessageShown; 0.15; {alpha:1}; {alpha:0}; {alpha:1}; 1; 0"/>
		<block>
			<bind name="appear" value="'showNewMessage'; 0.1; 0.08; {top: 10}; {top: 0}"/>
			<block type="text">
				<styleClass value="$TextDefaultBold21NM"/>
				<bind name="style" value="'fontSize'; '20'"/>
				<bind name="class" value="curMessage == 'IDS_AIRCARRIER_LOG_FEEDBACK_SPOTTED'	? '$IndicatorTextWarning'
 																		: '$IndicatorTextCritical'"/>
				<bind name="text" value="toUpperCase(curMessage)"/>
			</block>
		</block>
	</block>
	<block className="AirplaneDeathWarning">
		<bind name="firstEntityDH" value="'avatar'; CC.playerAvatar"/>
		<bind name="watchDH" value="'willBeDeadAt'; ['avatar.playerAvatar.evWillDieSoon']; avatar.playerAvatar.willBeDeadAt"/>
		<bind name="watchDH" value="'timeToLive'; ['avatar.playerAvatar.evWillDieSoon']; avatar.playerAvatar.timeToLive"/>
		<bind name="countdown" value="willBeDeadAt; 'timeLeft'; 'mm:ss'; ''; ''; 'rawTimeLeft'"/>
		<block type="text">
			<styleClass value="$TextDefaultBold17NM"/>
			<style>
				<textAlign value="center"/>
				<width value="100%"/>
				<marginBottom value="8px"/>
				<leading value="-3"/>
			</style>
			<bind name="text" value="toUpperCase(tr('IDS_AIRPLANE_DEATH_WARNING_BACK_TO_BASE'))"/>
		</block>
		<block type="text">
			<styleClass value="$TextDefaultNM"/>
			<style>
				<textAlign value="center"/>
				<width value="100%"/>
				<marginBottom value="8px"/>
			</style>
			<bind name="text" value="timeLeft"/>
		</block>
		<block>
			<style>
				<width value="180px"/>
			</style>
			<block className="indicator_progress_bar_lightgreen" type="native">
				<style>
					<width value="100%"/>
				</style>
				<bind name="value" value="0"/>
				<bind name="maximum" value="1"/>
			</block>
			<block>
				<bind name="watch" value="'progressBarWidth'; rawTimeLeft / 1000 / timeToLive * 100"/>
				<style>
					<height value="2px"/>
					<marginTop value="1px"/>
					<backgroundColor value="0xFF4CE8AA"/>
					<position value="absolute"/>
				</style>
				<bind name="style" value="'width'; progressBarWidth + '%'"/>
			</block>
		</block>
	</block>
	<block className="PlayerContactItemWithRollover">
		<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
		<bind name="watchDH" value="'windowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.state"/>
		<bind name="watchDH" value="'notReadyWindowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.notReadyWindowState"/>
		<bind name="watchDH" value="'windowInset'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.inset"/>
		<bind name="watchDH" value="'windowInsetLabel'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.insetLabel"/>
		<bind name="firstEntityDH" value="'dockStateEntity'; CC.dockState"/>
		<bind name="watchDH" value="'dockStateName'; ['dockStateEntity.dockState.evUpdate']; dockStateEntity.dockState.stateName"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="entityDH" value="'entityAccount'; _entityAccountId"/>
		<bind name="watchDH" value="'accountOnline'; ['entityAccount.accountStatus.evOnlineChanged']; entityAccount.accountStatus.online"/>
		<bind name="watchDH" value="'accountLevel'; ['entityAccount.accountLevel.evLevelChanged']; entityAccount.accountLevel.level"/>
		<bind name="watchDH" value="'groupIdsOfAccount'; ['entityAccount.elementInGroups.evGroupsChanged']; entityAccount.elementInGroups.groupIds"/>
		<bind name="watchDH" value="'isIgnored';['entityAccount.contact.evIsIgnoredChanged']; !!entityAccount.contact.isIgnored"/>
		<bind name="watchDH" value="'dogTagList';['entityAccount.dogTagView.evComponentsChanged']; entityAccount.dogTagView.components"/>
		<bind name="collectionDH" value="CC.dogTagComponent; 'dogtagview'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'dogtagview'+'ROOT'; 'dogtagview'; {'filter':(dogTagList.indexOf(toLowerCase($entity.dogTagComponent.id)) &gt; -1), 'sort':['dogTagComponent.categoryId']}; []"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInDivision'; 'pureName'; entityAccount.accountName.name; 'playerInDivision'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInvitedToDivision'; 'name'; entityAccount.accountName.name; 'playerInvitedToDivision'"/>
		<bind name="watch" value="'isInDivision'; (playerInDivision.length == 0) ? false : true"/>
		<bind name="watchDH" value="'isSelf'; []; entityAccount.accountSimple.isSelfPlayer"/>
		<bind name="watchDH" value="'isSuspended'; ['entityAccount.accountSimple.evSuspendedChanged']; entityAccount.accountSimple.suspended"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionData'"/>
		<bind name="levelToFeature" value="accountLevel; 19; 'clubBattleFeatureUnLocked'"/>
		<bind name="watch" value="'isInYourParty'; ((divisionEntranceData.divisionType == 'party') &amp;&amp; (playerInDivision.length &gt; 0)) ? true : false"/>
		<bind name="watch" value="'isInvitedToYourParty'; ((divisionEntranceData.divisionType == 'party') &amp;&amp; (playerInvitedToDivision.length &gt; 0)) ? true : false"/>
		<bind name="contains" value="clubMembers; $item == _entityAccountId; 'isClubMember'; false; [_entityAccountId]"/>
		<bind name="collectionDH" value="CC.club; 'playersClubs'"/>
		<bind name="collectionDH" value="CC.clubsCommon; 'clubsCommonCollection'"/>
		<bind name="entityDH" value="'clubsCommonEntity'; clubsCommonCollection[0].id"/>
		<bind name="watchDH" value="'clubsVoted'; ['clubsCommonEntity.clubsCommon.evClubsVotedChanged']; clubsCommonEntity.clubsCommon.clubsVoted"/>
		<bind name="watch" value="'isVoteInCurClub';	(clubsVoted[0] == entityClub.club.id) ||
									(clubsVoted[1] == entityClub.club.id) ||
									(clubsVoted[2] == entityClub.club.id) ? true : false"/>
		<bind name="watch" value="'actionDenyReason';	(_playerContext.type == 'inviteToDivision') ?	!(accountOnline)				? 'IDS_INVITE_TO_DIVISION_ACTION_DENY_REASON_OFFLINE' :
																						isInvitedToDivision 			? 'IDS_INVITE_TO_DIVISION_ACTION_DENY_REASON_ALREADY_INVITED'
																														: 'no_reason' :
										(_playerContext.type == 'inviteToParty')	?	!(clubBattleFeatureUnLocked)	? 'IDS_INVITE_TO_PARTY_ACTION_DENY_REASON_LOW_LEVEL' :
																						!(accountOnline)				? 'IDS_INVITE_TO_PARTY_ACTION_DENY_REASON_OFFLINE' :
																						isInvitedToYourParty			? 'IDS_INVITE_TO_PARTY_ACTION_DENY_REASON_ALREADY_INVITED' :
																						isInYourParty					? 'IDS_INVITE_TO_PARTY_ACTION_DENY_REASON_ALREADY_IN_PARTY'
																														: 'no_reason'
																					: 'no_reason'"/>
		<bind name="collectionDH" value="CC.club; 'clubs'"/>
		<bind name="watch" value="'isSelfPlayerWardog';  (divisionData.creatorInfo.clubId != null )	? (	(clubs[0].club.id == divisionData.creatorInfo.clubId)	? false :
																						(clubs[1].club.id == divisionData.creatorInfo.clubId)	? false :
																						(clubs[2].club.id == divisionData.creatorInfo.clubId)	? false
																																				: true)
																					: false"/>
		<bind name="watch" value="'isWardog'; (isInYourParty &amp;&amp; !(isClubMember) &amp;&amp; !(isSelfPlayerWardog)) || (isSelf &amp;&amp; isSelfPlayerWardog)"/>
		<style>
			<width value="100%"/>
			<height value="30px"/>
		</style>
		<bind name="style" value="'alpha'; accountOnline ? 1 : 0.5"/>
		<block>
			<bind name="visible" value="isSelf"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginTop value="-1px"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$Fullsize"/>
				<bind name="gotoAndStop!" value="'down'"/>
			</block>
		</block>
		<block className="dock_submenu_item_bg" type="native">
			<bind name="transition" value="(mouseDown &amp;&amp; !isSelf); 0.03; {alpha: 1}; {alpha: 0.7}"/>
			<bind name="transition" value="(rollOver || contactContextMenuVisible); 0.15; {alpha: 0}; {alpha: 1.0}"/>
			<bind name="style" value="'hitTest'; !(isSuspended) || ((isSuspended) &amp;&amp; (groupIdsOfAccount != null))"/>
			<styleClass value="$PxHorizontalCorrection"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="menu" value="'ContactContextMenu';	!(isSelf)	? {	_entityAccountId: _entityAccountId, _currentGroupId: _currentGroupId, _actionDenyReason: actionDenyReason,
															_playerContext: _playerContext, _inviteType: InviteType.COMMON, _isWardog: isWardog }
														: null; null; 'contactContextMenuVisible'"/>
			<bind name="tooltip" value="'ContactInfoTooltip'; !(isSuspended) ? {_entityAccountId: _entityAccountId, _playerContext: _playerContext, _actionDenyReason: actionDenyReason, _isWardog: isWardog, _dogTagView: dogtagview} : null"/>
			<bind name="clickSplit"/>
			<bind name="watch" value="'isActionEnabled'; (	!(isSelf) &amp;&amp; 
											(actionDenyReason == 'no_reason') &amp;&amp; 
											!(isSuspended)
										)"/>
			<bind name="var" value="{showBusyIndicator: false, isInvitationSent: false}"/>
			<bind name="catch" value="'evPlayerInvitationToClub'"/>
			<bind name="catch" value="'evPlayerInvitationToClubRevoked'"/>
			<bind name="dispatch" value="'left_click';	((_playerContext.type == 'inviteToClub') &amp;&amp; (actionDenyReason == 'no_reason')) ? 'evPlayerInvitationToClub' : null; {showBusyIndicator: true} "/>
			<bind name="entityDH" value="'entityClub'; _playerContext.clubEntityId"/>
			<bind name="watchDH" value="'invitedPlayers'; ['entityClub.club.evInvitedClubmansChanged']; entityClub.club.invitedClubmans"/>
			<bind name="contains" value="invitedPlayers; ($item.accountEntityId == entityAccount.id); 'isInvitationSent'"/>
			<bind name="changeDispatch" value="isInvitationSent; 'evPlayerInvitationToClub'; {showBusyIndicator: false}"/>
			<bind name="watchDH" value="'clubMembers'; ['entityClub.club.evMembersChanged']; entityClub.club.members"/>
			<bind name="watch" value="'isInvitedToDivision'; entityAccount.playerInvitedToPrebattleInfo != null"/>
			<bind name="action" value="'left_click';	(isActionEnabled == false)						? '' :
									(_playerContext.type == 'startPrivateChat')		? 'openChannelForPrivateMessages' :
									(_playerContext.type == 'inviteToChannel')		? 'sendChannelInvite' :
									(_playerContext.type == 'inviteToClub')			? 'inviteUserToClub' :
									(_playerContext.type == 'inviteToParty')		? 'inviteToDivision' :
									(_playerContext.type == 'inviteToPartyFromClubMembersList')	? 'inviteToDivision' :
									(_playerContext.type == 'inviteToDivision')		? 'inviteToDivision' :
									(_playerContext.type == 'inviteToTrainingRoom')	? 'TrainingRoomProxy.sendInvite' :
									(_playerContext.type == 'clubMembersList')		? 'openChannelForPrivateMessages' :
									(_playerContext.type == 'contactsClubMembers')	? 'openChannelForPrivateMessages' :
									(_playerContext.type == 'invitedToClubPlayers')	? 'openChannelForPrivateMessages' :
									(_playerContext.type == 'channelParticipants')	? 'openChannelForPrivateMessages'
																					: '';
									(isActionEnabled == false)						? {} :
									(_playerContext.type == 'startPrivateChat')		? {dbId: entityAccount.accountSimple.dbId} :
									(_playerContext.type == 'inviteToChannel')		? {channelId: _playerContext.channelId, inviteDbId: entityAccount.accountSimple.dbId} :
									(_playerContext.type == 'inviteToClub')			? {clubId: _playerContext.clubId, playerName: entityAccount.accountName.name, userId: entityAccount.accountSimple.dbId} :
									(_playerContext.type == 'inviteToParty')		? {playerId: entityAccount.accountSimple.dbId, playerName: entityAccount.accountName.name, inviteType: InviteType.COMMON} :
									(_playerContext.type == 'inviteToPartyFromClubMembersList')	? {playerId: entityAccount.accountSimple.dbId, playerName: entityAccount.accountName.name, inviteType: InviteType.COMMON} :
									(_playerContext.type == 'inviteToDivision')		? {playerId: entityAccount.accountSimple.dbId, playerName: entityAccount.accountName.name, inviteType: InviteType.COMMON} :
									(_playerContext.type == 'inviteToTrainingRoom')	? {newAccDBID: entityAccount.accountSimple.dbId, teamId: _teamId} :
									(_playerContext.type == 'clubMembersList')		? {dbId: entityAccount.accountSimple.dbId} :
									(_playerContext.type == 'contactsClubMembers')	? {dbId: entityAccount.accountSimple.dbId} :
									(_playerContext.type == 'invitedToClubPlayers')	? {dbId: entityAccount.accountSimple.dbId} :
									(_playerContext.type == 'channelParticipants')	? {dbId: entityAccount.accountSimple.dbId}
																					: {}"/>
			<block>
				<bind name="transition" value="(mouseDown &amp;&amp; !isSelf); 0.03; {alpha: 1}; {alpha: 0.7}"/>
				<styleClass value="$Fullsize"/>
				<bind name="style" value="'marginLeft'; _isShort ? '2px'
												: _isClubMembersList	? '6px'
																		: '16px'"/>
				<block>
					<styleClass value="$Fullsize"/>
					<bind name="instance" value="'PlayerContactItem'; {_entityAccountId: _entityAccountId, _playerContext: _playerContext, _isShort: _isShort, _isWardog: isWardog, _nickNameWidth: _nickNameWidth}"/>
				</block>
				<block>
					<styleClass value="$AlignRight"/>
					<block>
						<bind name="visible" value="	!(isSelf) &amp;&amp;
									(_playerContext.type != 'invitedToClubPlayers')"/>
						<style>
							<marginTop value="4px"/>
						</style>
						<bind name="style" value="'marginRight'; (_isShort || isLeaderMarkerVisible) ? '6px' : '10px'"/>
						<bind name="transition" value="rollOver; 0.3; {alpha: 0}; {alpha: 1.0}; {alpha: 0}; 1; 0.07"/>
						<bind name="watch" value="'isAddToContactsBtnVisible';	(_playerContext.type != 'clubMembersList') &amp;&amp;
																(groupIdsOfAccount==null) &amp;&amp;
																!(isIgnored) &amp;&amp;
																!(isSuspended)"/>
						<block>
							<style>
								<marginTop value="1px"/>
								<marginRight value="3px"/>
							</style>
							<bind name="instance" value="'BusyIndicator'; showBusyIndicator ? { _showBusyIndicator: showBusyIndicator } : null"/>
						</block>
						<block>
							<bind name="visible" value="isAddToContactsBtnVisible"/>
							<style>
								<marginRight value="4px"/>
							</style>
							<block className="button_add_contact" type="native"/>
							<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_ADD_TO_CONTACTS'}"/>
							<bind name="action" value="'click'; 'addContact'; {dbId: entityAccount.accountSimple.dbId}"/>
						</block>
						<style>
							<marginRight value="4px"/>
						</style>
						<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInDivision'; 'playersInDivision'"/>
						<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInvitedToDivision'; 'playersInvitedToDivision'"/>
						<bind name="watch" value="'isInTrainingRoom'; trainingRoomEntity != null"/>
						<bind name="watch" value="'freePlaces'; (divisionData.maxPlayersInDivision - playersInDivision.length - playersInvitedToDivision.length)"/>
						<bind name="watch" value="'isSelfInParty'; ((divisionEntranceData.divisionType == 'party') &amp;&amp; (divisionData.divisionExist)) ? true : false"/>
						<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'slimClientData'"/>
						<bind name="watch" value="'isInviteToDivisionBtnVisible'; (	slimClientData.isFull &amp;&amp;
																	(freePlaces &gt; 0) &amp;&amp;
																	accountOnline &amp;&amp;
																	!(_isShort) &amp;&amp;
																	!(isInDivision) &amp;&amp;
																	(dockStateName != 'balancer') &amp;&amp;
																	(_playerContext.type != 'clubMembersList') &amp;&amp;
																	(_playerContext.type != 'inviteToClub') &amp;&amp;
																	(_playerContext.type != 'inviteToTrainingRoom') &amp;&amp;
																	(_playerContext.type != 'contactsClubMembers') &amp;&amp;
																	(_playerContext.type != 'inviteToPartyFromClubMembersList') &amp;&amp;
																	!(isSelfInParty) &amp;&amp;
																	!(isInTrainingRoom) &amp;&amp;
																	!(isSuspended) )"/>
						<block>
							<bind name="visible" value="isInviteToDivisionBtnVisible"/>
							<style>
								<marginRight value="4px"/>
							</style>
							<block className="button_division_invite" type="native">
								<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInvitedToDivision'; 'name'; entityAccount.accountName.name; 'sentInvitationData'"/>
								<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'invitationsToDivision'; 'playerName'; entityAccount.accountName.name; 'receivedInvitationData'"/>
								<bind name="enabled" value="(sentInvitationData.length == 0) &amp;&amp; (receivedInvitationData.length == 0) &amp;&amp; !isInvitedToDivision"/>
								<bind name="action" value="'buttonClick'; 'inviteToDivision'; {playerId: entityAccount.accountSimple.dbId, playerName: entityAccount.accountName.name, inviteType: InviteType.COMMON}"/>
							</block>
							<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: isInvitedToDivision ? 'IDS_INVITED_IN_DIVISION_ALREADY' : 'IDS_INVITE_IN_DIVISION'}"/>
						</block>
						<block>
							<bind name="visible" value="!(isSuspended)"/>
							<block className="button_chat_small" type="native"/>
							<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_SEND_MESSAGE'}"/>
							<bind name="action" value="'click'; 'openChannelForPrivateMessages'; {dbId: entityAccount.accountSimple.dbId}"/>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="watch" value="'isLeaderMarkerVisible';	((_playerContext.type == 'clubMembersList')
															|| (_playerContext.type == 'contactsClubMembers')
															|| (_playerContext.type == 'inviteToPartyFromClubMembersList')
															|| (_playerContext.type == 'channelParticipants' &amp;&amp; _playerContext.channelTypeIdent == 'club')) &amp;&amp;
															(entityAccount.accountSimple.dbId == _playerContext.clubLeaderDbId)"/>
						<block>
							<bind name="visible" value="isLeaderMarkerVisible"/>
							<style>
								<marginLeft value="-1px"/>
								<marginRight value="5px"/>
								<marginTop value="7px"/>
							</style>
							<block className="icon_club_leader" type="native"/>
							<bind name="tooltip" value="'MouseInstructionTooltip'; {	_multiParagraphArray: isSelf 	?	[{_paragraphText: 'IDS_YOU_ARE_CLUB_LEADER'},
																										{_paragraphText: 'IDS_CLUB_LEADER_DESCRIPTION_0'},
																										{_paragraphText: 'IDS_CLUB_LEADER_DESCRIPTION_1'},
																										{_paragraphText: 'IDS_CLUB_LEADER_DESCRIPTION_2'}]
																									: 	[{_paragraphText: 'IDS_CLUB_LEADER_HINT'},
																										{_paragraphText: 'IDS_CLUB_LEADER_DESCRIPTION_0'},
																										{_paragraphText: 'IDS_CLUB_LEADER_DESCRIPTION_1'}],
																			_marginBottom: '4px'}"/>
						</block>
						<bind name="watch" value="'isRevokeInvitationBtnVisible'; 	(_playerContext.type == 'invitedToClubPlayers') &amp;&amp;
																	(_playerContext.invatorDbId == selfPlayerDbId) &amp;&amp;
																	rollOver"/>
						<block>
							<bind name="visible" value="isRevokeInvitationBtnVisible"/>
							<bind name="dispatch" value="'buttonClick'; _playerContext.type == 'invitedToClubPlayers' ? 'evPlayerInvitationToClubRevoked' : null; {showBusyIndicator: true} "/>
							<block>
								<bind name="visible" value="!showBusyIndicator"/>
								<style>
									<marginTop value="3px"/>
									<marginRight value="7px"/>
								</style>
								<block className="button_cross" type="native">
									<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_RECALL_INVITATION'}"/>
									<bind name="action" value="'buttonClick'; 'cancelClubInvitation'; {clubId: _playerContext.clubId, userId: entityAccount.accountSimple.dbId}"/>
								</block>
							</block>
							<block>
								<bind name="fade" value="showBusyIndicator; 0.15; {alpha: 0}; {alpha: 1}"/>
								<style>
									<marginTop value="4px"/>
									<marginRight value="4px"/>
								</style>
								<bind name="instance" value="'BusyIndicator'; showBusyIndicator ? { _showBusyIndicator: showBusyIndicator } : null"/>
							</block>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ContactInfoTooltipAccountHeader">
		<bind name="entityDH" value="'playerEntity'; _entityAccountId"/>
		<bind name="watchDH" value="'playerEntityDbId'; [];  playerEntity.accountSimple.dbId"/>
		<style>
			<width value="100%"/>
		</style>
		<block className="dock_submenu_item" type="native">
			<params>
				<param name="soundSet" value="dropmenu_button"/>
			</params>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
					<flow value="horizontal"/>
				</style>
				<block>
					<style>
						<width value="80px"/>
						<height value="80px"/>
						<marginTop value="4px"/>
						<marginLeft value="4px"/>
					</style>
					<bind name="instance" value="'PlayerDogTag'; {_playerDbId: playerEntityDbId, _size: 'small'}"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginRight value="8px"/>
					</style>
					<bind name="child" value="_isBot ? 1 : 0; {_playerDbId: playerEntityDbId, _entityAccountId: _entityAccountId}; 'PlayerStereotype'; 'BotStereotype'"/>
				</block>
			</block>
		</block>
	</block>
	<block className="BotStereotype">
		<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
		<bind name="watchDH" value="'windowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.state"/>
		<bind name="watchDH" value="'notReadyWindowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.notReadyWindowState"/>
		<bind name="watchDH" value="'windowInset'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.inset"/>
		<bind name="watchDH" value="'windowInsetLabel'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.insetLabel"/>
		<bind name="watchDH" value="'isBotsAIEnabled'; ['trainingRoomEntity.trainingRoom.evUpdate']; trainingRoomEntity.trainingRoom.isBotsAIEnabled"/>
		<bind name="entityDH" value="'entityAccount'; _entityAccountId"/>
		<bind name="watchDH" value="'nickName'; ['entityAccount.accountName.evChanged']; entityAccount.accountName.nickName"/>
		<bind name="watchDH" value="'AILevel'; ['entityAccount.bot.evUpdate']; entityAccount.bot.AILevel"/>
		<bind name="watchDH" value="'canShoot'; ['entityAccount.bot.evUpdate']; entityAccount.bot.canShoot"/>
		<bind name="watchDH" value="'canMove'; ['entityAccount.bot.evUpdate']; entityAccount.bot.canMove"/>
		<bind name="watch" value="'canShootStr'; canShoot	? 'IDS_BOT_CAN_SHOOT_STATUS'
											: 'IDS_BOT_CAN_NOT_SHOOT_STATUS'"/>
		<bind name="watch" value="'canMoveStr';	canMove		? 'IDS_BOT_CAN_MOVE_STATUS'
											: 'IDS_BOT_CAN_NOT_MOVE_STATUS'"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
				<marginRight value="8px"/>
				<marginTop value="10px"/>
				<marginBottom value="6px"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$TextHeaderWhite"/>
				<bind name="text" value="nickName"/>
				<bind name="class" value="'$Bold'"/>
			</block>
			<block type="text">
				<style>
					<width value="100%"/>
					<marginTop value="-3px"/>
				</style>
				<styleClass value="$TextDefault"/>
				<bind name="text" value="!isBotsAIEnabled 	? 'IDS_DISABLED_AI_BOT_STATUS' :
						AILevel &gt; 9 		? 'IDS_HARD_LEVEL_BOT_STATUS' :
						AILevel &gt; 5 		? 'IDS_MEDIUM_LEVEL_BOT_STATUS'
											: 'IDS_LOW_LEVEL_BOT_STATUS'"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="isBotsAIEnabled"/>
			<style>
				<width value="100%"/>
				<marginRight value="8px"/>
				<marginBottom value="6px"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<bind name="text" value="tr(canShootStr) + ' ' + tr(canMoveStr)"/>
			</block>
		</block>
	</block>
	<block className="PlayerContactItem">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInDivision'; 'pureName'; pureName; 'playerInDivision'"/>
		<bind name="entityDH" value="'entityAccount'; _entityAccountId"/>
		<bind name="watchDH" value="'nickName'; 			['entityAccount.accountName.evChanged']; entityAccount.accountName.nickName"/>
		<bind name="watchDH" value="'pureName'; 			['entityAccount.accountName.evChanged']; entityAccount.accountName.name"/>
		<bind name="watchDH" value="'clubsMembership'; 	['entityAccount.clubman.evClubsMembershipChanged']; entityAccount.clubman.clubsMembership"/>
		<bind name="watchDH" value="'accountOnline'; 	['entityAccount.accountStatus.evOnlineChanged']; entityAccount.accountStatus.online"/>
		<bind name="watchDH" value="'inBattle'; 			['entityAccount.accountStatus.evInBattleChanged']; entityAccount.accountStatus.inBattle"/>
		<bind name="watchDH" value="'accountLevel'; 		['entityAccount.accountLevel.evLevelChanged']; entityAccount.accountLevel.level"/>
		<bind name="watchDH" value="'rank'; 				['entityAccount.accountRank.evRankChanged']; entityAccount.accountRank.rank"/>
		<bind name="watchDH" value="'clanId'; 			['entityAccount.clanman.evClanIdChanged']; entityAccount.clanman.clanId"/>
		<bind name="watchDH" value="'isSelf'; 			[]; entityAccount.accountSimple.isSelfPlayer"/>
		<bind name="entityDH" value="'entityClub'; _playerContext.clubEntityId"/>
		<bind name="watchDH" value="'isSelfPlayerCurPartyMember';['entityClub.party.evUpdate']; entityClub.party.isMember"/>
		<bind name="watchDH" value="'playerPrebattleClubId'; 	['entityAccount.prebattlePlayer.evClubIdChanged']; entityAccount.prebattlePlayer.clubId"/>
		<bind name="watchDH" value="'isPartyReady'; 				['entityAccount.prebattlePlayer.evStateChanged']; entityAccount.prebattlePlayer.isReady"/>
		<bind name="watchDH" value="'isPartyCommander'; 			['entityAccount.prebattlePlayer.evIsCommanderChanged']; entityAccount.prebattlePlayer.isCommander"/>
		<bind name="watchDH" value="'inPartyBattle'; 			['entityAccount.prebattlePlayer.evIsInBattleChanged']; entityAccount.prebattlePlayer.isInBattle"/>
		<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
		<bind name="primaryEntityDH" value="'clanExtendedEntity'; CC.clanExtended; clanId"/>
		<bind name="watchDH" value="'clanTag'; 	['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
		<bind name="watchDH" value="'color'; 	['clanExtendedEntity.clanExtended.evColorChanged']; clanExtendedEntity.clanExtended.color"/>
		<bind name="watchDH" value="'league'; 	['clanExtendedEntity.clanExtended.evLeagueChanged']; clanExtendedEntity.clanExtended.league"/>
		<bind name="watch" value="'clanTagColor'; ('0xff' + color)"/>
		<bind name="watch" value="'isPlayerInParty'; (entityAccount.prebattlePlayer &amp;&amp; (playerPrebattleClubId != -1))"/>
		<bind name="watch" value="'isInCurClubChannelParty'; (_playerContext.type == 'channelParticipants')			&amp;&amp;
											(_playerContext.channelTypeIdent == 'club')				&amp;&amp;
											(entityClub.club.id == playerPrebattleClubId)			&amp;&amp;
											(isSelfPlayerCurPartyMember)			? true
																					: false"/>
		<bind name="watch" value="'isInDivision'; ((divisionEntranceData.divisionType == 'division') &amp;&amp; (playerInDivision.length &gt; 0)) ? true : false"/>
		<bind name="watch" value="'isInParty'; ((divisionEntranceData.divisionType == 'party') &amp;&amp; (playerInDivision.length &gt; 0)) ? true : false"/>
		<bind name="watch" value="'isInFormation'; (playerInDivision.length &gt; 0)"/>
		<bind name="watch" value="'isReady'; isPlayerInParty				? isPartyReady :
							playerInDivision[0].isReady ? true
														: false"/>
		<bind name="watch" value="'isCommander'; isPlayerInParty					? isPartyCommander : 
								playerInDivision[0].isCommander	? true
																: false"/>
		<bind name="watch" value="'isInFormationBattle'; (isPlayerInParty || isInDivision || isInParty) &amp;&amp;
										(playerInDivision[0].isInBattle || inPartyBattle || inBattle)	? true
																										: false"/>
		<bind name="watchDH" value="'invitedPartyClubmans'; ['entityClub.party.evUpdate']; entityClub.party.invitedClubmans"/>
		<bind name="watch" value="'isInvitedToDivision'; entityAccount.playerInvitedToPrebattleInfo != null"/>
		<bind name="watchDH" value="'inviteExpirationTime'; ['entityAccount.playerInvitedToPrebattleInfo.evChanged']; entityAccount.playerInvitedToPrebattleInfo.expirationTime"/>
		<bind name="var" value="{wantedInDivision: false}"/>
		<bind name="style" value="'alpha'; _isOfflineAlpha	? accountOnline ? 1
															: 0.5
											: 1"/>
		<block>
			<style>
				<hitTest value="false"/>
			</style>
			<block>
				<bind name="visible" value="(!(accountOnline) || (inBattle &amp;&amp; !(isInFormationBattle)) || wantedInDivision || (_playerContext.type == 'invitedToClubPlayers'))"/>
				<style>
					<marginLeft value="3px"/>
					<marginTop value="5px"/>
				</style>
				<bind name="var" value="{isClubMemberLongOffline: false}"/>
				<bind name="instance" value="'CalcLongOffline'; (!(accountOnline) &amp;&amp; (_playerContext.type == 'clubMembersList') &amp;&amp; (entityAccount.accountSimple.dbId != _playerContext.clubLeaderDbId)) ? {_entityAccountId: _entityAccountId} : ''"/>
				<bind name="catch" value="'isClubMemberLongOfflineChanged'"/>
				<bind name="changeDispatch" value="accountOnline; 'isClubMemberLongOfflineChanged'; {isClubMemberLongOffline: false}"/>
				<block className="icon_player_status" type="native">
					<bind name="gotoAndStop!" value="isClubMemberLongOffline							? 'long_offline' :
									(_playerContext.type == 'invitedToClubPlayers')	? 'invited' :
									wantedInDivision								? 'wanted_in_division' :
									inBattle										? 'in_battle'
																					: 'not_ready'"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="isInDivision || (isInvitedToDivision &amp;&amp; !(isSelf)) ? true : false"/>
				<style>
					<marginLeft value="10px"/>
				</style>
				<block>
					<style>
						<position value="absolute"/>
						<marginTop value="9px"/>
						<marginLeft value="-12px"/>
					</style>
					<bind name="instance" value="'VoiceChatDockIcon'; (accountOnline &amp;&amp; isInFormation)	? {_playerName: pureName, _isSelf: isSelf}
																						: null"/>
				</block>
				<block>
					<style>
						<marginTop value="4px"/>
					</style>
					<bind name="instance" value="'FormationPlayerIcon';	{_isEmptySlot: isInvitedToDivision, isCommander: isCommander, isReady: isReady, isInBattle: isInFormationBattle,
																			_formationType: divisionEntranceData.divisionType, _isWardog: _isWardog} "/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="(!(_isShort || isInDivision || (accountLevel &lt;= 0)))"/>
				<block>
					<style>
						<marginTop value="2px"/>
					</style>
					<bind name="visible" value="rank != 0"/>
					<bind name="instance" value="'IconRankSmall'; {_rankId: rank}"/>
				</block>
				<block>
					<bind name="visible" value="rank == 0"/>
					<block type="text">
						<bind name="name" value="'playerContactLevel_' + nickName"/>
						<styleClass value="$TextSmallWhite"/>
						<style>
							<marginLeft value="4px"/>
							<marginTop value="6px"/>
						</style>
						<bind name="text" value="accountLevel"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block type="text">
				<bind name="name" value="'playerContactName_' + nickName"/>
				<bind name="watch" value="'_tfWidth' ; 	_nickNameWidth	? _nickNameWidth :
										_isShort		? 132
														: 235"/>
				<bind name="style" value="'width';	_notTrancated	? 'auto' :
									(!(accountOnline) || inBattle || wantedInDivision)	? isInDivision	? _tfWidth - 37 + 'px'
																										: _tfWidth - 20 + 'px'
																						: isInDivision	? _tfWidth - 20 + 'px'
																										: _tfWidth + 'px'"/>
				<style>
					<marginTop value="2px"/>
					<marginLeft value="2px"/>
					<multiline value="false"/>
				</style>
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="class" value=" (_playerContext.channelTypeIdent == 'division' &amp;&amp; divisionEntranceData.divisionType == 'party' &amp;&amp; _isWardog) 	? '$FontColorMercenaries' :
							(isSelf || (isInDivision &amp;&amp; divisionEntranceData.divisionType == 'division'))								? '$FontColorGolden'
																																		: '$FontColorWhite'"/>
				<bind name="class" value=" isSelf ? '$Bold' : '$None'"/>
				<bind name="text" value="_playerContext.channelTypeIdent == 'clan' ? pureName : nickName"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="CalcLongOffline">
		<bind name="entityDH" value="'entityAccount'; _entityAccountId"/>
		<bind name="watchDH" value="'lastGameDate'; ['entityAccount.accountStatus.evOnlineChanged']; entityAccount.account.lastGameData"/>
		<bind name="collectionDH" value="CC.clubsCommon; 'clubsCommonCollection'"/>
		<bind name="entityDH" value="'clubsCommonEntity'; clubsCommonCollection[0].id"/>
		<bind name="serverTime" value="'serverTime'"/>
		<bind name="watch" value="'_isClubMemberLongOffline'; ((serverTime - lastGameDate) &gt; clubsCommonEntity.clubsCommon.maxOfflineTime)"/>
		<bind name="changeDispatch" value="_isClubMemberLongOffline; 'isClubMemberLongOfflineChanged'; {isClubMemberLongOffline: _isClubMemberLongOffline}"/>
	</block>
	<block className="ContactInfoTooltip">
		<bind name="entityDH" value="'entityAccount'; _entityAccountId"/>
		<bind name="watchDH" value="'inBattle'; ['entityAccount.accountStatus.evInBattleChanged']; entityAccount.accountStatus.inBattle"/>
		<bind name="watchDH" value="'accountOnline'; ['entityAccount.accountStatus.evOnlineChanged']; entityAccount.accountStatus.online"/>
		<bind name="watchDH" value="'accountLevel'; ['entityAccount.accountLevel.evLevelChanged']; entityAccount.accountLevel.level"/>
		<bind name="watchDH" value="'rank'; ['entityAccount.accountRank.evRankChanged']; entityAccount.accountRank.rank"/>
		<bind name="watchDH" value="'isSuspended'; ['entityAccount.accountSimple.evSuspendedChanged']; entityAccount.accountSimple.suspended"/>
		<bind name="watchDH" value="'pureName'; ['entityAccount.accountName.evChanged']; entityAccount.accountName.name"/>
		<bind name="watchDH" value="'nickName'; ['entityAccount.accountName.evChanged']; entityAccount.accountName.nickName"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInDivision'; 'pureName'; entityAccount.accountName.name; 'playerInDivision'"/>
		<bind name="watch" value="'isInDivision'; ((divisionEntranceData.divisionType == 'division') &amp;&amp; (playerInDivision.length &gt; 0)) ? true : false"/>
		<bind name="watch" value="'isInFormation'; (playerInDivision.length &gt; 0)"/>
		<bind name="watchDH" value="'isSelf'; []; entityAccount.accountSimple.isSelfPlayer"/>
		<bind name="watch" value="'isBot'; entityAccount.bot != undefined"/>
		<bind name="watch" value="'playerTooltipItem';	isBot 		? 2 :
										rank == 0	? 0
													: 1"/>
		<bind name="watch" value="'isReady'; playerInDivision[0].isReady ? true
														: false"/>
		<bind name="watch" value="'isCommander'; playerInDivision[0].isCommander	? true
																: false"/>
		<bind name="watch" value="'isInFormationBattle'; isInDivision &amp;&amp;
										(playerInDivision[0].isInBattle || inBattle)	? true
																						: false"/>
		<bind name="watchDH" value="'expirationTime'; ['entityAccount.playerInvitedToPrebattleInfo.evChanged']; entityAccount.playerInvitedToPrebattleInfo.expirationTime"/>
		<bind name="watch" value="'isInvitedToDivision'; entityAccount.playerInvitedToPrebattleInfo != null"/>
		<bind name="countdown" value="expirationTime; 'countdownText'; 'mm:ss'"/>
		<bind name="var" value="{wantedInDivision: false}"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="320px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'ContactInfoTooltipAccountHeader'; {_entityAccountId: _entityAccountId, _isBot: isBot}"/>
		</block>
		<block>
			<bind name="visible" value="(!(accountOnline) || (inBattle &amp;&amp; !(isInFormationBattle))) &amp;&amp; !(isBot)"/>
			<style>
				<width value="100%"/>
				<height value="30px"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="4px"/>
					<marginBottom value="-4px"/>
					<marginLeft value="10px"/>
					<marginRight value="5px"/>
				</style>
				<block>
					<block className="icon_player_status" type="native">
						<bind name="gotoAndStop!" value=" inBattle	? 'in_battle'
													: 'not_ready'"/>
					</block>
				</block>
				<block type="text">
					<bind name="style" value="'alpha'; (!(accountOnline) || inBattle) ? 0.6 : 1"/>
					<style>
						<marginLeft value="1px"/>
					</style>
					<styleClass value="$TextDefault"/>
					<bind name="text" value=" inBattle	? tr('IDS_IN_BATTLE')
										: tr('IDS_PLAYER_IS_OFFLINE_C')"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'ContactInfoTooltipWantInFormation'; _playerContext.isFormationSeeker ? {_playerContext: _playerContext} : null"/>
		</block>
		<bind name="watch" value="'isFormationStatusVisible';	isInDivision"/>
		<block>
			<bind name="visible" value="isFormationStatusVisible &amp;&amp; !(_playerContext.isInvitation)"/>
			<style>
				<width value="100%"/>
				<height value="30px"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="4px"/>
					<marginBottom value="-4px"/>
					<marginLeft value="5px"/>
					<marginRight value="5px"/>
				</style>
				<block>
					<style>
						<marginLeft value="4px"/>
					</style>
					<bind name="instance" value="'FormationPlayerIcon'; {_isEmptySlot: _playerContext.isInvitation, isCommander: isCommander, isReady: isReady,
														isInBattle: isInFormationBattle, _formationType: divisionEntranceData.divisionType}"/>
				</block>
				<block type="text">
					<style>
						<marginLeft value="4px"/>
					</style>
					<styleClass value="$TextDefaultBold"/>
					<bind name="class" value="(divisionEntranceData.divisionType == 'division') 	? '$FontColorGolden'
																				: '$FontColorWhite'"/>
					<bind name="watch" value="'playerRoleStr'; 	isCommander	? tr('IDS_DIVISION_COMMANDER_C')
															: tr('IDS_IN_DIVISION')"/>
					<bind name="watch" value="'playerStatusStr'; isInFormationBattle	? tr('IDS_IN_BATTLE') :
												isReady				? tr('IDS_READY')
																	: tr('IDS_NOT_READY')"/>
					<bind name="text" value="playerRoleStr + '. ' + playerStatusStr"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'PlayerTooltipInvitationCountdown'; isInvitedToDivision &amp;&amp; !(isSelf) ? { 	_expirationTime: expirationTime, _formationType: 'division',
																									_text: 'IDS_INVITED_IN_DIVISION'} : null"/>
		</block>
		<block>
			<bind name="visible" value="isFormationStatusVisible"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'ContactInfoTooltipVoiceChatStatus'; (accountOnline &amp;&amp; isInFormation)	? {_isSelf: isSelf, _playerName: pureName}
																								: null"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'ContactInfoTooltipActionDenyReason'; _actionDenyReason != 'no_reason' ? {_actionDenyReason: _actionDenyReason} : null"/>
		</block>
		<block>
			<bind name="visible" value="!(isSelf)"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="10px"/>
					<marginRight value="8px"/>
					<marginTop value="7px"/>
				</style>
				<block>
					<bind name="visible" value="_actionDenyReason == 'no_reason' &amp;&amp; !(isBot) &amp;&amp; !(isSuspended)"/>
					<style>
						<width value="100%"/>
						<marginBottom value="5px"/>
					</style>
					<bind name="instance" value="'MouseInstruction'; {_type: 'left',	_instructionText:	(_playerContext.type == 'startPrivateChat')		? 'IDS_HINT_LEFT_CLICK_TO_START_CHAT' :
																						(_playerContext.type == 'inviteToChannel')		? 'IDS_HINT_LEFT_CLICK_TO_IVITE_TO_CHANNEL' :
																						(_playerContext.type == 'inviteToClub')			? 'IDS_HINT_LEFT_CLICK_TO_IVITE_TO_CLUB' :
																						(_playerContext.type == 'inviteToParty')		? 'IDS_HINT_LEFT_CLICK_TO_IVITE_TO_PARTY' :
																						(_playerContext.type == 'inviteToPartyFromClubMembersList') ? 'IDS_HINT_LEFT_CLICK_TO_IVITE_TO_PARTY' :
																						(_playerContext.type == 'inviteToDivision')		? 'IDS_HINT_LEFT_CLICK_TO_IVITE_TO_DIVISION' :
																						(_playerContext.type == 'inviteToTrainingRoom')	? 'IDS_HINT_LEFT_CLICK_TO_IVITE_TO_TRAINING_ROOM' :
																						(_playerContext.type == 'clubMembersList')		? 'IDS_HINT_LEFT_CLICK_TO_START_CHAT' :
																						(_playerContext.type == 'clubMemberPartyPlayer')? 'IDS_HINT_LEFT_CLICK_TO_START_CHAT' :
																						(_playerContext.type == 'contactsClubMembers')	? 'IDS_HINT_LEFT_CLICK_TO_START_CHAT' :
																						(_playerContext.type == 'invitedToClubPlayers')	? 'IDS_HINT_LEFT_CLICK_TO_START_CHAT' :
																						(_playerContext.type == 'channelParticipants')	? 'IDS_HINT_LEFT_CLICK_TO_START_CHAT'
																																		: ('NO INSTRUCTION FOR SUCH _playerContext.type: ' + _playerContext.type),
													_maxWidth: 220}"/>
				</block>
				<block>
					<style>
						<width value="100%"/>
						<marginBottom value="6px"/>
					</style>
					<bind name="style" value="'marginTop'; (_actionDenyReason == 'no_reason') ? '0px' : '7px'"/>
					<bind name="instance" value="'MouseInstruction'; {_type: 'right', _instructionText: 'IDS_HINT_RIGHT_CLICK_FOR_CONTEXT_MENU', _maxWidth: 220}"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ContactInfoTooltipWantInFormation">
		<style>
			<width value="100%"/>
		</style>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="6px"/>
				<marginBottom value="8px"/>
				<marginLeft value="10px"/>
				<marginRight value="5px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<marginTop value="2px"/>
					</style>
					<block className="icon_player_status" type="native">
						<bind name="gotoAndStop!" value="'wanted_in_division'"/>
					</block>
				</block>
				<block type="text">
					<style>
						<marginLeft value="4px"/>
					</style>
					<styleClass value="$TextDefaultBold"/>
					<bind name="text" value="'IDS_WANT_IN_DIVISION'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block type="text">
				<bind name="visible" value="_playerContext.seekerComment ? true : false"/>
				<style>
					<width value="100%"/>
					<marginTop value="1px"/>
				</style>
				<bind name="class" value="'$FontColorBlueish'"/>
				<styleClass value="$TextHeader"/>
				<bind name="text" value="tr('IDS_LEFT_QUOTE') + _playerContext.seekerComment + tr('IDS_RIGHT_QUOTE')"/>
			</block>
		</block>
	</block>
	<block className="ContactInfoTooltipActionDenyReason">
		<style>
			<width value="100%"/>
		</style>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="10px"/>
				<marginRight value="8px"/>
				<marginTop value="6px"/>
				<marginBottom value="5px"/>
			</style>
			<block className="icon_warning_orange" type="native">
				<style>
					<marginTop value="5px"/>
					<marginRight value="4px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<style>
					<maxWidth value="210"/>
				</style>
				<bind name="text" value="_actionDenyReason"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ContactInfoTooltipLongOffline">
		<bind name="collectionDH" value="CC.clubsCommon; 'clubsCommonCollection'"/>
		<bind name="entityDH" value="'clubsCommonEntity'; clubsCommonCollection[0].id"/>
		<bind name="timeFormat" value="clubsCommonEntity.clubsCommon.maxOfflineTime; 'HIGHEST'; 'maxOfflineTimeFormatted'; true"/>
		<style>
			<width value="100%"/>
		</style>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="4px"/>
				<marginBottom value="3px"/>
				<marginLeft value="6px"/>
				<marginRight value="5px"/>
			</style>
			<block>
				<style>
					<marginLeft value="4px"/>
				</style>
				<block className="icon_player_status" type="native">
					<bind name="gotoAndStop!" value="'long_offline'"/>
				</block>
			</block>
			<block type="text">
				<style>
					<marginLeft value="1px"/>
				</style>
				<style>
					<maxWidth value="210"/>
				</style>
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<bind name="text" value="subst('IDS_PLAYER_LONG_OFFLINE', [], {maxOfflineTime: maxOfflineTimeFormatted})"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ContactInfoTooltipInvitation">
		<style>
			<width value="100%"/>
			<height value="30px"/>
		</style>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginTop value="4px"/>
				<marginBottom value="-4px"/>
				<marginLeft value="6px"/>
				<marginRight value="5px"/>
			</style>
			<block>
				<style>
					<marginLeft value="4px"/>
				</style>
				<block className="icon_player_status" type="native">
					<bind name="gotoAndStop!" value="'invited'"/>
				</block>
			</block>
			<block type="text">
				<style>
					<marginLeft value="1px"/>
				</style>
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorDefault'"/>
				<text value="IDS_INVITED_TO_CLUB"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ContactInfoTooltipVoiceChatStatus">
		<bind name="primaryEntityDH" value="'selfVoiceChatEntity'; CC.voiceChat; 0"/>
		<bind name="watchDH" value="'selfVoiceChatEnabled'; ['selfVoiceChatEntity.voiceChat.evEnabledChanged']; selfVoiceChatEntity.voiceChat.enabled"/>
		<bind name="primaryEntityDH" value="'playerVoiceChatEntity'; CC.playerVoiceState; _playerName"/>
		<bind name="watch" value="'playerVoiceChatIsEnabled'; (playerVoiceChatEntity != null)"/>
		<bind name="watchDH" value="'playerVoiceChatIsMuted'; ['playerVoiceChatEntity.playerVoiceState.evIsMutedChanged']; playerVoiceChatEntity.playerVoiceState.isMuted"/>
		<bind name="watch" value="'voiceChatStatusText';	_isSelf						?	selfVoiceChatEnabled	? 	'IDS_VOICE_CHAT_ENABLED'
																								:	'IDS_VOICE_CHAT_DISABLED' :
										!(playerVoiceChatIsEnabled)	?	'IDS_PLAYER_IS_NOT_AVAILABLE_IN_VOICE_CHAT'	:
										playerVoiceChatIsMuted		?	'IDS_PLAYER_IS_MUTED_IN_VOICE_CHAT'
																	:	'IDS_PLAYER_IS_AVAILABLE_IN_VOICE_CHAT'"/>
		<bind name="watch" value="'state';	_isSelf 					? !(selfVoiceChatEnabled)	? 'disabled'
																					: 'speak' :
							!(playerVoiceChatIsEnabled) ? 'disabled' :
							playerVoiceChatIsMuted		? 'muted'
														: 'speak'"/>
		<bind name="visible" value="(_isSelf || selfVoiceChatEnabled)"/>
		<style>
			<width value="100%"/>
		</style>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="10px"/>
				<marginRight value="8px"/>
				<marginTop value="4px"/>
				<marginBottom value="2px"/>
			</style>
			<block className="icon_voice_chat_small" type="native">
				<style>
					<marginTop value="6px"/>
					<marginRight value="4px"/>
				</style>
				<bind name="gotoAndStop!" value="state"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="(state == 'speak' ? '$FontColorWhite' : '$FontColorUnready')"/>
				<style>
					<maxWidth value="210"/>
				</style>
				<bind name="text" value="voiceChatStatusText"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ContactContextMenu">
		<bind name="entityDH" value="'entityAccount'; _entityAccountId"/>
		<bind name="watchDH" value="'isSuspended'; ['entityAccount.accountSimple.evSuspendedChanged']; entityAccount.accountSimple.suspended"/>
		<bind name="childParentScope" value="isSuspended ? 0 : 1; {}; 'SuspendedContactContextMenu'; 'NormalContactContextMenu'"/>
	</block>
	<block className="SuspendedContactContextMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<bind name="dataRefDH" value="'accountDbId'; 'entityAccount.accountSimple.dbId'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="MenuBg">
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<bind name="visible" value="optionData.contrast &amp;&amp; !(false)"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="!(false)"/>
				<block className="hint_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="false"/>
				<block className="dock_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginBottom value="-19px"/>
						<marginRight value="-14px"/>
						<marginLeft value="-14px"/>
						<marginTop value="-9px"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithAction">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_REMOVE_FROM_CONTACTS'"/>
				</block>
				<bind name="action" value="'click'; 'removeContact'; {dbId: accountDbId}"/>
			</block>
		</block>
	</block>
	<block className="NormalContactContextMenu">
		<bind name="firstEntityDH" value="'trainingRoomEntity'; CC.trainingRoomWindowState"/>
		<bind name="watchDH" value="'windowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.state"/>
		<bind name="watchDH" value="'notReadyWindowState'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.notReadyWindowState"/>
		<bind name="watchDH" value="'windowInset'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.inset"/>
		<bind name="watchDH" value="'windowInsetLabel'; ['trainingRoomEntity.trainingRoomWindowState.evUpdate']; trainingRoomEntity.trainingRoomWindowState.insetLabel"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<bind name="firstEntityDH" value="'dockStateEntity'; CC.dockState"/>
		<bind name="watchDH" value="'dockStateName'; ['dockStateEntity.dockState.evUpdate']; dockStateEntity.dockState.stateName"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'isSelfPlayerCommander'; ['selfPlayerEntity.preBattlePlayerSimple.evIsCommanderChanged']; selfPlayerEntity.preBattlePlayerSimple.isCommander"/>
		<bind name="watchDH" value="'selfTeamId'; ['selfPlayerEntity.preBattlePlayerSimple.evStateChanged']; selfPlayerEntity.preBattlePlayerSimple.teamId"/>
		<bind name="watchDH" value="'selfPreBattlePlayerId'; []; selfPlayerEntity.preBattlePlayerSimple.id"/>
		<bind name="watchDH" value="'isSelfPlayerTeamCommander'; ['selfPlayerEntity.trainingRoomPlayer.evUpdate']; selfPlayerEntity.trainingRoomPlayer.isCommander"/>
		<bind name="watchDH" value="'isSelf'; []; entityAccount.accountSimple.isSelfPlayer"/>
		<bind name="watchDH" value="'prebattleInvitedPlayerId'; []; entityAccount.playerInvitedToPrebattleInfo.id"/>
		<bind name="watchDH" value="'prebattlePlayerId'; []; entityAccount.preBattlePlayerSimple.id"/>
		<bind name="watchDH" value="'prebattlePlayerTeamId'; ['entityAccount.preBattlePlayerSimple.evStateChanged']; entityAccount.preBattlePlayerSimple.teamId"/>
		<bind name="watchDH" value="'isPrebattlePlayerOwner'; ['entityAccount.preBattlePlayerSimple.evIsCommanderChanged']; entityAccount.preBattlePlayerSimple.isCommander"/>
		<bind name="watchDH" value="'isPrebattlePlayerTeamCommander'; ['entityAccount.trainingRoomPlayer.evUpdate']; entityAccount.trainingRoomPlayer.isCommander"/>
		<bind name="watch" value="'isInvitedToPrebattle'; (entityAccount.playerInvitedToPrebattleInfo != null)"/>
		<bind name="watch" value="'isInPrebattle'; (entityAccount.preBattlePlayerSimple != null &amp;&amp; !(isInvitedToPrebattle))"/>
		<bind name="watch" value="'isInTrainingRoom'; trainingRoomEntity != null"/>
		<bind name="watchDH" value="'trainingRoomOwnerId'; ['trainingRoomEntity.preBattle.evOwnerIdChanged']; trainingRoomEntity.preBattle.ownerId"/>
		<bind name="watch" value="'isSelfPlayerTrainingRoomOwner'; isInTrainingRoom &amp;&amp; (trainingRoomOwnerId == selfPreBattlePlayerId)"/>
		<bind name="watch" value="'isPrebattlePlayerTrainingRoomOwner'; isInTrainingRoom &amp;&amp; (trainingRoomOwnerId == prebattlePlayerId)"/>
		<bind name="dataRefDH" value="'accountDbId'; 'entityAccount.accountSimple.dbId'"/>
		<bind name="dataRefDH" value="'contactsGroups'; 'dataHub.chat.ref.chat.contactsGroups.ref.items'"/>
		<bind name="dataRefDH" value="'chat'; 'dataHub.chat.ref.chat'"/>
		<bind name="watchDH" value="'nickName'; ['entityAccount.accountName.evChanged']; entityAccount.accountName.nickName"/>
		<bind name="watchDH" value="'pureName'; ['entityAccount.accountName.evChanged']; entityAccount.accountName.name"/>
		<bind name="watchDH" value="'accountOnline'; ['entityAccount.accountStatus.evOnlineChanged']; entityAccount.accountStatus.online"/>
		<bind name="watchDH" value="'groupIdsOfAccount'; ['entityAccount.elementInGroups.evGroupsChanged']; entityAccount.elementInGroups.groupIds"/>
		<bind name="watchDH" value="'isIgnored';['entityAccount.contact.evIsIgnoredChanged']; !!entityAccount.contact.isIgnored"/>
		<bind name="watchDH" value="'canAddGroupEntitiesId'; ['entityAccount.elementInGroups.evCanAddGroupEntitiesChanged', 'dataHub.chat.ref.chat.evRosterChanged']; (entityAccount.elementInGroups) ? entityAccount.elementInGroups.canAddGroupEntitiesId : chat.canAddGroupEntitiesId"/>
		<bind name="watch" value="'isInFormation'; (entityAccount.preBattlePlayerSimple != null)"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInvitedToDivision'; 'name';  entityAccount.accountName.name; 'sentInvitationData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'invitationsToDivision'; 'playerName';  entityAccount.accountName.name; 'receivedInvitationData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'dockDefaultValues'; 'dockInitData,dockUpdateData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'slimClientData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionEntranceData'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'divisionData'"/>
		<bind name="watchDH" value="'clubsMembership'; ['entityAccount.clubman.evClubsMembershipChanged']; entityAccount.clubman.clubsMembership"/>
		<bind name="entityDH" value="'entityClub'; _playerContext.clubEntityId"/>
		<bind name="watchDH" value="'clubMembers'; ['entityClub.club.evMembersChanged']; entityClub.club.members"/>
		<bind name="collectionDH" value="CC.club; 'playersClubs'"/>
		<bind name="collectionDH" value="CC.clubsCommon; 'clubsCommonCollection'"/>
		<bind name="entityDH" value="'clubsCommonEntity'; clubsCommonCollection[0].id"/>
		<bind name="watchDH" value="'clubsVoted'; ['clubsCommonEntity.clubsCommon.evClubsVotedChanged']; clubsCommonEntity.clubsCommon.clubsVoted"/>
		<bind name="watch" value="'isVoteInCurClub';	(clubsVoted[0] == entityClub.club.id) ||
									(clubsVoted[1] == entityClub.club.id) ||
									(clubsVoted[2] == entityClub.club.id) ? true : false"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="MenuBg">
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<bind name="visible" value="optionData.contrast &amp;&amp; !(false)"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="!(false)"/>
				<block className="hint_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="false"/>
				<block className="dock_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginBottom value="-19px"/>
						<marginRight value="-14px"/>
						<marginLeft value="-14px"/>
						<marginTop value="-9px"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="visible" value="(isSelfPlayerCommander || (isInTrainingRoom &amp;&amp; isSelfPlayerTeamCommander &amp;&amp; selfTeamId == prebattlePlayerTeamId)) &amp;&amp; 
					   (isInPrebattle || isInvitedToPrebattle) &amp;&amp; (dockStateName != 'balancer')"/>
			<block>
				<bind name="visible" value="(isInvitedToPrebattle == true)"/>
				<styleClass value="$ContextMenuListItem"/>
				<block className="MenuItem">
					<styleClass value="$Fullsize"/>
					<block className="dock_submenu_item" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<styleClass value="$ContextMenuListItemContent"/>
						<bind name="text" value="'IDS_RECALL_INVITATION'"/>
					</block>
				</block>
				<bind name="action" value="'click'; 'revokeInvitationToDivision'; {id: prebattlePlayerId}"/>
			</block>
			<block>
				<bind name="visible" value="(isInPrebattle == true &amp;&amp; 
							(!isInTrainingRoom ||
							(isInTrainingRoom &amp;&amp; isSelfPlayerTrainingRoomOwner &amp;&amp; !isPrebattlePlayerTrainingRoomOwner) ))"/>
				<styleClass value="$ContextMenuListItem"/>
				<block className="MenuItem">
					<styleClass value="$Fullsize"/>
					<block className="dock_submenu_item" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<styleClass value="$ContextMenuListItemContent"/>
						<bind name="text" value="isInTrainingRoom ? 'IDS_EXCLUDE_PLAYER_OUT_OF_TRAINING_ROOM' : 'IDS_EXCLUDE_PLAYER_OUT_OF_DIVISION'"/>
					</block>
				</block>
				<bind name="request" value="'buttonClick'; 'kickPlayerFromDivision'; {	playerId: prebattlePlayerId, name: nickName,
																		subtitle: isInTrainingRoom ? 	'IDS_MODAL_EXCLUDE_PLAYER_OUT_OF_TRAINING_ROOM' : 
																										'IDS_MODAL_EXCLUDE_PLAYER_OUT_OF_DIVISION'
																	}"/>
			</block>
			<block>
				<bind name="visible" value="(isSelfPlayerCommander || (isInTrainingRoom &amp;&amp; isSelfPlayerTeamCommander &amp;&amp; selfTeamId == prebattlePlayerTeamId)) &amp;&amp; 
				!(_isBot) &amp;&amp;
				((isInPrebattle == true &amp;&amp; !trainingRoomEntity) || 
				(trainingRoomEntity &amp;&amp; trainingRoomEntity.trainingRoom.commandersManagement)) &amp;&amp; 
				(prebattlePlayerTeamId != -1) &amp;&amp; !isInvitedToPrebattle &amp;&amp;
				!isPrebattlePlayerTeamCommander"/>
				<styleClass value="$ContextMenuListItem"/>
				<block className="MenuItem">
					<styleClass value="$Fullsize"/>
					<block className="dock_submenu_item" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<styleClass value="$ContextMenuListItemContent"/>
						<bind name="text" value="'IDS_APPOINT_PLAYER_TO_COMMANDER'"/>
					</block>
				</block>
				<bind name="action" value="'buttonClick'; 'changeCommander'; {playerId: prebattlePlayerId, teamId: prebattlePlayerTeamId}"/>
				<bind name="dispatch" value="'buttonClick'; _isTrainingRoom ? '' : 'Tooltip.Close'; null; 2"/>
			</block>
			<block>
				<bind name="visible" value="!(_isBot)"/>
				<style>
					<width value="100%"/>
					<marginTop value="2px"/>
					<marginBottom value="3px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="_playerContext.type == 'inviteToChannel'"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_INVITE_PLAYER_TO_CHANNEL'"/>
				</block>
			</block>
			<bind name="action" value="'click'; 'sendChannelInvite'; {channelId: _playerContext.channelId, inviteDbId: accountDbId}"/>
		</block>
		<block>
			<bind name="visible" value="_playerContext.type == 'inviteToClub'"/>
			<bind name="style" value="'alpha'; (_actionDenyReason == 'no_reason') ? 1 : 0.5"/>
			<bind name="tooltip" value="'SimpleWarningTooltip'; (_actionDenyReason != 'no_reason') ? {_text: _actionDenyReason} : null"/>
			<style>
				<backgroundColor value="0x01000000"/>
			</style>
			<styleClass value="$ContextMenuListItem"/>
			<block>
				<styleClass value="$Fullsize"/>
				<bind name="style" value="'hitTest';  (_actionDenyReason == 'no_reason') ? true : false"/>
				<block className="MenuItem">
					<styleClass value="$Fullsize"/>
					<block className="dock_submenu_item" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<styleClass value="$ContextMenuListItemContent"/>
						<bind name="text" value="'IDS_INVITE_TO_CLUB'"/>
					</block>
				</block>
			</block>
			<bind name="action" value="'click'; (_actionDenyReason == 'no_reason') ? 'inviteUserToClub' : '' ; {clubId: _playerContext.clubId, playerName: pureName, userId: accountDbId}"/>
		</block>
		<block>
			<bind name="visible" value="!(_isBot)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_SEND_MESSAGE'"/>
				</block>
			</block>
			<bind name="action" value="'click'; 'openChannelForPrivateMessages'; {dbId: accountDbId}"/>
		</block>
		<block>
			<bind name="feature" value="19;	''"/>
			<bind name="watch" value="'isInvitedToClubItemVisible';	(feature_19 != 'locked') &amp;&amp;
													(_playerContext.type != 'inviteToChannel') &amp;&amp;
													(_playerContext.type != 'inviteToClub')	&amp;&amp;
													(playersClubs.length &gt; 0)	? true
																				: false"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="instance" value="'InviteToClubContextMenuItem'; isInvitedToClubItemVisible ? {_entityAccountId: _entityAccountId} : null"/>
		</block>
		<block>
			<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInDivision'; 'playersInDivision'"/>
			<bind name="controller" value="lesta.dialogs.controllers.CollectionController; 'playersInvitedToDivision'; 'playersInvitedToDivision'"/>
			<bind name="watch" value="'freePlaces'; (divisionData.maxPlayersInDivision - playersInDivision.length - playersInvitedToDivision.length)"/>
			<bind name="visible" value=" slimClientData.isFull &amp;&amp;
						accountOnline &amp;&amp;
						!(isInFormation) &amp;&amp;
						(dockStateName != 'balancer') &amp;&amp;
						(_playerContext.type != 'inviteToClub') &amp;&amp;
						(_playerContext.type != 'inviteToTrainingRoom') &amp;&amp;
						!isInvitedToPrebattle &amp;&amp;
						(freePlaces &gt; 0) &amp;&amp;
						!(isInTrainingRoom)"/>
			<bind name="style" value="'alpha'; ((sentInvitationData.length == 0) &amp;&amp; (receivedInvitationData.length == 0)) ? 1 : 0.5 "/>
			<bind name="style" value="'hitTest'; ((sentInvitationData.length == 0) &amp;&amp; (receivedInvitationData.length == 0))"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithAction">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_INVITE_IN_DIVISION'"/>
				</block>
				<bind name="action" value="'click'; 'inviteToDivision'; {playerId: accountDbId, playerName: pureName, inviteType: _inviteType}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="	isInTrainingRoom &amp;&amp; (isSelfPlayerCommander || isSelfPlayerTeamCommander) &amp;&amp;
						accountOnline &amp;&amp;
						!(isInFormation) &amp;&amp;
						!isInvitedToPrebattle"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithAction">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_INVITE_IN_TRAINING_ROOM'"/>
				</block>
				<bind name="action" value="'click'; 'TrainingRoomProxy.sendInvite'; {newAccDBID: accountDbId, teamId: _teamId}"/>
			</block>
		</block>
		<bind name="watchDH" value="'groupIdsOfAccount'; ['entityAccount.elementInGroups.evGroupsChanged']; entityAccount.elementInGroups.groupIds"/>
		<block>
			<styleClass value="$ContextMenuListItem"/>
			<bind name="visible" value="((groupIdsOfAccount==null) &amp;&amp; !(isIgnored)) &amp;&amp; !(_isBot)"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_ADD_TO_CONTACTS'"/>
				</block>
			</block>
			<bind name="action" value="'click'; 'addContact'; {dbId: accountDbId}"/>
		</block>
		<block>
			<bind name="visible" value="!(isIgnored) &amp;&amp; ((canAddGroupEntitiesId.length &gt; 0) &amp;&amp; (contactsGroups.length &gt; 1)) &amp;&amp; !(_isBot)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_ADD_TO_GROUP'"/>
				</block>
			</block>
			<block className="button_expand_h" type="native">
				<style>
					<position value="absolute"/>
					<right value="6px"/>
				</style>
				<styleClass value="$MouseDisable"/>
				<styleClass value="$MiddleVAligned"/>
			</block>
			<bind name="tooltip" value="'MoveToGroupContextSubMenu'; {_entityAccountId: _entityAccountId, canAddGroupEntitiesId: canAddGroupEntitiesId, _dropDown: false}; 7"/>
		</block>
		<block>
			<bind name="visible" value="((_currentGroupId != null) &amp;&amp; !(isIgnored)) &amp;&amp; !(_isBot)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithAction">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_REMOVE_FROM_GROUP'"/>
				</block>
				<bind name="action" value="'click'; 'removeContactFromGroup'; {dbId: entityAccount.accountSimple.dbId, fromGroupId: _currentGroupId}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!(_isBot)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="(!isIgnored) ? 'IDS_IGNORE_PLAYER' : 'IDS_NOT_IGNORE_PLAYER'"/>
				</block>
			</block>
			<bind name="action" value="'click'; 'userIgnoreContact'; {dbId: accountDbId, ignore: !(isIgnored)}"/>
		</block>
		<block>
			<bind name="visible" value="((groupIdsOfAccount!=null) &amp;&amp; !(isIgnored)) &amp;&amp; !(_isBot)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItemWithAction">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_REMOVE_FROM_CONTACTS'"/>
				</block>
				<bind name="action" value="'click'; 'removeContact'; {dbId: accountDbId}"/>
			</block>
		</block>
		<block>
			<bind name="primaryEntityDH" value="'selfVoiceChatEntity'; CC.voiceChat; 0"/>
			<bind name="watchDH" value="'selfVoiceChatEnabled'; ['selfVoiceChatEntity.voiceChat.evEnabledChanged']; selfVoiceChatEntity.voiceChat.enabled"/>
			<bind name="instance" value="'VoiceChatContextMenuItem'; ((selfVoiceChatEnabled || isSelf) &amp;&amp; isInFormation) ? {_isSelf: isSelf, _playerName: pureName, _nickName: nickName} : null"/>
		</block>
		<block>
			<bind name="visible" value="	(_playerContext.type == 'clubMembersList') ||
						(_playerContext.type == 'contactsClubMembers') ||
						(_playerContext.type == 'inviteToPartyFromClubMembersList') ||
						((_playerContext.type == 'clubMemberPartyPlayer') &amp;&amp; (!_isWardog)) ||
						(_playerContext.type == 'channelParticipants' &amp;&amp; _playerContext.channelTypeIdent == 'club')"/>
			<style>
				<width value="100%"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<bind name="tooltip" value="'SimpleWarningTooltip'; (dockStateName == 'balancer') ? {_text: tr('IDS_CONTEXT_ACTION_NOT_AVAILABLE_IN_MATCHMAKER')} : null"/>
			<block>
				<bind name="visible" value="!(_isBot)"/>
				<style>
					<width value="100%"/>
					<marginTop value="3px"/>
					<marginBottom value="2px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
			<block>
				<bind name="style" value="'hitTest'; (dockStateName == 'balancer') ? false : true"/>
				<bind name="style" value="'alpha'; (dockStateName == 'balancer') ? 0.5 : 1"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<bind name="visible" value="accountDbId != _playerContext.clubLeaderDbId"/>
					<styleClass value="$ContextMenuListItem"/>
					<style>
						<backgroundColor value="0x01000000"/>
					</style>
					<bind name="tooltip" value="'SimpleWarningTooltip'; isVoteInCurClub ? {_text: tr('IDS_UNABLE_TO_START_VOTE_TILL_CURRENT_NOT_FINISHED')} : null"/>
					<block>
						<styleClass value="$Fullsize"/>
						<bind name="style" value="'hitTest'; !(isVoteInCurClub) ? true : false"/>
						<bind name="style" value="'alpha'; !(isVoteInCurClub) ? 1 : 0.5"/>
						<block className="MenuItemWithAction">
							<styleClass value="$Fullsize"/>
							<block className="dock_submenu_item" type="native">
								<styleClass value="$FullsizeAbsolute"/>
							</block>
							<block type="text">
								<styleClass value="$TextDefault"/>
								<styleClass value="$MiddleVAligned"/>
								<styleClass value="$ContextMenuListItemContent"/>
								<bind name="text" value="'IDS_KICK_PLAYER_FROM_CLUB'"/>
							</block>
							<bind name="action" value="'click'; 'kickClubMember'; {clubId: _playerContext.clubId, accountId: accountDbId, price: 0, playerName: pureName}"/>
						</block>
					</block>
				</block>
				<block>
					<bind name="visible" value="accountDbId == _playerContext.clubLeaderDbId"/>
					<styleClass value="$ContextMenuListItem"/>
					<style>
						<backgroundColor value="0x01000000"/>
					</style>
					<bind name="tooltip" value="'SimpleWarningTooltip';	(clubMembers.length &lt; VoteTypes.MIN_MEMBERS_TO_RIOT) ? {_text: tr('IDS_DEPOSE_CLUB_LEADER_HINT')} :
														isVoteInCurClub 									 ? {_text: tr('IDS_UNABLE_TO_START_VOTE_TILL_CURRENT_NOT_FINISHED')}
																											 : null"/>
					<block>
						<styleClass value="$Fullsize"/>
						<bind name="style" value="'hitTest'; ((clubMembers.length &gt;= VoteTypes.MIN_MEMBERS_TO_RIOT) &amp;&amp; !(isVoteInCurClub)) ? true : false"/>
						<bind name="style" value="'alpha'; ((clubMembers.length &gt;= VoteTypes.MIN_MEMBERS_TO_RIOT) &amp;&amp; !(isVoteInCurClub)) ? 1 : 0.5"/>
						<block className="MenuItemWithAction">
							<styleClass value="$Fullsize"/>
							<block className="dock_submenu_item" type="native">
								<styleClass value="$FullsizeAbsolute"/>
							</block>
							<block type="text">
								<styleClass value="$TextDefault"/>
								<styleClass value="$MiddleVAligned"/>
								<styleClass value="$ContextMenuListItemContent"/>
								<bind name="text" value="'IDS_DEPOSE_CLUB_LEADER'"/>
							</block>
							<bind name="action" value="'click'; 'kickClubLeaderWindow'; {clubEntityId: _playerContext.clubEntityId, clubId: _playerContext.clubId, accountId: accountDbId, playerName: pureName}"/>
						</block>
					</block>
				</block>
				<block>
					<bind name="visible" value="selfPlayerDbId == _playerContext.clubLeaderDbId"/>
					<styleClass value="$ContextMenuListItem"/>
					<block>
						<styleClass value="$Fullsize"/>
						<block className="MenuItemWithAction">
							<styleClass value="$Fullsize"/>
							<block className="dock_submenu_item" type="native">
								<styleClass value="$FullsizeAbsolute"/>
							</block>
							<block type="text">
								<styleClass value="$TextDefault"/>
								<styleClass value="$MiddleVAligned"/>
								<styleClass value="$ContextMenuListItemContent"/>
								<bind name="text" value="'IDS_CHANGE_CLUB_LEADER'"/>
							</block>
							<bind name="action" value="'click'; 'changeClubLeaderWindow'; {clubEntityId: _playerContext.clubEntityId, entityAccountId: _entityAccountId}"/>
						</block>
					</block>
				</block>
			</block>
		</block>
		<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; selfPlayerEntity.clanman.clanId"/>
		<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
		<bind name="watchDH" value="'clanName'; ['clanEntity.clanExtended.evNameChanged']; clanEntity.clanExtended.name"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="firstEntityDH" value="'clanInviteeEntity'; CC.clanInvitee"/>
		<bind name="watchDH" value="'role'; ['selfPlayerEntity.clanman.evRoleChanged']; selfPlayerEntity.clanman.role"/>
		<bind name="watchDH" value="'isFull'; ['clanEntity.clanExtended.evIsFullChanged']; clanEntity.clanExtended.isFull"/>
		<bind name="watch" value="'haveOwnClan'; 			clanEntity != null"/>
		<bind name="watch" value="'canInvite'; 				(role == 'executive_officer' || role == 'recruitment_officer' || role == 'commander')"/>
		<bind name="watch" value="'notInBalancer'; 			(dockStateName != 'balancer')"/>
		<bind name="watch" value="'alreadyInYourClan'; 		(entityAccount.clanman != null) &amp;&amp; (entityAccount.clanman.clanId == selfPlayerEntity.clanman.clanId)"/>
		<bind name="watch" value="'alreadyInAnotherClan'; 	(entityAccount.clanman != null) &amp;&amp; (entityAccount.clanman.clanId != selfPlayerEntity.clanman.clanId)"/>
		<bind name="watch" value="'noFreePlacesInClan'; 		isFull"/>
		<block>
			<bind name="visible" value="(haveOwnClan &amp;&amp; canInvite &amp;&amp; notInBalancer &amp;&amp; !alreadyInYourClan &amp;&amp; !_isBot)"/>
			<bind name="action" value="'click'; 'ClanProxy.sendInvite'; { playerDBID: accountDbId }"/>
			<bind name="style" value="'alpha'; (alreadyInAnotherClan || noFreePlacesInClan) ? 0.5 : 1"/>
			<bind name="tooltip" value="'SimpleWarningTooltip'; (alreadyInAnotherClan || noFreePlacesInClan) ? { _text: 	noFreePlacesInClan 		? 'IDS_CLAN_INVITATION_DENY_REASON_CLAN_IS_FULL':
																										alreadyInAnotherClan 	? 'IDS_CLAN_INVITATION_DENY_REASON_PLAYER_ALREADY_IN_CLAN'
																																: ''}
																							: null"/>
			<style>
				<width value="100%"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<styleClass value="$ContextMenuListItem"/>
			<block>
				<styleClass value="$Fullsize"/>
				<bind name="style" value="'hitTest'; (alreadyInAnotherClan || noFreePlacesInClan) ? false : true"/>
				<block className="MenuItem">
					<styleClass value="$Fullsize"/>
					<block className="dock_submenu_item" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<styleClass value="$ContextMenuListItemContent"/>
						<bind name="text" value="'IDS_INVITATION_TO_CLAN'"/>
					</block>
				</block>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
		<block>
			<bind name="visible" value="realmConstants.showProfileInBrowser &amp;&amp; (dockStateName != 'balancer') &amp;&amp; !(_isBot)"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_PROFILE'"/>
				</block>
			</block>
			<bind name="request" value="'click'; 'showPlayerStats'; { playerId: accountDbId + '',  url: 'playerStats' }"/>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'realmConstants'"/>
	</block>
	<block className="VoiceChatContextMenuItem">
		<bind name="primaryEntityDH" value="'playerVoiceChatEntity'; CC.playerVoiceState; _playerName"/>
		<bind name="watch" value="'playerVoiceChatIsEnabled'; (playerVoiceChatEntity != null)"/>
		<bind name="watchDH" value="'playerVoiceChatIsMuted'; ['playerVoiceChatEntity.playerVoiceState.evIsMutedChanged']; playerVoiceChatEntity.playerVoiceState.isMuted"/>
		<bind name="watch" value="'voiceChatMenuText'; 	!(playerVoiceChatIsEnabled) ? 'IDS_PLAYER_IS_NOT_AVAILABLE_IN_VOICE_CHAT' :
										playerVoiceChatIsMuted		? 'IDS_UNMUTE_PLAYER_VOICE_CHAT'
																	: 'IDS_MUTE_PLAYER_VOICE_CHAT'"/>
		<bind name="watch" value="'state'; 	!(playerVoiceChatIsEnabled)	? 'disabled' :
							playerVoiceChatIsMuted		? 'muted'
														: 'speak'"/>
		<bind name="style" value="'alpha'; !(playerVoiceChatIsEnabled)	? 0.9 : 1"/>
		<bind name="style" value="'hitTest'; !(playerVoiceChatIsEnabled)	? false : true"/>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<params>
				<param name="soundSet" value="dropmenu_button"/>
			</params>
			<bind name="action" value="'buttonClick'; 'toggleVoice'; {playerName: _playerName, nickName: _nickname}"/>
		</block>
		<block>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$ContextMenuListItemContent"/>
			<block className="icon_voice_chat_small" type="native">
				<style>
					<marginTop value="6px"/>
					<marginRight value="4px"/>
				</style>
				<bind name="gotoAndStop!" value="state"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="	!(playerVoiceChatIsEnabled)	? '$FontColorUnready' :
							playerVoiceChatIsMuted		? '$FontColorUnready'
														: '$FontColorWhite'"/>
				<style>
					<width value="100%"/>
					<marginBottom value="3px"/>
					<hitTest value="false"/>
					<leading value="-3"/>
				</style>
				<bind name="text" value="voiceChatMenuText"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="MoveToGroupContextSubMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'MenuTooltipBackground'; { _isInBattle: _isInBattle }"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="canAddGroupEntitiesId; 'MoveToGroupContextMenuItem'; {_entityAccountId: _entityAccountId, _currentGroupId: _currentGroupId}"/>
		</block>
	</block>
	<block className="MoveToGroupContextMenuItem">
		<bind name="entityDH" value="'entityAccount'; _entityAccountId"/>
		<bind name="dataRefDH" value="'accountDbId'; 'entityAccount.accountSimple.dbId'"/>
		<bind name="entityDH" value="'group'; $value"/>
		<bind name="visible" value="(group.groupOfElements.groupId != 1)"/>
		<styleClass value="$ContextMenuListItem"/>
		<block>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="group.groupOfElements.name"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<bind name="action" value="'click'; 'addContactToGroupGroup'; {dbId: accountDbId, toGroupId: group.groupOfElements.groupId, fromGroupId: _currentGroupId}"/>
	</block>
	<block className="InviteToClubContextMenuItem">
		<bind name="firstEntityDH" value="'dockStateEntity'; CC.dockState"/>
		<bind name="watchDH" value="'dockStateName'; ['dockStateEntity.dockState.evUpdate']; dockStateEntity.dockState.stateName"/>
		<bind name="style" value="'alpha'; (dockStateName == 'balancer') ? 0.5 : 1"/>
		<bind name="tooltip" value="'SimpleWarningTooltip'; (dockStateName == 'balancer') ? {_text: tr('IDS_CONTEXT_ACTION_NOT_AVAILABLE_IN_MATCHMAKER')} : null"/>
		<styleClass value="$ContextMenuListItem"/>
		<style>
			<backgroundColor value="0x01000000"/>
		</style>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="style" value="'hitTest';	(dockStateName == 'balancer') ? false : true"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="'IDS_INVITE_TO_CLUB'"/>
				</block>
			</block>
			<block className="button_expand_h" type="native">
				<bind name="visible" value="(dockStateName == 'balancer') ? false : true"/>
				<style>
					<position value="absolute"/>
					<right value="6px"/>
				</style>
				<styleClass value="$MouseDisable"/>
				<styleClass value="$MiddleVAligned"/>
			</block>
			<bind name="tooltip" value="'InviteToClubContextSubMenu'; {_entityAccountId: _entityAccountId, _dropDown: (_dropDown ? _dropDown : false)}; 7"/>
		</block>
	</block>
	<block className="InviteToClubContextSubMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<bind name="collectionDH" value="CC.club; 'clubs'"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block className="MenuBg">
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<bind name="visible" value="optionData.contrast &amp;&amp; !(_dropDown)"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="!(_dropDown)"/>
				<block className="hint_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="_dropDown"/>
				<block className="dock_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginBottom value="-19px"/>
						<marginRight value="-14px"/>
						<marginLeft value="-14px"/>
						<marginTop value="-9px"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="repeat" value="clubs; 'InviteToClubContextSubMenuItem'; {_entityAccountId: _entityAccountId}"/>
		</block>
	</block>
	<block className="InviteToClubContextSubMenuItem">
		<bind name="collectionDH" value="CC.clubsCommon; 'clubsCommonCollection'"/>
		<bind name="entityDH" value="'clubsCommonEntity'; clubsCommonCollection[0].id"/>
		<bind name="dataRefDH" value="'maxClubsCapacity'; 'clubsCommonEntity.clubsCommon.maxClubsCapacity'"/>
		<bind name="watchDH" value="'clubsVoted'; ['clubsCommonEntity.clubsCommon.evClubsVotedChanged']; clubsCommonEntity.clubsCommon.clubsVoted"/>
		<bind name="dataRefDH" value="'entityClub'; '$dataRef.ref'"/>
		<bind name="watchDH" value="'clubName';['entityClub.club.evNameChanged']; entityClub.club.name"/>
		<bind name="watchDH" value="'leaderDbId';['entityClub.club.evleaderIdChanged']; entityClub.club.leaderId"/>
		<bind name="watchDH" value="'clubMembers'; ['entityClub.club.evMembersChanged']; entityClub.club.members"/>
		<bind name="watchDH" value="'invitedPlayers'; ['entityClub.club.evInvitedClubmansChanged']; entityClub.club.invitedClubmans"/>
		<bind name="entityDH" value="'entityAccount'; _entityAccountId"/>
		<bind name="dataRefDH" value="'accountDbId'; 'entityAccount.accountSimple.dbId'"/>
		<bind name="watchDH" value="'accountLevel'; ['entityAccount.accountLevel.evLevelChanged']; entityAccount.accountLevel.level"/>
		<bind name="contains" value="clubMembers; ($item == _entityAccountId); 'isClubMember'"/>
		<bind name="contains" value="invitedPlayers; ($item.accountEntityId == _entityAccountId); 'isInvitedToClub'"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="levelToFeature" value="accountLevel; 19; 'clubBattleFeatureUnLocked'"/>
		<bind name="watch" value="'isVoteInCurClub';	(clubsVoted[0] == entityClub.club.id) ||
									(clubsVoted[1] == entityClub.club.id) ||
									(clubsVoted[2] == entityClub.club.id) ? true : false"/>
		<bind name="watch" value="'inviteToClubDenyReason';	(isVoteInCurClub &amp;&amp; (selfPlayerDbId != leaderDbId)) ? tr('IDS_UNABLE_TO_START_VOTE_TILL_CURRENT_NOT_FINISHED') :
											(maxClubsCapacity &lt;= (clubMembers.length + invitedPlayers.length)) ? tr('IDS_INVITE_TO_CLUB_ACTION_DENY_REASON_NO_FREE_PLACE') :
											!(clubBattleFeatureUnLocked)	? tr('IDS_INVITE_TO_CLUB_ACTION_DENY_REASON_LOW_LEVEL') :
											isClubMember					? tr('IDS_INVITE_TO_CLUB_ACTION_DENY_REASON_ALREADY_IN_CLUB') :
											isInvitedToClub					? tr('IDS_INVITE_TO_CLUB_ACTION_DENY_REASON_ALREADY_INVITED')
																			: 'no_reason'"/>
		<styleClass value="$ContextMenuListItem"/>
		<bind name="style" value="'alpha'; (inviteToClubDenyReason == 'no_reason') ? 1 : 0.5"/>
		<style>
			<backgroundColor value="0x01000000"/>
		</style>
		<block>
			<bind name="style" value="'hitTest'; (inviteToClubDenyReason == 'no_reason')"/>
			<styleClass value="$ContextMenuListItem"/>
			<block className="MenuItem">
				<styleClass value="$Fullsize"/>
				<block className="dock_submenu_item" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$ContextMenuListItemContent"/>
					<bind name="text" value="clubName"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<bind name="tooltip" value="'SimpleWarningTooltip'; (inviteToClubDenyReason != 'no_reason') ? {_text: inviteToClubDenyReason} : null"/>
		<bind name="action" value="'click'; (inviteToClubDenyReason == 'no_reason') ? 'inviteUserToClub' : '' ; {clubId: entityClub.club.id, playerName: entityAccount.accountName.name, userId: accountDbId}"/>
	</block>
	<block className="VoiceChatDockIcon">
		<bind name="primaryEntityDH" value="'selfVoiceChatEntity'; CC.voiceChat; 0"/>
		<bind name="watchDH" value="'selfVoiceChatEnabled'; ['selfVoiceChatEntity.voiceChat.evEnabledChanged']; selfVoiceChatEntity.voiceChat.enabled"/>
		<bind name="primaryEntityDH" value="'playerVoiceChatEntity'; CC.playerVoiceState; _playerName"/>
		<bind name="watchDH" value="'playerVoiceChatIsMuted'; ['playerVoiceChatEntity.playerVoiceState.evIsMutedChanged']; playerVoiceChatEntity.playerVoiceState.isMuted"/>
		<bind name="watchDH" value="'playerVoiceChatIsSpeaking'; ['playerVoiceChatEntity.playerVoiceState.evIsSpeakingChanged']; playerVoiceChatEntity.playerVoiceState.isSpeaking"/>
		<bind name="watch" value="'playerVoiceChatIsEnabled'; playerVoiceChatEntity != null"/>
		<bind name="watch" value="'isChatEnabled'; _isSelf	? selfVoiceChatEnabled
											: (selfVoiceChatEnabled ? playerVoiceChatIsEnabled : true))"/>
		<bind name="watch" value="'state';	!(isChatEnabled)			? 'disabled' :
							playerVoiceChatIsMuted		? 'muted' :
							playerVoiceChatIsSpeaking	? 'speak'
														: null"/>
		<bind name="transition" value="state; 0.1; {alpha: 0}; {alpha: 1}; {alpha: 0}; 1"/>
		<block className="icon_voice_chat_small" type="native">
			<bind name="gotoAndStop!" value="state"/>
		</block>
	</block>
	<block className="MenuTooltipBackground">
		<styleClass value="$FullsizeAbsolute"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'DeclareBlurLayer'; _isInBattle ?  null : {}"/>
			<bind name="instance" value="'BlurMap'; _isInBattle ? null : {}"/>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="(optionData.contrast == true || _isInBattle == true)"/>
			<style>
				<marginTop value="-2px"/>
				<marginBottom value="-2px"/>
			</style>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="!(_isInBattle)"/>
			<style>
				<marginTop value="-1px"/>
				<marginBottom value="-1px"/>
			</style>
			<block className="hint_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
	</block>
	<css name="$MarginsBig">
		<marginBottom value="16"/>
		<marginTop value="16"/>
		<marginLeft value="16"/>
		<marginRight value="16"/>
	</css>
	<css name="$MarginsMedium">
		<marginBottom value="16"/>
		<marginTop value="16"/>
		<marginLeft value="16"/>
		<marginRight value="16"/>
	</css>
	<css name="$FontColorAvA">
		<textColor value="0xded5c6"/>
	</css>
	<block className="ArcEventTeamPresentationLogo">
		<style>
			<width value="150px"/>
			<height value="150px"/>
			<backgroundSize value="cover"/>
		</style>
		<bind name="style" value="'backgroundImage'; _side == 0 	? 'url:../events/american_event/team_logo/american_event_icon_sharks_own.png'
												: 'url:../events/american_event/team_logo/american_event_icon_eagles_own.png'"/>
	</block>
	<block className="ArcEventTeamPresentationHeaderSmall">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<bind name="firstEntityDH" value="'arcEventEntity'; CC.arcEvent"/>
		<bind name="watchDH" value="'sides';[]; arcEventEntity.arcEvent.sides"/>
		<bind name="watchDH" value="'sideId';['arcEventEntity.playerArcEventInfo.evSideChanged']; arcEventEntity.playerArcEventInfo.sideId"/>
		<bind name="primaryEntityDH" value="'arcEventSideEntity'; CC.arcEventSide; sides[_side]"/>
		<bind name="watchDH" value="'sideDailyProgress';['arcEventSideEntity.arcEventSide.evProgressChanged']; arcEventSideEntity.arcEventSide.sideDailyProgress"/>
		<bind name="catch" value="'resetDailyProgress'; {sideDailyProgressTrans: 0}"/>
		<bind name="dispatchDelayReset" value="'sideDailyProgress'+varChanged; 'startSideTransition'; {}; 2; 0.05"/>
		<bind name="dispatchDelayReset" value="'resetDailyProgress'; 'startSideTransition'; {}; 2; 0.05"/>
		<bind name="catch" value="'startSideTransition'; {sideDailyProgressTrans: sideDailyProgress}"/>
		<block>
			<style>
				<width value="150px"/>
				<height value="150px"/>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; (_side == 0) 	? 	(_side == sideId)	? 'url:../events/american_event/team_logo/american_event_icon_sharks_own.png'
																				: 'url:../events/american_event/team_logo/american_event_icon_sharks.png':
										(_side == 1) 	? 	(_side == sideId) 	? 	_isInStat 	? 'url:../events/american_event/team_logo/american_event_icon_eagles_own.png'
																								: 'url:../events/american_event/team_logo/american_event_icon_eagles_own2.png'
																				:   _isInStat 	? 'url:../events/american_event/team_logo/american_event_icon_eagles.png'
																								: 'url:../events/american_event/team_logo/american_event_icon_eagles2.png'
														: ''"/>
		</block>
		<block type="text">
			<style>
				<width value="100%"/>
				<textAlign value="center"/>
			</style>
			<styleClass value="$TextDefaultBold30NM"/>
			<bind name="transition" value="sideDailyProgressTrans; (sideDailyProgressTrans &gt; 0) ? 0.5 : 0; {intValue: 0}; {intValue: sideDailyProgressTrans}; {intValue: 0}; 3; (sideDailyProgressTrans &gt; 0) ? 0.2 : 0"/>
			<bind name="class" value="(_side == sideId) ? '$FontColorGolden' : '$FontColorAvA'"/>
		</block>
	</block>
	<block className="ArcEventPresentationHeaderBig">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="stageSize"/>
		<bind name="watch" value="'smallResolution';	(stageWidth &lt;= 1300) || (stageHeight &lt; 960)"/>
		<bind name="style" value="'width'; smallResolution ? '283px' : '424px'"/>
		<bind name="style" value="'height'; smallResolution ? '400px' : '600px'"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<backgroundSize value="cover"/>
			</style>
			<bind name="style" value="'backgroundImage'; (_side == 0)	? 'url:../events/american_event/recruiter/sharks.png'
														: 'url:../events/american_event/recruiter/eagles.png'"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="fade" value="rollOver; 0.1; {alpha: 0}; {alpha: 0.2}; {alpha: 0}"/>
			<style>
				<backgroundSize value="cover"/>
				<position value="absolute"/>
				<backgroundColor value="0xffffffff"/>
			</style>
		</block>
	</block>
	<block className="ArcEventLoyaltyInfoTooltip">
		<bind name="firstEntityDH" value="'arcEventConfigEntity'; CC.arcEventConfig"/>
		<bind name="watchDH" value="'endDayLoyalty';[]; arcEventConfigEntity.arcEventConfig.endDayLoyalty"/>
		<bind name="watchDH" value="'staySideLoyalty';[]; arcEventConfigEntity.arcEventConfig.staySideLoyalty"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="360px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$MarginsBig"/>
			<block type="text">
				<styleClass value="$TextDefaultBold19NM"/>
				<bind name="text" value="'IDS_ARC_EVENT_TEAM_LOYALTY'"/>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="watch" value="'loyaltyParams'; [	{ attributeIDS: 'IDS_ARC_EVENT_END_DAY_RESTRICTION', measuredValue: ('+' + endDayLoyalty),   category: 'positive' },
										{ attributeIDS: 'IDS_ARC_EVENT_LOYALTY_RESTRICTION', measuredValue: ('+' + staySideLoyalty), category: 'positive' }]"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginLeft value="16"/>
					<marginRight value="16"/>
					<marginTop value="16"/>
				</style>
				<bind name="instance" value="'ParamsModifierList'; { _attributesPositive: loyaltyParams }"/>
			</block>
		</block>
	</block>
	<block className="ArcEventLoyaltyRewardTooltip">
		<bind name="primaryEntityDH" value="'arcProgressWithRewardsEntity'; CC.progressWithRewards; ('loyalty_' + _side)"/>
		<bind name="watchDH" value="'pointsArray';['arcProgressWithRewardsEntity.progressWithRewards.evChanged']; arcProgressWithRewardsEntity.progressWithRewards.pointsArray"/>
		<bind name="watchDH" value="'pointsCurrent';['arcProgressWithRewardsEntity.progressWithRewards.evChanged']; arcProgressWithRewardsEntity.progressWithRewards.pointsCurrent"/>
		<bind name="watchDH" value="'rewards';['arcProgressWithRewardsEntity.progressWithRewards.evChanged']; arcProgressWithRewardsEntity.progressWithRewards.rewards"/>
		<bind name="watchDH" value="'activeIndex';['arcProgressWithRewardsEntity.progressWithRewards.evChanged']; arcProgressWithRewardsEntity.progressWithRewards.activeIndex"/>
		<bind name="watch" value="'isFull'; (pointsCurrent &gt;= pointsArray[_index])"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="360px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$MarginsBig"/>
			<block>
				<bind name="instance" value="'GiftBoxIconSmall'; { _issued: isFull }"/>
			</block>
			<block type="text">
				<style>
					<width value="260px"/>
					<marginLeft value="16"/>
					<marginTop value="2"/>
				</style>
				<styleClass value="$TextDefault17NM"/>
				<bind name="text" value="'IDS_ARC_EVENT_REWARD_FOR_LOYALTY_DESCRIPTION_TOOLTIP'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="isFull == true"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MarginsBig"/>
				<block className="icon_check" type="native">
					<styleClass value="$MiddleVAligned"/>
				</block>
				<block type="text">
					<style>
						<marginLeft value="8"/>
					</style>
					<styleClass value="$TextDefault17NM"/>
					<bind name="class" value="'$FontColorGolden'"/>
					<bind name="text" value="'IDS_ARC_EVENT_LOYALTY_REWARD_REACHED'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="isFull != true"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$MarginsBig"/>
				<styleClass value="$TextDefault17NM"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="text" value="((_index == activeIndex) &amp;&amp; (pointsCurrent &gt; 0))	? subst('IDS_ARC_EVENT_LOYALTY_LEFT', [], {loyalty: (pointsArray[_index] - pointsCurrent)})
																			: subst('IDS_ARC_EVENT_LOYALTY_COST', [], {loyalty: (pointsArray[_index] - pointsCurrent)})"/>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$MarginsBig"/>
			<bind name="repeat" value="rewards[_index]; 'RewardContainerTooltipItemAdapter'"/>
		</block>
	</block>
	<block className="ArcEventPersonalDailyProgressTooltip">
		<bind name="firstEntityDH" value="'arcEventEntity'; CC.arcEvent"/>
		<bind name="watchDH" value="'sides';[]; arcEventEntity.arcEvent.sides"/>
		<bind name="watchDH" value="'sideId';['arcEventEntity.playerArcEventInfo.evSideChanged']; arcEventEntity.playerArcEventInfo.sideId"/>
		<bind name="primaryEntityDH" value="'arcProgressWithRewardsEntity'; CC.progressWithRewards; 'progress'"/>
		<bind name="watchDH" value="'pointsArray';['arcProgressWithRewardsEntity.progressWithRewards.evChanged']; arcProgressWithRewardsEntity.progressWithRewards.pointsArray"/>
		<bind name="watchDH" value="'pointsCurrent';['arcProgressWithRewardsEntity.progressWithRewards.evChanged']; arcProgressWithRewardsEntity.progressWithRewards.pointsCurrent"/>
		<bind name="watchDH" value="'activeIndex';['arcProgressWithRewardsEntity.progressWithRewards.evChanged']; arcProgressWithRewardsEntity.progressWithRewards.activeIndex"/>
		<bind name="watch" value="'isFull'; pointsCurrent &gt;= pointsArray[_index]"/>
		<bind name="watch" value="'isEmpty'; pointsCurrent &lt;= pointsArray[_index - 1]"/>
		<bind name="watch" value="'commonPoints'; (isFull == false) &amp;&amp; (isEmpty == false) ? pointsArray[_index] - pointsCurrent : pointsArray[_index]"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="360px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<marginLeft value="16"/>
			</style>
			<block>
				<style>
					<width value="80px"/>
					<height value="80px"/>
					<backgroundSize value="cover"/>
				</style>
				<bind name="style" value="'backgroundImage'; sideId == sides[0] 	? 'url:../reward_icons/icon_reward_lootbox_31.png'
																: 'url:../reward_icons/icon_reward_lootbox_32.png'"/>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<marginLeft value="16"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultBold19NM"/>
					<bind name="class" value="(isFull == true) ? '$FontColorGolden' : '$FontColorWhite'"/>
					<bind name="text" value="'IDS_AVA_REWARD_LOOTBOX'"/>
				</block>
				<block type="text">
					<style>
						<marginTop value="8"/>
					</style>
					<styleClass value="$TextDefaultNM"/>
					<bind name="text" value="sideId == sides[0] ? 'IDS_AVA_LOOTBOX_SHARKS' : 'IDS_AVA_LOOTBOX_EAGLES'"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="isFull == true"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MarginsBig"/>
				<block className="icon_check" type="native">
					<styleClass value="$MiddleVAligned"/>
				</block>
				<block type="text">
					<style>
						<marginLeft value="8"/>
					</style>
					<styleClass value="$TextDefault17NM"/>
					<bind name="class" value="'$FontColorGolden'"/>
					<bind name="text" value="'IDS_ARC_EVENT_LOYALTY_REWARD_REACHED'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="isFull != true"/>
			<style>
				<width value="100%"/>
			</style>
			<bind name="watch" value="'pointsToReach'; (pointsArray[_index] - pointsCurrent)"/>
			<styleClass value="$MarginsBig"/>
			<block type="text">
				<styleClass value="$TextDefault17NM"/>
				<bind name="text" value="((_index == activeIndex) &amp;&amp; (pointsCurrent &gt; 0))	? subst('IDS_ARC_EVENT_POINTS_LEFT', [], {points: pointsToReach}, pointsToReach)
																			: subst('IDS_ARC_EVENT_POINTS_COST', [], {points: pointsToReach}, pointsToReach)"/>
			</block>
		</block>
	</block>
	<block className="ArcEventTeamPresentationTooltip">
		<bind name="firstEntityDH" value="'playerArcEventInfoEntity'; CC.playerArcEventInfo"/>
		<bind name="watchDH" value="'hasLoyalty'; ['playerArcEventInfoEntity.playerArcEventInfo.evHasLoyaltyChanged']; playerArcEventInfoEntity.playerArcEventInfo.hasLoyalty"/>
		<bind name="firstEntityDH" value="'arcEventEntity'; CC.arcEvent"/>
		<bind name="watchDH" value="'sideId';['arcEventEntity.playerArcEventInfo.evSideChanged']; arcEventEntity.playerArcEventInfo.sideId"/>
		<bind name="watchDH" value="'sides';[]; arcEventEntity.arcEvent.sides"/>
		<bind name="watchDH" value="'yesterdayWinnerSideId'; ['arcEventEntity.arcEvent.evChanged']; arcEventEntity.arcEvent.yesterdayWinnerSideId"/>
		<bind name="watchDH" value="'arcEventStartTime'; ['']; arcEventEntity.arcEvent.startTime"/>
		<bind name="watchDH" value="'arcEventCurrentStageAt'; ['arcEventEntity.arcEvent.evChanged']; arcEventEntity.arcEvent.currentStageAt"/>
		<bind name="watch" value="'arcEventCurrentDay'; ((arcEventCurrentStageAt-arcEventStartTime)/86400) + 1"/>
		<bind name="primaryEntityDH" value="'arcEventSideEntity'; CC.arcEventSide; sides[_side]"/>
		<bind name="watchDH" value="'sideDailyProgress';['arcEventSideEntity.arcEventSide.evProgressChanged']; arcEventSideEntity.arcEventSide.sideDailyProgress"/>
		<bind name="watchDH" value="'sideModifierPerc';['arcEventSideEntity.arcEventSide.evModifierChanged']; arcEventSideEntity.arcEventSide.sideModifierPerc"/>
		<bind name="primaryEntityDH" value="'arcProgressWithRewardsEntity'; CC.progressWithRewards; ('loyalty_' + _side)"/>
		<bind name="watchDH" value="'pointsCurrent';['arcProgressWithRewardsEntity.progressWithRewards.evChanged']; arcProgressWithRewardsEntity.progressWithRewards.pointsCurrent"/>
		<bind name="watchDH" value="'pointsArray';['arcProgressWithRewardsEntity.progressWithRewards.evChanged']; arcProgressWithRewardsEntity.progressWithRewards.pointsArray"/>
		<bind name="watchDH" value="'activeIndex';['arcProgressWithRewardsEntity.progressWithRewards.evChanged']; arcProgressWithRewardsEntity.progressWithRewards.activeIndex"/>
		<bind name="watch" value="'rowArrayLoyalty';   [ { 	title: 'IDS_ARC_EVENT_TEAM_LOYALTY',
											playerPointsCounter: pointsCurrent, 
											totalPointsCounter: pointsArray[pointsArray.length - 1]}]"/>
		<bind name="watch" value="'headerBackgroundImage'; _side == 0 	? _side == sideId 	? 'url:../events/american_event/team_logo/american_event_icon_sharks_own_small.png'
																			: 'url:../events/american_event/team_logo/american_event_icon_sharks_small.png'
														: _side == sideId 	? _isInTeamPresentation == true ? 'url:../events/american_event/team_logo/american_event_icon_eagles_own2_small.png'
																											: 'url:../events/american_event/team_logo/american_event_icon_eagles_own_small.png'
																			: _isInTeamPresentation == true ? 'url:../events/american_event/team_logo/american_event_icon_eagles2_small.png'
																											: 'url:../events/american_event/team_logo/american_event_icon_eagles_small.png'"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="360px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<styleClass value="$MarginsMedium"/>
			<block>
				<style>
					<backgroundSize value="cover"/>
					<width value="80px"/>
					<height value="80px"/>
				</style>
				<bind name="style" value="'backgroundImage'; headerBackgroundImage"/>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="100%"/>
					<marginLeft value="16"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultBold19NM"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="class" value="(_side == sideId) ? '$FontColorGolden' : '$FontColorWhite'"/>
					<bind name="text" value="tr('IDS_ARC_EVENT_SIDE_' + _side)"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultNM"/>
					<style>
						<width value="100%"/>
						<marginTop value="8"/>
					</style>
					<bind name="text" value="tr('IDS_ARC_EVENT_TEAM_' + _side)"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="(arcEventCurrentDay != 1) &amp;&amp; (yesterdayWinnerSideId == _side) &amp;&amp; _isPromo == true"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MarginsBig"/>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<style>
						<width value="100%"/>
					</style>
					<styleClass value="$TextDefault17NM"/>
					<bind name="text" value="'IDS_EVENT_PAST_PERIOD_WINNERS'"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(hasLoyalty == true)"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MarginsBig"/>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<style>
						<width value="300px"/>
					</style>
					<styleClass value="$TextDefault17NM"/>
					<bind name="text" value="'IDS_ARC_EVENT_SIDE_DAILY_PROGRESS'"/>
				</block>
				<block type="text">
					<style>
						<position value="absolute"/>
						<right value="0px"/>
					</style>
					<styleClass value="$TextDefaultBold17NM"/>
					<bind name="text" value="format(sideDailyProgress)"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="sideModifierPerc &gt; 0"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="inner_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$MarginsBig"/>
				<style>
					<width value="100%"/>
				</style>
				<block type="text">
					<style>
						<width value="280px"/>
					</style>
					<styleClass value="$TextDefaultNM"/>
					<bind name="text" value="'IDS_ARC_EVENT_SIDE_DAILY_COEFFICIENT'"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultBoldNM"/>
					<style>
						<position value="absolute"/>
						<right value="0px"/>
					</style>
					<bind name="class" value="'$FontColorComparePositive'"/>
					<bind name="text" value="'+' + sideModifierPerc + '%'"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="3px"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(hasLoyalty == true)"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MarginsBig"/>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
						<marginTop value="-3px"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
							<marginLeft value="-2px"/>
						</style>
						<bind name="repeat" value="rowArrayLoyalty; 'StatRow'; {}"/>
					</block>
					<block>
						<style>
							<width value="100%"/>
							<marginTop value="-6px"/>
						</style>
						<bind name="style" value="'colorMatrixFilter'; (sideId == _side) ? '0 0 0 0' : '0 -100 0 0'"/>
						<bind name="repeat" value="pointsArray; 'StepProgressBar'; { _width: '65px', _side: _side, _showYellowBar: _side == sideId, 
																	_currValue: pointsCurrent, _arrayValues: pointsArray, _activeIndex: activeIndex }"/>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$MarginsBig"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$TextDefault17NM"/>
				<bind name="text" value="('IDS_ARC_EVENT_SIDE_' + _side + '_DESCRIPTION' + (_isPromo ? '_PROMO' : ''))"/>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!_hideInstuction == true"/>
			<styleClass value="$MarginsMedium"/>
			<bind name="instance" value="'MouseInstruction'; {_type: 'left', _instructionText: 'IDS_ARC_EVENT_CHOOSE_SIDE', _maxWidth: 260}"/>
		</block>
	</block>
	<block className="ArcEventTeamCurrencyTooltip">
		<bind name="firstEntityDH" value="'arcEventEntity'; CC.arcEvent"/>
		<bind name="watchDH" value="'sideId';['arcEventEntity.playerArcEventInfo.evSideChanged']; arcEventEntity.playerArcEventInfo.sideId"/>
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="360px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<styleClass value="$MarginsMedium"/>
			<block>
				<style>
					<backgroundSize value="cover"/>
					<width value="80px"/>
					<height value="80px"/>
				</style>
				<bind name="style" value="'backgroundImage'; _side == 0 	? 'url:../reward_icons/icon_reward_sharks.png'
														: 'url:../reward_icons/icon_reward_eagles.png'"/>
			</block>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<style>
					<width value="100%"/>
					<marginLeft value="16"/>
				</style>
				<block type="text">
					<styleClass value="$TextDefaultBold19NM"/>
					<style>
						<width value="100%"/>
					</style>
					<bind name="class" value="(_side == sideId) ? '$FontColorGolden' : '$FontColorWhite'"/>
					<bind name="text" value="tr('IDS_PERSONAL_TEAM_CURRENCY_' + _side)"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefaultNM"/>
					<style>
						<width value="100%"/>
						<marginTop value="8"/>
					</style>
					<bind name="text" value="tr('IDS_PERSONAL_TEAM_CURRENCY_DESCR')"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<styleClass value="$MarginsBig"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
				</style>
				<styleClass value="$TextDefault17NM"/>
				<bind name="text" value="'IDS_PERSONAL_TEAM_CURRENCY_TEXT'"/>
			</block>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<styleClass value="$MarginsBig"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="icon_warning_orange" type="native">
				<style>
					<marginTop value="-2px"/>
					<marginRight value="6px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextDefaultNM"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="text" value="'IDS_PERSONAL_TEAM_CURRENCY_WARNING'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="PlayerDogTag">
		<bind name="primaryEntityDH" value="'playerEntity'; CC.accountSimple; _playerDbId"/>
		<bind name="watchDH" value="'dogTagList';['playerEntity.dogTagView.evComponentsChanged']; playerEntity.dogTagView.components"/>
		<bind name="name" value="'playerDogTag'"/>
		<bind name="collectionDH" value="CC.dogTagComponent; 'dogtagview'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'dogtagview'+'ROOT'; 'dogtagview'; {'filter': dogTagList.length &amp;&amp; ((dogTagList.indexOf(toLowerCase($entity.dogTagComponent.id)) &gt; -1)), 'sort':['dogTagComponent.categoryId']}; []"/>
		<bind name="watch" value="'size';	_size == 'big' 				? 512 : 
							_size == 'medium' 			? 190 : 
							_size == 'profile' 			? 120 :
							_size == 'small' 			? 80 
														: 80"/>
		<bind name="style" value="'width'; size + 'px'"/>
		<bind name="style" value="'height'; size + 'px'"/>
		<bind name="repeat" value="dogtagview; 'PlayerDogTagItem'; {_path: _size == 'small' 		? 'url:../dogTags/small/'  :
														  _size == 'profile' 	? 'url:../dogTags/medium/' :
														  _size == 'medium' 	? 'url:../dogTags/medium/' :
														  _size == 'big' 		? 'url:../dogTags/big/'
														  						: 'url:../dogTags/big/'
														  						, _playerDbId : _playerDbId,
													_clanTagPaths: _size == 'small' 	? '../fonts/small/'  :
																   _size == 'profile' 	? '../fonts/medium/' :
																   _size == 'medium' 	? '../fonts/medium/' :
																   _size == 'big' 		? '../fonts/big/'
																				: '../fonts/big/'
																				, _size: size}"/>
	</block>
	<block className="PlayerDogTagItem">
		<bind name="entityDH" value="'dogTagEntity'; id"/>
		<bind name="watchDH" value="'iconPath'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.iconPath"/>
		<bind name="primaryEntityDH" value="'playerEntity'; CC.accountSimple; _playerDbId"/>
		<bind name="watchDH" value="'clanId'; ['playerEntity.clanman.evClanIdChanged']; playerEntity.clanman.clanId"/>
		<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
		<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
		<bind name="watchDH" value="'clanTagOffsetX';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagOffsetX"/>
		<bind name="watchDH" value="'clanTagOffsetY';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagOffsetY"/>
		<bind name="watchDH" value="'clanTagFont';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagFont"/>
		<bind name="watchDH" value="'clanTagVisible';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagVisible"/>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="style" value="'top'; clanTagOffsetY + '%'"/>
			<bind name="style" value="'left'; clanTagOffsetX + '%'"/>
			<block>
				<style>
					<position value="absolute"/>
					<marginLeft value="-50%"/>
					<marginTop value="-50%"/>
				</style>
				<bind name="visible" value="clanTagVisible"/>
				<bind name="atlasText" value="clanTagVisible ?  (clanTag ? '[' + clanTag + ']' : '^') : '' ; _clanTagPaths + clanTagFont; 0"/>
			</block>
		</block>
		<styleClass value="$FullsizeAbsolute"/>
		<style>
			<backgroundStretchX value="true"/>
			<backgroundStretchY value="true"/>
		</style>
		<bind name="style" value="'backgroundImage'; _path + iconPath"/>
		<bind name="name" value="'dogTag_' + _path + '_' + $index + '_' + dogTagEntity.dogTagComponent.gpName"/>
	</block>
	<block className="PlayerDogTagItemByPK">
		<bind name="primaryEntityDH" value="'dogTagEntity'; CC.dogTagComponent; $value"/>
		<bind name="watchDH" value="'iconPath'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.iconPath"/>
		<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
		<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
		<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
		<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
		<bind name="watchDH" value="'clanId'; ['selfPlayerEntity.clanman.evClanIdChanged']; selfPlayerEntity.clanman.clanId"/>
		<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
		<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
		<bind name="watchDH" value="'clanTagOffsetX';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagOffsetX"/>
		<bind name="watchDH" value="'clanTagOffsetY';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagOffsetY"/>
		<bind name="watchDH" value="'clanTagFont';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagFont"/>
		<bind name="watchDH" value="'clanTagVisible';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagVisible"/>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="style" value="'top'; clanTagOffsetY + '%'"/>
			<bind name="style" value="'left'; clanTagOffsetX + '%'"/>
			<block>
				<style>
					<position value="absolute"/>
					<marginLeft value="-50%"/>
					<marginTop value="-50%"/>
				</style>
				<bind name="visible" value="clanTagVisible"/>
				<bind name="atlasText" value="clanTagVisible ?  (clanTag ? '[' + clanTag + ']' : '^') : '' ; _clanTagPaths + clanTagFont; 0"/>
			</block>
		</block>
		<styleClass value="$FullsizeAbsolute"/>
		<style>
			<backgroundStretchX value="true"/>
			<backgroundStretchY value="true"/>
		</style>
		<bind name="style" value="'backgroundImage'; _path + iconPath"/>
		<bind name="name" value="'dogTag_' + _path + '_' + $index + '_' + dogTagEntity.dogTagComponent.gpName"/>
	</block>
	<block className="DogTagProgressDefault">
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
			<marginBottom value="12px"/>
		</style>
		<block type="text">
			<style>
				<width value="100%"/>
			</style>
			<bind name="class" value="(_current &lt; _goal) ? '$FontColorUnready' : '$None'"/>
			<styleClass value="$TextDefault17NM"/>
			<bind name="text" value="tr(toUpperCase('IDS_DOGTAG_PARAM_' + _name))"/>
		</block>
		<block type="text">
			<style>
				<marginLeft value="8px"/>
			</style>
			<bind name="class" value="(_current &lt; _goal) ? '$FontColorUnready' : '$None'"/>
			<styleClass value="$TextDefault17NM"/>
			<bind name="text" value="_current"/>
		</block>
	</block>
	<block className="ResultBlock">
		<style>
			<width value="100%"/>
		</style>
		<bind name="child" value="_progress[$index][0];	{_name: _progress[$index][0], _goal: _progress[$index][1], _current: _progress[$index][2]};
										{	battleCount: 'DogTagProgressDefault',
											achievementCount: 'DogTagProgressDefault',
										 	damage: 'DogTagProgressDefault',
										 	clearExp: 'DogTagProgressDefault',
										 	winRate: 'DogTagProgressDefault',
										 	uniqueStars: 'DogTagProgressDefault'	}"/>
	</block>
	<block className="DogTagComponentTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="300px"/>
			<hitTest value="false"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<bind name="primaryEntityDH" value="'dogTagEntity'; CC.dogTagComponent; _id"/>
		<bind name="watchDH" value="'enabled'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.enabled"/>
		<bind name="watchDH" value="'iconPath'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.iconPath"/>
		<bind name="watchDH" value="'gpName'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.gpName"/>
		<bind name="watchDH" value="'categoryId'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.categoryId"/>
		<bind name="watchDH" value="'restriction'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.restriction"/>
		<bind name="watchDH" value="'data'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.data"/>
		<bind name="watchDH" value="'progress'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.progress"/>
		<bind name="watchDH" value="'description'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.description"/>
		<bind name="watchDH" value="'quest'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.quest"/>
		<bind name="watchDH" value="'unique'; ['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.unique"/>
		<bind name="watchDH" value="'clanTagOffsetX';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagOffsetX"/>
		<bind name="watchDH" value="'clanTagOffsetY';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagOffsetY"/>
		<bind name="watchDH" value="'clanTagFont';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagFont"/>
		<bind name="watchDH" value="'clanTagVisible';['dogTagEntity.dogTagComponent.evUpdate']; dogTagEntity.dogTagComponent.clanTagVisible"/>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'DogTagComponentTooltipHeader'; {_iconPath: iconPath, _categoryId: categoryId, _gpName: gpName, _unique: unique,
				_clanTagOffsetX: clanTagOffsetX, _clanTagOffsetY: clanTagOffsetY, _clanTagFont: clanTagFont, _clanTagVisible: clanTagVisible}"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="isNotSelf != true"/>
			<styleClass value="$InfoBlockIndent"/>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<block className="icon_module_state" type="native">
					<bind name="gotoAndStop!" value="enabled 	? 'installed'
											: 'action'"/>
				</block>
			</block>
			<block type="text">
				<styleClass value="$TextDefault17NM"/>
				<style>
					<maxWidth value="260"/>
					<marginLeft value="4px"/>
				</style>
				<bind name="class" value="	enabled &amp;&amp; dogTagEntity.dogTagComponentSaved != null	? '$FontColorGolden' :
							enabled													? '$None'
																					: '$FontColorUnready'"/>
				<bind name="text" value="	enabled &amp;&amp; dogTagEntity.dogTagComponentSaved != null	? 'IDS_DOGTAG_COMPONENT_SET':
							enabled													? 'IDS_DOGTAG_COMPONENT_AVAILABLE'
																					: 'IDS_DOGTAG_COMPONENT_NOT_AVAILABLE'"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="isNotSelf != true"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="description"/>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<styleClass value="$TextDefault17NM"/>
					<style>
						<width value="100%"/>
						<leading value="-3"/>
					</style>
					<bind name="text" value="tr( toUpperCase('IDS_DOGTAG_' + gpName + '_DESCRIPTION'))"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="visible" value="!isRewardTooltip &amp;&amp; quest"/>
			<block>
				<styleClass value="$InfoBlockIndent"/>
				<block type="text">
					<styleClass value="$TextDefault17NM"/>
					<style>
						<width value="100%"/>
						<leading value="-3"/>
					</style>
					<bind name="text" value="quest"/>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block className="inner_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<style>
						<width value="100%"/>
						<alpha value="0.7"/>
					</style>
					<block type="text">
						<styleClass value="$TextDefault17NM"/>
						<style>
							<width value="100%"/>
							<marginTop value="3px"/>
							<marginBottom value="3px"/>
							<leading value="-3"/>
						</style>
						<bind name="text" value="restriction"/>
					</block>
				</block>
				<block>
					<styleClass value="$InfoBlockIndent"/>
					<block>
						<bind name="repeat" value="data.battleTypes; 'DogTagBattleTypeRestriction'"/>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
					<block>
						<bind name="instance" value="'ShipRestrictions'; {_restrictionsEntityId: dogTagEntity.id, _withShipTypeCounters: false}"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
			<block>
				<bind name="visible" value="!enabled &amp;&amp; progress[0][2] != 0 &amp;&amp; isNotSelf != true"/>
				<style>
					<width value="100%"/>
					<marginTop value="9px"/>
				</style>
				<block>
					<styleClass value="$InfoBlockHorizontalIndent"/>
					<bind name="repeat" value="progress; 'ResultBlock'; {_progress: progress}"/>
				</block>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="(isNotSelf != true &amp;&amp; _canInstall == 'true') || isRewardTooltip"/>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction'; isRewardTooltip ? {_type: 'left', _instructionText: 'IDS_DOGTAG_TOOLTIP_GO_TO_CONSTUCTOR', _maxWidth: 300 } :
											unique			? {_type: 'left', _instructionText: 'IDS_SELECT_DOGTAG_COMPONENT_UNIQUE', _maxWidth: 300 } 
															: {_type: 'left', _instructionText: 'IDS_SELECT_DOGTAG_COMPONENT', _maxWidth: 300 }"/>
		</block>
	</block>
	<block className="DogTagComponentTooltipHeader">
		<style>
			<width value="100%"/>
			<flow value="horizontal"/>
		</style>
		<block>
			<style>
				<backgroundStretchX value="true"/>
				<backgroundStretchY value="true"/>
				<width value="80px"/>
				<height value="80px"/>
			</style>
			<bind name="style" value="'backgroundImage'; 'url:../dogTags/small/' + _iconPath"/>
			<bind name="firstEntityDH" value="'selfPlayerEntity'; CC.accountSelf"/>
			<bind name="watchDH" value="'selfPlayerDbId'; 		[]; selfPlayerEntity.accountSimple.dbId"/>
			<bind name="watchDH" value="'selfPlayerName'; 		['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.name"/>
			<bind name="watchDH" value="'selfPlayerNickName'; 	['selfPlayerEntity.accountName.evChanged']; selfPlayerEntity.accountName.nickName"/>
			<bind name="watchDH" value="'clanId'; ['selfPlayerEntity.clanman.evClanIdChanged']; selfPlayerEntity.clanman.clanId"/>
			<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
			<bind name="watchDH" value="'clanTag'; ['clanEntity.clan.evTagChanged']; clanEntity.clan.tag"/>
			<block>
				<bind name="visible" value="_clanTagVisible == true"/>
				<style>
					<position value="absolute"/>
				</style>
				<bind name="style" value="'top'; _clanTagOffsetY + '%'"/>
				<bind name="style" value="'left'; _clanTagOffsetX + '%'"/>
				<block>
					<style>
						<position value="absolute"/>
						<marginLeft value="-50%"/>
						<marginTop value="-50%"/>
					</style>
					<bind name="atlasText" value="_clanTagVisible ? (clanTag ? '[' + clanTag + ']' : '^') : '' ; '../fonts/small/' + _clanTagFont; 0"/>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="6px"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeaderBold"/>
				<style>
					<maxWidth value="192"/>
				</style>
				<bind name="text" value="tr(toUpperCase('IDS_DOGTAG_' + _gpName + '_NAME'))"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<style>
					<maxWidth value="192"/>
				</style>
				<bind name="text" value="_unique ? tr(toUpperCase('IDS_DOGTAG_COMPONENT_TOOLTIP_CATEGORY_' + 'unique')) : tr(toUpperCase('IDS_DOGTAG_COMPONENT_TOOLTIP_CATEGORY_' + _categoryId))"/>
			</block>
		</block>
	</block>
	<block className="DogTagBattleTypeRestriction">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<block className="icon_battletypes_small" type="native">
			<style>
				<marginRight value="6px"/>
				<width value="25px"/>
				<height value="25px"/>
			</style>
			<bind name="gotoAndStop!" value="	($value == 'PVP')			? 'RandomBattle' :
								($value == 'COOPERATIVE')	? 'CooperativeBattle':
								($value == 'RANKED') 		&amp;&amp; (rankedBattlesSeason.isJuniorSeason == true) ? 'RankedBattle_junior' : 'RankedBattle':
								($value == 'PVE')			? 'PVEBattle':
								($value == 'PVE_PREMADE')	? 'PVEBattle_hard':
								($value == 'CLAN')			? 'ClanBattle'
															: null "/>
		</block>
		<block className="VerticalDivider">
			<style>
				<height value="100%"/>
				<width value="3px"/>
			</style>
			<block className="divider_v" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
	</block>
	<block className="PlayerStereotype">
		<bind name="primaryEntityDH" value="'playerEntity'; CC.accountSimple; _playerDbId"/>
		<bind name="watchDH" value="'dogTagList';['playerEntity.dogTagView.evComponentsChanged']; playerEntity.dogTagView.components"/>
		<bind name="collectionDH" value="CC.dogTagComponent; 'dogtagview'+'ROOT'"/>
		<bind name="collectionDesign" value="'DES_'+'dogtagview'+'ROOT'; 'dogtagview'; {'filter':(dogTagList.indexOf(toLowerCase($entity.dogTagComponent.id)) &gt; -1), 'sort':['dogTagComponent.categoryId']}; []"/>
		<bind name="watchDH" value="'isSelf';			[]; playerEntity.accountSimple.isSelfPlayer"/>
		<bind name="watchDH" value="'relation'; 		['playerEntity.relation.evChanged']; playerEntity.relation.value"/>
		<bind name="watchDH" value="'clanId';			['playerEntity.clanman.evClanIdChanged']; playerEntity.clanman.clanId"/>
		<bind name="watchDH" value="'pureName';		['playerEntity.accountName.evChanged']; playerEntity.accountName.name"/>
		<bind name="watchDH" value="'accountLevel';	['playerEntity.accountLevel.evLevelChanged']; playerEntity.accountLevel.level"/>
		<bind name="watchDH" value="'rank'; 			['playerEntity.accountRank.evRankChanged']; playerEntity.accountRank.rank"/>
		<bind name="primaryEntityDH" value="'clanEntity'; CC.clan; clanId"/>
		<bind name="watchDH" value="'clanTag'; 	['clanEntity.clan.evTagChanged']; _clanTag ? _clanTag : clanEntity.clan.tag"/>
		<bind name="primaryEntityDH" value="'clanExtendedEntity'; CC.clanExtended; clanId"/>
		<bind name="watchDH" value="'clanTagColor'; 	['clanExtendedEntity.clanExtended.evColorChanged']; _clanTagColor ? _clanTagColor : clanExtendedEntity.clanExtended.color"/>
		<style>
			<width value="100%f"/>
			<marginTop value="14px"/>
		</style>
		<block>
			<style>
				<width value="100%f"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_TOOLTIP_PLAYER_STEREOTYPE_NAME'}"/>
			<bind name="instance" value="'PlayerNameAndClanTag'; {
								_isSelf: 			isSelf,
								_tkStatus: 			_tkStatus || _abuseStatus == AbuseStatus.SUSPECT, 
								_ctkStatus:			_ctkStatus || _abuseStatus == AbuseStatus.CONFIRMED, 
								_ttkStatus:			_ttkStatus, 
								_isInSameDivision:  _player.isInSameDivision,
								_fontSize:			19,
								_playerName:		pureName,
								_clanTag:			clanTag,
								_clanTagColor:		clanTagColor,
								_isDead:			false,
								_noClanTagColor:	_noClanTagColor}"/>
		</block>
		<block>
			<style>
				<width value="100%f"/>
			</style>
			<bind name="visible" value="!_isBot &amp;&amp; !_noLevel"/>
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_TOOLTIP_PLAYER_STEREOTYPE_LEVEL'}"/>
			<block type="text">
				<styleClass value="$TextDefaultNM"/>
				<style>
					<marginTop value="7px"/>
					<marginLeft value="3px"/>
				</style>
				<bind name="text" value="subst('IDS_PLAYER_STEREOTYPE_LEVEL',[], {accountLevel: accountLevel})"/>
			</block>
		</block>
		<bind name="instance" value="'PlayerProgressBar';	rank == 0 &amp;&amp; isSelf &amp;&amp;
											accountLevel != _maxLevelEnabled &amp;&amp;
											_currentProgress != null ? {_accountLevel: accountLevel, _currentProgress: _currentProgress,
																		_levelProgress: _levelProgress} : null"/>
		<block type="text">
			<bind name="visible" value="!_noRank &amp;&amp; !_isBot &amp;&amp; rank != 0 &amp;&amp; rank != null"/>
			<style>
				<marginTop value="8px"/>
				<marginLeft value="3px"/>
				<maxWidth value="160"/>
				<multiline value="false"/>
			</style>
			<styleClass value="$TextDefaultNM"/>
			<bind name="text" value="subst('IDS_RANK_X',[], {rank: rank})"/>
		</block>
	</block>
	<block className="PlayerProgressBar">
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="3px"/>
			</style>
			<block>
				<block className="indicator_progress_bar_yellow" type="native">
					<bind name="value" value="(_currentProgress / _levelProgress)*10"/>
					<style>
						<width value="138px"/>
						<marginTop value="8px"/>
					</style>
				</block>
			</block>
			<block>
				<block type="text">
					<styleClass value="$TextSecondary"/>
					<bind name="text" value="(format(_currentProgress, -1)) + ' / ' + (format(_levelProgress, -1))"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<css name="$ConfirmationWindowWidth">
		<width value="472px"/>
	</css>
	<css name="$ModalWindowDefaultWidth">
		<width value="472px"/>
	</css>
	<css name="$ModalWindowLargeCostMargins">
		<marginLeft value="5px"/>
		<marginRight value="4px"/>
	</css>
	<css name="$SelectTypeListItem">
		<width value="100%"/>
		<height value="74px"/>
	</css>
	<css name="$SelectTypeListItemIndent">
		<marginBottom value="15px"/>
		<marginTop value="15px"/>
		<marginLeft value="21px"/>
		<marginRight value="21px"/>
	</css>
	<block className="ModalWindowOkCancelRequest">
		<style>
			<flow value="horizontal"/>
			<marginTop value="15px"/>
		</style>
		<block>
			<bind name="appear" value="'startShow'; 0.15; 0.60; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
			<bind name="appear" value="'startHide'; 0.15; 0.45; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
			<styleClass value="$InfoLineBoundaries"/>
			<style>
				<width value="129px"/>
				<marginRight value="20px"/>
			</style>
			<bind name="instance" value="'DefaultButton'; {	_width: '129px', _request: _request, _requestParams: _requestParams, _enabled: true, _isTransactionBtn: true,
											_containerName: ('Modal_window_action_Button' + _okLabel), _label: _okLabel,
											_focusIndex: 1, _defaultFocused: true,
											_name: 'btn_ok'}"/>
		</block>
		<block>
			<style>
				<width value="129px"/>
			</style>
			<bind name="appear" value="'startShow'; 0.15; 0.45; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
			<bind name="appear" value="'startHide'; 0.15; 0.45; {alpha: 1, top: 0}; {alpha: 0, top: -10}"/>
			<block className="DefaultButtonModal">
				<styleClass value="$InfoLineBoundaries"/>
				<style>
					<width value="100%"/>
				</style>
				<bind name="name" value="'Modal_window_action_Button' + _cancelLabel"/>
				<block className="button_default" type="native">
					<style>
						<width value="100%"/>
					</style>
					<bind name="label" value="_cancelLabel"/>
					<params>
						<param name="name" value="btn_cancel"/>
					</params>
					<bind name="input"/>
					<bind name="focus" value="2;false"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ModalWindowUniversalHeader">
		<style>
			<marginBottom value="720:32,1080:64ah"/>
		</style>
		<bind name="style" value="'width'; _headerWidth ? _headerWidth : '100%'"/>
		<block>
			<bind name="visible" value="_header != null"/>
			<style>
				<width value="100%"/>
			</style>
			<block type="text">
				<style>
					<width value="100%"/>
					<textAlign value="center"/>
					<marginTop value="12px"/>
				</style>
				<styleClass value="$TextDefaultBold21NM"/>
				<bind name="text" value="toUpperCase(tr(_header))"/>
			</block>
			<block>
				<style>
					<width value="100%"/>
					<marginTop value="720:9,1080:11ah"/>
				</style>
				<block className="HorizontalDivider">
					<styleClass value="$PxHorizontalCorrection"/>
					<style>
						<width value="100%"/>
						<height value="3px"/>
					</style>
					<block className="divider_h" type="native">
						<styleClass value="$Fullsize"/>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="!_hideBackButton"/>
			<style>
				<position value="absolute"/>
				<top value="7px"/>
			</style>
			<bind name="instance" value="'BackButton'; {_text: 'IDS_RETURN_TO_DOCK', _action: 'btn_cancel'}"/>
		</block>
		<block>
			<bind name="visible" value="!_hideCloseButton"/>
			<style>
				<position value="absolute"/>
			</style>
			<bind name="style" value="'right'; _innerCloseButton ? '60px' : '8px'"/>
			<block className="ModalWindowCloseIcon">
				<style>
					<position value="absolute"/>
					<right value="0px"/>
					<top value="13px"/>
					<flow value="horizontal"/>
				</style>
				<bind name="name" value="'btn_cancel'"/>
				<bind name="input"/>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}; 0"/>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<backgroundColor value="0x01000000"/>
					</style>
					<bind name="dispatch" value="'mouseOver'; 'overEscapeButton'"/>
					<bind name="dispatch" value="'mouseOut'; 'upEscapeButton'"/>
					<bind name="dispatch" value="'mouseDown'; 'downEscapeButton'"/>
					<block>
						<bind name="soundSet" value="'default_button'"/>
						<bind name="catch" value="'overEscapeButton'; {EscapeButtonOverAlpha: 1}"/>
						<bind name="catch" value="'upEscapeButton'; {EscapeButtonOverAlpha: 0.8}"/>
						<bind name="catch" value="'downEscapeButton'; {EscapeButtonOverAlpha: 0.4}"/>
						<style>
							<alpha value="0.8"/>
						</style>
						<bind name="style" value="'alpha'; EscapeButtonOverAlpha"/>
						<bind name="instance" value="'HotkeyWithText'; {_text: 'ESC'}"/>
					</block>
					<block>
						<style>
							<marginTop value="3px"/>
						</style>
						<block className="button_close" type="native">
							<bind name="catch" value="'overEscapeButton'; {CrossButtonStates: 'over'}"/>
							<bind name="catch" value="'upEscapeButton'; {CrossButtonStates: 'up'}"/>
							<bind name="catch" value="'downEscapeButton'; {CrossButtonStates: 'down'}"/>
							<params>
								<param name="focusable" value="false"/>
							</params>
							<bind name="gotoAndPlay!" value="CrossButtonStates"/>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
	</block>
	<block className="ModalWindowHeader">
		<style>
			<marginBottom value="3px"/>
		</style>
		<bind name="style" value="'width'; _headerWidth ? _headerWidth : '450px'"/>
		<block>
			<style>
				<marginBottom value="9px"/>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextLargeHeaderBold"/>
				<bind name="text" value="toUpperCase(tr(_header))"/>
			</block>
			<block>
				<styleClass value="$AlignRight"/>
				<bind name="style" value="'right'; _innerCloseButton ? '60px' : '0px'"/>
				<block className="ModalWindowCloseIcon">
					<style>
						<position value="absolute"/>
						<right value="-50px"/>
						<top value="11px"/>
						<flow value="horizontal"/>
					</style>
					<bind name="name" value="'btn_cancel'"/>
					<bind name="input"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}; 0"/>
					<block>
						<styleClass value="$MiddleVAligned"/>
						<style>
							<backgroundColor value="0x01000000"/>
						</style>
						<bind name="dispatch" value="'mouseOver'; 'overEscapeButton'"/>
						<bind name="dispatch" value="'mouseOut'; 'upEscapeButton'"/>
						<bind name="dispatch" value="'mouseDown'; 'downEscapeButton'"/>
						<block>
							<bind name="soundSet" value="'default_button'"/>
							<bind name="catch" value="'overEscapeButton'; {EscapeButtonOverAlpha: 1}"/>
							<bind name="catch" value="'upEscapeButton'; {EscapeButtonOverAlpha: 0.8}"/>
							<bind name="catch" value="'downEscapeButton'; {EscapeButtonOverAlpha: 0.4}"/>
							<style>
								<alpha value="0.8"/>
							</style>
							<bind name="style" value="'alpha'; EscapeButtonOverAlpha"/>
							<bind name="instance" value="'HotkeyWithText'; {_text: 'ESC'}"/>
						</block>
						<block>
							<style>
								<marginTop value="3px"/>
							</style>
							<block className="button_close" type="native">
								<bind name="catch" value="'overEscapeButton'; {CrossButtonStates: 'over'}"/>
								<bind name="catch" value="'upEscapeButton'; {CrossButtonStates: 'up'}"/>
								<bind name="catch" value="'downEscapeButton'; {CrossButtonStates: 'down'}"/>
								<params>
									<param name="focusable" value="false"/>
								</params>
								<bind name="gotoAndPlay!" value="CrossButtonStates"/>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="_hideDivider != true"/>
			<style>
				<width value="100%"/>
				<position value="absolute"/>
				<bottom value="-3"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ModalWindowHeaderConfirmation">
		<style>
			<marginBottom value="3px"/>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<marginBottom value="9px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<block className="icon_warning_grey_big" type="native">
					<style>
						<marginTop value="6px"/>
					</style>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeaderBold"/>
					<text value="IDS_CONFIRMATION"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block className="ModalWindowCloseIcon">
				<style>
					<position value="absolute"/>
					<right value="-70px"/>
					<top value="9px"/>
					<flow value="horizontal"/>
				</style>
				<bind name="name" value="'btn_cancel'"/>
				<bind name="input"/>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}; 0"/>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<backgroundColor value="0x01000000"/>
					</style>
					<bind name="dispatch" value="'mouseOver'; 'overEscapeButton'"/>
					<bind name="dispatch" value="'mouseOut'; 'upEscapeButton'"/>
					<bind name="dispatch" value="'mouseDown'; 'downEscapeButton'"/>
					<block>
						<bind name="soundSet" value="'default_button'"/>
						<bind name="catch" value="'overEscapeButton'; {EscapeButtonOverAlpha: 1}"/>
						<bind name="catch" value="'upEscapeButton'; {EscapeButtonOverAlpha: 0.8}"/>
						<bind name="catch" value="'downEscapeButton'; {EscapeButtonOverAlpha: 0.4}"/>
						<style>
							<alpha value="0.8"/>
						</style>
						<bind name="style" value="'alpha'; EscapeButtonOverAlpha"/>
						<bind name="instance" value="'HotkeyWithText'; {_text: 'ESC'}"/>
					</block>
					<block>
						<style>
							<marginTop value="3px"/>
						</style>
						<block className="button_close" type="native">
							<bind name="catch" value="'overEscapeButton'; {CrossButtonStates: 'over'}"/>
							<bind name="catch" value="'upEscapeButton'; {CrossButtonStates: 'up'}"/>
							<bind name="catch" value="'downEscapeButton'; {CrossButtonStates: 'down'}"/>
							<params>
								<param name="focusable" value="false"/>
							</params>
							<bind name="gotoAndPlay!" value="CrossButtonStates"/>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ModalWindowHeaderNoEsc">
		<style>
			<marginBottom value="3px"/>
			<width value="450px"/>
		</style>
		<bind name="style" value="'width'; _headerWidth ? _headerWidth : '450px'"/>
		<block>
			<style>
				<marginBottom value="9px"/>
				<width value="100%"/>
			</style>
			<block type="text">
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$TextHeader"/>
				<bind name="class" value="'$FontSizeHeader5'"/>
				<bind name="class" value="'$Bold'"/>
				<bind name="class" value="'$FontColorWhite'"/>
				<bind name="text" value="toUpperCase(tr(_header))"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginRight value="-12px"/>
				<marginLeft value="-12px"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ModalWindowHeaderWithIcon">
		<style>
			<marginBottom value="3px"/>
		</style>
		<bind name="style" value="'width'; _headerWidth ? _headerWidth : '450px'"/>
		<block>
			<style>
				<marginBottom value="9px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<block className="icons_modal_window_heading" type="native">
					<styleClass value="$MiddleVAligned"/>
					<style>
						<marginRight value="3px"/>
					</style>
					<bind name="gotoAndStop!" value="_type"/>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeaderBold"/>
					<bind name="text" value="toUpperCase(tr(_header))"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="_showInnerCloseButton"/>
				<styleClass value="$AlignRight"/>
				<block className="ModalWindowCloseIcon">
					<style>
						<position value="absolute"/>
						<right value="-50px"/>
						<top value="9px"/>
						<flow value="horizontal"/>
					</style>
					<bind name="name" value="'btn_cancel'"/>
					<bind name="input"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}; 0"/>
					<block>
						<styleClass value="$MiddleVAligned"/>
						<style>
							<backgroundColor value="0x01000000"/>
						</style>
						<bind name="dispatch" value="'mouseOver'; 'overEscapeButton'"/>
						<bind name="dispatch" value="'mouseOut'; 'upEscapeButton'"/>
						<bind name="dispatch" value="'mouseDown'; 'downEscapeButton'"/>
						<block>
							<bind name="soundSet" value="'default_button'"/>
							<bind name="catch" value="'overEscapeButton'; {EscapeButtonOverAlpha: 1}"/>
							<bind name="catch" value="'upEscapeButton'; {EscapeButtonOverAlpha: 0.8}"/>
							<bind name="catch" value="'downEscapeButton'; {EscapeButtonOverAlpha: 0.4}"/>
							<style>
								<alpha value="0.8"/>
							</style>
							<bind name="style" value="'alpha'; EscapeButtonOverAlpha"/>
							<bind name="instance" value="'HotkeyWithText'; {_text: 'ESC'}"/>
						</block>
						<block>
							<style>
								<marginTop value="3px"/>
							</style>
							<block className="button_close" type="native">
								<bind name="catch" value="'overEscapeButton'; {CrossButtonStates: 'over'}"/>
								<bind name="catch" value="'upEscapeButton'; {CrossButtonStates: 'up'}"/>
								<bind name="catch" value="'downEscapeButton'; {CrossButtonStates: 'down'}"/>
								<params>
									<param name="focusable" value="false"/>
								</params>
								<bind name="gotoAndPlay!" value="CrossButtonStates"/>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ModalWindowHeaderOptionalIcon">
		<style>
			<marginBottom value="3px"/>
		</style>
		<bind name="style" value="'width'; _headerWidth ? _headerWidth : '100%'"/>
		<block>
			<style>
				<marginBottom value="9px"/>
				<width value="100%"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<block className="icon_warning_grey_big" type="native">
					<bind name="visible" value="_showIcon"/>
					<style>
						<marginTop value="6px"/>
					</style>
				</block>
				<block type="text">
					<styleClass value="$TextLargeHeaderBold"/>
					<bind name="text" value="toUpperCase(tr(_header))"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="_showInnerCloseButton"/>
				<styleClass value="$AlignRight"/>
				<block className="ModalWindowCloseIcon">
					<style>
						<position value="absolute"/>
						<right value="-50px"/>
						<top value="9px"/>
						<flow value="horizontal"/>
					</style>
					<bind name="name" value="'btn_cancel'"/>
					<bind name="input"/>
					<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}; 0"/>
					<block>
						<styleClass value="$MiddleVAligned"/>
						<style>
							<backgroundColor value="0x01000000"/>
						</style>
						<bind name="dispatch" value="'mouseOver'; 'overEscapeButton'"/>
						<bind name="dispatch" value="'mouseOut'; 'upEscapeButton'"/>
						<bind name="dispatch" value="'mouseDown'; 'downEscapeButton'"/>
						<block>
							<bind name="soundSet" value="'default_button'"/>
							<bind name="catch" value="'overEscapeButton'; {EscapeButtonOverAlpha: 1}"/>
							<bind name="catch" value="'upEscapeButton'; {EscapeButtonOverAlpha: 0.8}"/>
							<bind name="catch" value="'downEscapeButton'; {EscapeButtonOverAlpha: 0.4}"/>
							<style>
								<alpha value="0.8"/>
							</style>
							<bind name="style" value="'alpha'; EscapeButtonOverAlpha"/>
							<bind name="instance" value="'HotkeyWithText'; {_text: 'ESC'}"/>
						</block>
						<block>
							<style>
								<marginTop value="3px"/>
							</style>
							<block className="button_close" type="native">
								<bind name="catch" value="'overEscapeButton'; {CrossButtonStates: 'over'}"/>
								<bind name="catch" value="'upEscapeButton'; {CrossButtonStates: 'up'}"/>
								<bind name="catch" value="'downEscapeButton'; {CrossButtonStates: 'down'}"/>
								<params>
									<param name="focusable" value="false"/>
								</params>
								<bind name="gotoAndPlay!" value="CrossButtonStates"/>
							</block>
						</block>
						<style>
							<flow value="horizontal"/>
						</style>
					</block>
				</block>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ModalWindowHeaderFullSize">
		<bind name="style" value="'paddingTop';		_paddingTop   ? _paddingTop   : '720:20,2160:100ah'"/>
		<bind name="style" value="'paddingRight';	_paddingRight ? _paddingRight : '1280:20,1920:46aw'"/>
		<bind name="style" value="'paddingLeft'; 	_paddingLeft  ? _paddingLeft  : '1280:20,1920:46aw'"/>
		<style>
			<width value="100%"/>
		</style>
		<block>
			<bind name="visible" value="_hideBackButton != true"/>
			<style>
				<position value="absolute"/>
				<marginTop value="-3px"/>
			</style>
			<bind name="instance" value="'BackButton'; { _text: _backButtonText,
										_event: _event, _eventData: _eventData,
										_action: _action, _actionParams: _actionParams,
										_request: _request, _requestParams: _requestParams }"/>
		</block>
		<block>
			<bind name="visible" value="_windowName != null"/>
			<styleClass value="$MiddleAligned"/>
			<block type="text">
				<styleClass value="$TextDefaultBold21NM"/>
				<bind name="text" value="toUpperCase(tr(_windowName))"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="_hideCloseIcon != true"/>
			<style>
				<position value="absolute"/>
				<right value="4"/>
				<top value="2"/>
			</style>
			<block className="ModalWindowCloseIcon">
				<style>
					<position value="absolute"/>
					<right value="0px"/>
					<top value="0px"/>
					<flow value="horizontal"/>
				</style>
				<bind name="name" value="'btn_cancel'"/>
				<bind name="input"/>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_CLOSE'}; 0"/>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<backgroundColor value="0x01000000"/>
					</style>
					<bind name="dispatch" value="'mouseOver'; 'overEscapeButton'"/>
					<bind name="dispatch" value="'mouseOut'; 'upEscapeButton'"/>
					<bind name="dispatch" value="'mouseDown'; 'downEscapeButton'"/>
					<block>
						<bind name="soundSet" value="'default_button'"/>
						<bind name="catch" value="'overEscapeButton'; {EscapeButtonOverAlpha: 1}"/>
						<bind name="catch" value="'upEscapeButton'; {EscapeButtonOverAlpha: 0.8}"/>
						<bind name="catch" value="'downEscapeButton'; {EscapeButtonOverAlpha: 0.4}"/>
						<style>
							<alpha value="0.8"/>
						</style>
						<bind name="style" value="'alpha'; EscapeButtonOverAlpha"/>
						<bind name="instance" value="'HotkeyWithText'; {_text: 'ESC'}"/>
					</block>
					<block>
						<style>
							<marginTop value="3px"/>
						</style>
						<block className="button_close" type="native">
							<bind name="catch" value="'overEscapeButton'; {CrossButtonStates: 'over'}"/>
							<bind name="catch" value="'upEscapeButton'; {CrossButtonStates: 'up'}"/>
							<bind name="catch" value="'downEscapeButton'; {CrossButtonStates: 'down'}"/>
							<params>
								<param name="focusable" value="false"/>
							</params>
							<bind name="gotoAndPlay!" value="CrossButtonStates"/>
						</block>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="_hideDivider != true"/>
			<style>
				<width value="100%"/>
				<marginTop value="720:12,1080:16ah"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="LootboxesBanner">
		<params>
			<param name="name" value="LootboxesBanner"/>
		</params>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="firstEntityDH" value="'lootboxEntity'; CC.lootboxConfigComponent"/>
		<bind name="watchDH" value="'maxBought';				['lootboxEntity.lootboxConfigComponent.evUpdate'];	lootboxEntity.lootboxConfigComponent.maxBought"/>
		<bind name="watchDH" value="'lootboxExp';			['lootboxEntity.lootboxStorageComponent.evUpdate'];	lootboxEntity.lootboxStorageComponent.lootExp"/>
		<bind name="watchDH" value="'boughtToday';			['lootboxEntity.lootboxStorageComponent.evUpdate'];	lootboxEntity.lootboxStorageComponent.boughtToday"/>
		<bind name="watchDH" value="'lootboxesInStorage';	['lootboxEntity.lootboxStorageComponent.evUpdate'];	lootboxEntity.lootboxStorageComponent.inStorage"/>
		<bind name="watch" value="'allBoxesBought'; (maxBought == boughtToday)"/>
		<bind name="watch" value="'canBuyLootbox'; (lootboxExp &gt;= lootboxEntity.lootboxConfigComponent.prices[boughtToday])"/>
		<bind name="appear" value="'addedToStage'; 0.15; 0.3; {alpha: 0, top: 5}; {alpha: 1, top: 0}"/>
		<style>
			<width value="223px"/>
			<height value="36px"/>
		</style>
		<bind name="style" value="'height'; allBoxesBought ? '36px' : '72px'"/>
		<bind name="action" value="'click'; 'moveToBarge'; {}"/>
		<bind name="feature" value="21; 'click'"/>
		<bind name="soundSet" value="'lootbox_banner'"/>
		<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_GO_TO_LOOTBOXES'}], _maxWidth: 250 }; 0"/>
		<bind name="action" value="'click'; 'log'; { event: 'click:banner.Lootboxes' }"/>
		<block>
			<styleClass value="$Fullsize"/>
			<block className="quest_thumb_title" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.15; {alpha: 0.75}; {alpha: 1.0}"/>
			</block>
			<block>
				<bind name="visible" value="!(allBoxesBought)"/>
				<styleClass value="$Fullsize"/>
				<bind name="instance" value="'LootboxesBannerProgress'; {}"/>
			</block>
			<block>
				<bind name="visible" value="allBoxesBought"/>
				<styleClass value="$Fullsize"/>
				<bind name="instance" value="'LootboxesBannerTimer'; {}"/>
			</block>
			<block>
				<style>
					<marginRight value="3px"/>
					<width value="71px"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
				<block>
					<bind name="visible" value="canBuyLootbox == true"/>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$MiddleAlignedAbsolutely"/>
					<block className="icon_lootbox_glow_animation" type="native">
						<style>
							<position value="absolute"/>
						</style>
					</block>
				</block>
				<block className="icon_lootbox" type="native">
					<bind name="transition" value="rollOver &amp;&amp; !(mouseDown); 0.15; {alpha: 0.95}; {alpha: 1}"/>
					<bind name="gotoAndStop!" value="'normal'"/>
				</block>
				<block type="text">
					<bind name="visible" value="(lootboxesInStorage &gt; 0)"/>
					<bind name="style" value="'bottom'; allBoxesBought ? '-6px' : '-9px'"/>
					<style>
						<right value="0px"/>
						<position value="absolute"/>
					</style>
					<styleClass value="$TextLargeHeaderBold"/>
					<bind name="class" value="'$FontSizeHeader3'"/>
					<bind name="text" value="'x'+lootboxesInStorage"/>
				</block>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="LootboxesBannerProgress">
		<bind name="firstEntityDH" value="'lootboxEntity'; CC.lootboxConfigComponent"/>
		<bind name="watchDH" value="'lootboxExp'; ['lootboxEntity.lootboxStorageComponent.evUpdate']; lootboxEntity.lootboxStorageComponent.lootExp"/>
		<bind name="watchDH" value="'boughtToday'; ['lootboxEntity.lootboxStorageComponent.evUpdate']; lootboxEntity.lootboxStorageComponent.boughtToday"/>
		<bind name="watchDH" value="'lootboxesInStorage'; ['lootboxEntity.lootboxStorageComponent.evUpdate']; lootboxEntity.lootboxStorageComponent.inStorage"/>
		<bind name="watch" value="'curLootboxPrice'; lootboxEntity.lootboxConfigComponent.prices[boughtToday]"/>
		<bind name="watch" value="'expToCurLootbox'; (lootboxExp &gt;= curLootboxPrice)	? 0
																	: (curLootboxPrice - lootboxExp)"/>
		<bind name="watch" value="'nextLootboxProgress'; ((expToCurLootbox &gt; 0) ? ( lootboxExp / curLootboxPrice) : 1)"/>
		<styleClass value="$Fullsize"/>
		<style>
			<marginLeft value="9px"/>
		</style>
		<block>
			<style>
				<marginTop value="3px"/>
			</style>
			<block type="text">
				<styleClass value="$TextLargeHeaderBold"/>
				<bind name="text" value="format(lootboxExp, -1)"/>
			</block>
			<block className="icon_exp" type="native">
				<style>
					<marginLeft value="-3px"/>
				</style>
				<styleClass value="$MiddleVAligned"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<position value="absolute"/>
				<top value="32px"/>
			</style>
			<bind name="instance" value="'LootboxProgressBar'; {_width: 132, _height: 9, _curValue: (nextLootboxProgress*10)}"/>
		</block>
		<block type="text">
			<style>
				<marginTop value="12px"/>
			</style>
			<styleClass value="$TextDefaultBold"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<bind name="class" value="'$FontSizeSmall'"/>
			<bind name="text" value="(expToCurLootbox &gt; 0 ? (toUpperCase(tr('IDS_MORE')) + ' ' + expToCurLootbox)
										 : toUpperCase(tr('IDS_YOU_SHOULD_PURCHASE_LOOTBOX')))"/>
		</block>
	</block>
	<block className="LootboxesBannerTimer">
		<bind name="firstEntityDH" value="'lootboxEntity'; CC.lootboxConfigComponent"/>
		<bind name="watchDH" value="'dropTimeStamp';	['lootboxEntity.lootboxStorageComponent.evUpdate'];	lootboxEntity.lootboxStorageComponent.dropAt"/>
		<bind name="countdown" value="dropTimeStamp; 'countdownText'; 'hh:mm:ss'"/>
		<styleClass value="$MiddleVAligned"/>
		<styleClass value="$MiddleAligned"/>
		<block type="text">
			<styleClass value="$TextHeaderWhiteBold"/>
			<bind name="class" value="'$FontColorUnready'"/>
			<bind name="pureText" value="'-' + countdownText"/>
		</block>
	</block>
	<block className="LootboxProgressBar">
		<bind name="style" value="'width'; _width+'px'"/>
		<bind name="style" value="'height'; _height+'px'"/>
		<block className="indicator_progress_bar_yellow" type="native">
			<styleClass value="$Fullsize"/>
			<bind name="value" value="_curValue"/>
		</block>
	</block>
	<css name="$TextHeaderLargeBold">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="21"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xFFFFFF"/>
	</css>
	<css name="$TableCell">
		<width value="100%"/>
		<height value="23px"/>
	</css>
	<css name="$TableHeaderCell">
		<width value="100%"/>
		<marginBottom value="12px"/>
		<height value="23px"/>
	</css>
	<css name="$TableCellTextValue">
		<position value="absolute"/>
		<right value="0px"/>
	</css>
	<css name="$TextAccentGreyBold1">
		<fontFamily value="$WWSDefaultFontBold"/>
		<textColor value="0xDDDDDD"/>
		<fontSize value="70"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
	</css>
	<block className="StatColumn">
		<style>
			<width value="33%"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMapCustom">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap5_feather" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block>
			<style>
				<width value="100%"/>
				<marginLeft value="12px"/>
				<marginRight value="12px"/>
			</style>
			<bind name="repeat" value="array[$index]; 'StatRowProxy'; {statData: statData}"/>
		</block>
	</block>
	<block className="StatRowProxy">
		<style>
			<width value="100%"/>
		</style>
		<bind name="instance" value=" isHeader ? 'StatItemHeader' : 'StatRow'; {header: header, title:title, value:value, statData: statData, hintVehicleId: hintVehicleId}"/>
	</block>
	<block className="StatItemHeader">
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: title + '_TOOLTIP_PROFILE'}"/>
		<style>
			<backgroundColor value="0x01000000"/>
		</style>
		<styleClass value="$TableHeaderCell"/>
		<block type="text">
			<styleClass value="$TextHeaderLargeBold"/>
			<bind name="text" value="title"/>
		</block>
		<block type="text">
			<styleClass value="$TableCellTextValue"/>
			<styleClass value="$TextHeaderLargeBold"/>
			<bind name="text" value="value"/>
		</block>
	</block>
	<block className="StatRow">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; hintVehicleId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<styleClass value="$TableCell"/>
		<bind name="tooltip" value="tooltipName; (tooltipName != null) ? tooltipParams  : null"/>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block>
				<bind name="tooltip" value="'StatsRowHint'; 	(tooltipName == null) ? { tooltipText: title + '_TOOLTIP_PROFILE', shipInfo: shipInfo, _hintVehicleId: hintVehicleId } : null"/>
				<style>
					<width value="100%"/>
					<backgroundColor value="0x01000000"/>
				</style>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<block type="text">
						<style>
							<width value="100%"/>
							<multiline value="false"/>
						</style>
						<styleClass value="$TextHeaderBigDefault"/>
						<bind name="text" value="title"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="value != null"/>
					<block type="text">
						<styleClass value="$TextHeaderBigDefault"/>
						<bind name="style" value="'alpha'; (value == 0) || (value == '0%') ? 0.5 : 1"/>
						<bind name="text" value="value == '100%' ? value : format(value)"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
			<block>
				<bind name="visible" value="(playerPointsCounter != null) || (totalPointsCounter != null)"/>
				<bind name="instance" value="'ScoreRatioCounter'; { 	_playerPointsCounter: format(playerPointsCounter), 
													_totalPointsCounter: format(totalPointsCounter),
													_tooltipTextPlayerResult: tooltipTextPlayerResult, 
													_tooltipTextTotalResult: tooltipTextTotalResult }"/>
			</block>
			<block>
				<bind name="visible" value="currency != null"/>
				<bind name="instance" value="'PriceTag'; { priceInfo: {finalPrice: finalPrice, currency: currency}, _medium: true} "/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="title != null"/>
			<style>
				<width value="100%"/>
				<marginTop value="-2px"/>
			</style>
			<bind name="instance" value="'TableDivider'; {}"/>
		</block>
	</block>
	<block className="PlayerSummary">
		<bind name="var" value="{curSeasonIndex: 0}"/>
		<bind name="catch" value="'curSeasonIndexChanged'"/>
		<bind name="catch" value="'currentSeasonIdChanged'"/>
		<bind name="collectionDH" value="CC.rankedSeasonHistory; 'statDataEntities'; 'statToShow'"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'rankedBattlesSeason'"/>
		<bind name="entityDH" value="'statDataEntity'; statDataEntities[0].id"/>
		<bind name="watchDH" value="'statData'; ['statDataEntity.dataComponent.evDataChanged']; statDataEntity.dataComponent.data"/>
		<bind name="watchDH" value="'shipsList'; ['statDataEntity.dataComponent.evDataChanged']; statDataEntity.dataComponent.data.shipsList"/>
		<styleClass value="$Fullsize"/>
		<bind name="watch" value="'battleType';	_curItemIndex == 0	? BattleTypes.COOPERATIVE_BATTLE :
								_curItemIndex == 1	? BattleTypes.RANDOM_BATTLE :
								_curItemIndex == 2	? BattleTypes.RANKED_BATTLE :
								_curItemIndex == 3	? BattleTypes.CLUB_BATTLE
													: BattleTypes.COOPERATIVE_BATTLE "/>
		<bind name="action" value="'battleType' + varChanged; 'battleTypeChanged'; {battleType: battleType}"/>
		<bind name="action" value="'addedToStage'; 'battleTypeChanged'; {battleType: battleType}"/>
		<style>
			<marginTop value="720:30,1080:80ah"/>
			<marginBottom value="720:0,1080:60ah"/>
		</style>
		<bind name="feature" value="3;''"/>
		<bind name="feature" value="16;''"/>
		<bind name="feature" value="24;	''"/>
		<bind name="firstEntityDH" value="'clubHistoryEntity'; CC.rankedSeasonHistory; 'byGameType.' + BattleTypes.CLUB_BATTLE"/>
		<bind name="watchDH" value="'hasClubHistoryData'; ['clubHistoryEntity.rankedSeasonHistory.evRankedSeasonHistoryDataUpdate']; clubHistoryEntity.rankedSeasonHistory.hasGamesPlayed"/>
		<bind name="watch" value="'battleTypes';  feature_3	== 'locked' ? ['IDS_COOPERATIVE_BATTLE'] :
								 feature_16 == 'locked'	? ['IDS_COOPERATIVE_BATTLE', 'IDS_RANDOM_BATTLE'] :
								 !hasClubHistoryData 	? ['IDS_COOPERATIVE_BATTLE', 'IDS_RANDOM_BATTLE', 'IDS_RANKED_BATTLE']
								 						: ['IDS_COOPERATIVE_BATTLE', 'IDS_RANDOM_BATTLE', 'IDS_RANKED_BATTLE', 'IDS_CLUB_BATTLE']"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="instance" value="'PlayerSummaryItem'; {_battleType: battleType, _curItemIndex: _curItemIndex, _curSeasonIndex: curSeasonIndex, statData:statData, currentVehicleId: statData.vehicleId}"/>
		</block>
		<block>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap5_feather" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<style>
				<position value="absolute"/>
				<width value="240px"/>
				<right value="1280:5,1920:40aw"/>
				<marginTop value="-33px"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<block>
					<style>
						<height value="30px"/>
					</style>
					<styleClass value="$MiddleAligned"/>
					<bind name="instance" value="'RankedSeasonDropdown'; (battleType == BattleTypes.RANKED_BATTLE) ? {statData: statData, _curSeasonIndex: curSeasonIndex, currentSeasonId: currentSeasonId}: null"/>
				</block>
				<block>
					<styleClass value="$MiddleAligned"/>
					<block>
						<style>
							<width value="152px"/>
						</style>
						<block className="icon_battletypes_big" type="native">
							<bind name="transition" value="statData.vehicleId != 0; 0.15; {alpha: 1}; {alpha: 0.7}"/>
							<styleClass value="$MiddleAligned"/>
							<bind name="gotoAndStop!" value="(currentSeasonId &gt; 100) ? 'RankedBattle_junior' : battleType"/>
						</block>
						<block className="battle_type_overlay_big" type="native">
							<bind name="visible" value="statData.vehicleId != 0"/>
							<styleClass value="$MiddleAligned"/>
							<style>
								<position value="absolute"/>
								<alpha value="0.6"/>
							</style>
						</block>
						<block>
							<style>
								<position value="absolute"/>
								<top value="-3"/>
								<left value="-10"/>
							</style>
							<bind name="instance" value="'RankedSeasonFlag'; battleType == BattleTypes.RANKED_BATTLE ? {_curSeasonIndex: curSeasonIndex, statData: statData}: null"/>
						</block>
						<block>
							<styleClass value="$MiddleAligned"/>
							<style>
								<position value="absolute"/>
								<bottom value="-10"/>
							</style>
							<bind name="instance" value="'ShipPrewiewItem'; {currentVehicleId: statData.vehicleId}"/>
						</block>
					</block>
					<block>
						<styleClass value="$MiddleAligned"/>
						<style>
							<marginBottom value="6px"/>
						</style>
						<bind name="name" value="'dropdown_battle_types'"/>
						<bind name="instance" value="'ItemChooser'; {	_items: battleTypes, curIndex: _curItemIndex,
														_choosedItemRenderer: 'LargeTextChoosedItemRenderer', _listItemRenderer: 'TextListItemRenderer',
														onItemSelectedEvent: 'battleTypeChanged', _itemChooserTooltipText: 'IDS_CHOOSE_BATTLETYPE_STATS'}"/>
					</block>
				</block>
				<block>
					<bind name="visible" value="statData.shipsList.length == 0"/>
					<style>
						<width value="100%"/>
					</style>
					<block>
						<style>
							<width value="100%"/>
						</style>
						<block className="HorizontalDivider">
							<styleClass value="$PxHorizontalCorrection"/>
							<style>
								<width value="100%"/>
								<height value="3px"/>
							</style>
							<block className="divider_h" type="native">
								<styleClass value="$Fullsize"/>
							</block>
						</block>
					</block>
					<block>
						<style>
							<marginTop value="3px"/>
						</style>
						<styleClass value="$MiddleAligned"/>
						<bind name="instance" value="'EmptyStatusParagraph'; {_text: 'IDS_NO_BATTLES_PLAYED_IN_' + toUpperCase(battleType), _maxWidth: 200}"/>
					</block>
				</block>
				<block>
					<style>
						<width value="100%"/>
					</style>
					<bind name="tooltip" value="'MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_SELECT_ALL_SHIPS_FOR_DETAILED_STAT'}], _maxWidth: 250}"/>
					<bind name="instance" value="'AllShipsSelectedItem'; statData.shipsList.length != 0 ? {shipListLength: statData.shipsList.length, totalWinRate: statData.diagStats.totalWinRate, battleType: battleType, currentVehicleId: statData.vehicleId, seasonId: seasonId, gamesPlayed: statData.diagStats.gamesPlayed} : null"/>
				</block>
				<block>
					<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
					<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
					<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
					<styleClass value="$DefaultScrollBar"/>
					<style>
						<maxHeight value="328"/>
						<width value="100%"/>
						<overflow value="scroll"/>
					</style>
					<bind name="repeat" value="shipsList; 'ShipRowItem'; {battleType: battleType, currentVehicleId: statData.vehicleId, curSeasonIndex: curSeasonIndex, seasonId: seasonId, _curItemIndex: _curItemIndex}; !(userPrefs.shipSortStatsDirection)"/>
				</block>
				<block>
					<styleClass value="$MiddleAligned"/>
					<bind name="instance" value="'ShipSortingDropdown'; statData.shipsList.length &gt;= 2 ? {statData: statData.shipsList} : null"/>
				</block>
			</block>
		</block>
	</block>
	<block className="ShipStatsTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="300px"/>
			<hitTest value="false"/>
		</style>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; _vehicleId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'TooltipBackground'; {_isInBattle: _isInBattle}"/>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'ShipFlagIconLevelName'; {shipInfo: shipInfo, _multiline: true}"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'MouseInstruction'; { _type: 'left', _instructionText: 'IDS_SELECT_SHIP_FOR_DETAILED_STAT', _maxWidth: 250}"/>
		</block>
	</block>
	<block className="ShipPrewiewItem">
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; currentVehicleId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<style>
			<width value="214px"/>
			<height value="126px"/>
		</style>
		<bind name="style" value="'backgroundImage'; 'url:' + shipInfo.pathPreview"/>
	</block>
	<block className="RankedSeasonDropdown">
		<bind name="var" value="{_curItemIndex: _curItemIndex ? _curItemIndex : 0}"/>
		<bind name="catch" value="'ItemChooserInnerEvent.historySeasonChanged'"/>
		<bind name="action" value="'_curItemIndex' + varChanged; 'rankedSeasonChanged'; {seasonId: statData.seasonList[_curItemIndex].id}"/>
		<bind name="dispatch" value="'_curItemIndex' + varChanged; 'curSeasonIndexChanged'; {curSeasonIndex: _curItemIndex}; false"/>
		<bind name="dispatch" value="'_curItemIndex' + varChanged; 'currentSeasonIdChanged'; {currentSeasonId: statData.seasonList[_curItemIndex].id}"/>
		<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<block>
			<bind name="instance" value="'ItemChooser'; {	_items: statData.seasonList, curIndex: _curItemIndex,
											_choosedItemRenderer: 'LargeTextChoosedItemRendererRankedSeason', _listItemRenderer: 'TextListItemRendererRankedSeason',
											onItemSelectedEvent: 'historySeasonChanged', _itemChooserTooltipText: 'IDS_CHOOSE_RANK_SEASON'}"/>
		</block>
	</block>
	<block className="RankedSeasonFlag">
		<bind name="appear" value="'addedToStage'; 0.15; 0; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<block>
			<style>
				<width value="75px"/>
				<height value="60px"/>
			</style>
			<bind name="style" value="'backgroundImage'; _curSeasonIndex != 0 ? ('url:' + statData.seasonList[_curSeasonIndex].iconPath) : ('url:' + ' ')"/>
		</block>
	</block>
	<block className="ShipSortingDropdown">
		<bind name="var" value="{items:['IDS_SORT_BY_WIN_PERCENT', 'IDS_SORT_BY_BATTLES_COUNT', 'IDS_SORT_BY_LEVEL', 'IDS_SORT_BY_NATION', 'IDS_SORT_BY_SHIPTYPE']}"/>
		<block type="text">
			<style>
				<marginTop value="4px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$TextHeaderBold"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<bind name="text" value="tr('IDS_SORTING_TYPE') + tr('IDS_COLON')"/>
		</block>
		<block>
			<style>
				<marginLeft value="2px"/>
				<marginTop value="-1px"/>
			</style>
			<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
			<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
			<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
			<bind name="watch" value="'_curItemIndex';	(userPrefs.shipStatsSortIndex == null) ? 0 : userPrefs.shipStatsSortIndex"/>
			<bind name="action" value="'shipSortStatsChanged'; 'setUserPref' ; {value: _curItemIndex, name: 'shipStatsSortIndex'}"/>
			<bind name="action" value="'shipSortStatsDirectionChanged'; 'setUserPref' ; {value: !(userPrefs.shipSortStatsDirection), name: 'shipSortStatsDirection'}"/>
			<bind name="request" value="'shipSortStatsChanged'; 'sortShipStats' ; {ids: items[_curItemIndex]}"/>
			<bind name="catch" value="'ItemChooser.shipsSortSelected'"/>
			<bind name="instance" value="'ItemChooser'; {	_items: items, curIndex: _curItemIndex, 
											_choosedItemRenderer: 'BluishTextChoosedItemRenderer', _listItemRenderer: 'TextListItemRenderer',
											onItemSelectedEvent: 'shipsSortSelected', _itemChooserTooltipText: 'IDS_HINT_SHIP_CAROUSEL_SORT'}"/>
			<bind name="changeDispatch" value="_curItemIndex; 'shipSortStatsChanged'"/>
			<bind name="changeDispatch" value="_direction; 'shipSortStatsDirectionChanged'"/>
		</block>
	</block>
	<block className="PlayerSummaryItem">
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="stageSize"/>
		<bind name="watch" value="'inset'; 0 "/>
		<bind name="catch" value="'changeInsetPlayerProfileSummaryInset'"/>
		<bind name="changeDispatch" value="inset; 'changeInsetInPrefs'"/>
		<bind name="action" value="'changeInsetInPrefs'; 'setUserPref' ; {value : inset, name : 'playerProfileSummaryInset'}"/>
		<styleClass value="$Fullsize"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="watch" value="'playerSummaryStatsType'; (_battleType == BattleTypes.PVE_BATTLE ? 'PVEStats' : 'commonStats')"/>
			<bind name="child" value="playerSummaryStatsType; {battleType: _battleType, _curItemIndex: _curItemIndex,
											 _curSeasonIndex: curSeasonIndex, statData:statData,
											 currentVehicleId: statData.vehicleId}; 
											 {commonStats: 'PlayerSummaryCommon', PVEStats: 'PlayerSummaryPve'}"/>
		</block>
		<block>
			<bind name="visible" value="(statData.diagStats.gamesPlayed &gt; 0) &amp;&amp; (statData.vehicleId == 0)"/>
			<style>
				<height value="190px"/>
			</style>
			<styleClass value="$MiddleAligned"/>
			<bind name="child" value="inset; {_curItemIndex: _curItemIndex, statData:statData, battleType: _battleType}; 'PlayerSummaryDiagrams'; 'PlayerSummaryBattleHeroes'"/>
		</block>
	</block>
	<block className="PlayerSummaryCommon">
		<styleClass value="$Fullsize"/>
		<style>
			<marginBottom value="20px"/>
		</style>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<marginBottom value="24px"/>
			</style>
			<bind name="appear" value="'addedToStage'; 0.15; 0.12; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<block className="ProfilePlayerPercentEfficiency">
				<block className="DeclareBlurLayer">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="transparentPixel" type="native">
						<bind name="blurLayer" value="0"/>
					</block>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap5_feather" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<style>
					<width value="160px"/>
				</style>
				<block type="text">
					<styleClass value="$TextAccentGreyBold"/>
					<styleClass value="$MiddleAligned"/>
					<bind name="text" value="format(statData.basicStats.gamesPlayed, -1)"/>
					<bind name="name" value="'Stat_' + 'IDS_GAME_PLAYED'"/>
				</block>
				<block type="text">
					<style>
						<marginTop value="-12px"/>
					</style>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<bind name="class" value="'$Bold'"/>
					<bind name="text" value="'IDS_GAME_PLAYED'"/>
				</block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_GAME_PLAYED' + '_TOOLTIP_PROFILE'}"/>
			</block>
			<block className="ProfilePlayerPercentEfficiency">
				<block className="DeclareBlurLayer">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="transparentPixel" type="native">
						<bind name="blurLayer" value="0"/>
					</block>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap5_feather" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<style>
					<width value="160px"/>
				</style>
				<block type="text">
					<styleClass value="$TextAccentGreyBold"/>
					<styleClass value="$MiddleAligned"/>
					<bind name="text" value="statData.basicStats.winRate"/>
					<bind name="name" value="'Stat_' + 'IDS_VICTORY_PERCENT'"/>
				</block>
				<block type="text">
					<style>
						<marginTop value="-12px"/>
					</style>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<bind name="class" value="'$Bold'"/>
					<bind name="text" value="'IDS_VICTORY_PERCENT'"/>
				</block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_VICTORY_PERCENT' + '_TOOLTIP_PROFILE'}"/>
			</block>
			<block className="ProfilePlayerPercentEfficiency">
				<block className="DeclareBlurLayer">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="transparentPixel" type="native">
						<bind name="blurLayer" value="0"/>
					</block>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap5_feather" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<style>
					<width value="160px"/>
				</style>
				<block type="text">
					<styleClass value="$TextAccentGreyBold"/>
					<styleClass value="$MiddleAligned"/>
					<bind name="text" value="format(statData.basicStats.averageExp, -1)"/>
					<bind name="name" value="'Stat_' + 'IDS_EXPERIENCE_C_AVERAGE'"/>
				</block>
				<block type="text">
					<style>
						<marginTop value="-12px"/>
					</style>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<bind name="class" value="'$Bold'"/>
					<bind name="text" value="'IDS_EXPERIENCE_C_AVERAGE'"/>
				</block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_EXPERIENCE_C_AVERAGE' + '_TOOLTIP_PROFILE'}"/>
			</block>
			<block className="ProfilePlayerPercentEfficiency">
				<block className="DeclareBlurLayer">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="transparentPixel" type="native">
						<bind name="blurLayer" value="0"/>
					</block>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap5_feather" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<style>
					<width value="160px"/>
				</style>
				<block type="text">
					<styleClass value="$TextAccentGreyBold"/>
					<styleClass value="$MiddleAligned"/>
					<bind name="text" value="statData.basicStats.maxFrags"/>
					<bind name="name" value="'Stat_' + 'IDS_MAX_SHIPS_PER_BATTLE'"/>
				</block>
				<block type="text">
					<style>
						<marginTop value="-12px"/>
					</style>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<bind name="class" value="'$Bold'"/>
					<bind name="text" value="'IDS_MAX_SHIPS_PER_BATTLE'"/>
				</block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_MAX_SHIPS_PER_BATTLE' + '_TOOLTIP_PROFILE'}"/>
			</block>
			<block className="ProfilePlayerPercentEfficiency">
				<block className="DeclareBlurLayer">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="transparentPixel" type="native">
						<bind name="blurLayer" value="0"/>
					</block>
					<style>
						<position value="absolute"/>
					</style>
				</block>
				<block className="BlurMapCustom">
					<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<hitTest value="false"/>
					</style>
					<bind name="visible" value="optionData.blurEnabled"/>
					<block className="mc_blurmap5_feather" type="native">
						<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
						<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
						<styleClass value="$Fullsize"/>
						<bind name="blurMap" value="0"/>
					</block>
				</block>
				<style>
					<width value="160px"/>
				</style>
				<block type="text">
					<styleClass value="$TextAccentGreyBold"/>
					<styleClass value="$MiddleAligned"/>
					<bind name="text" value="statData.basicStats.killDeath"/>
					<bind name="name" value="'Stat_' + 'IDS_DESTROY_RATIO'"/>
				</block>
				<block type="text">
					<style>
						<marginTop value="-12px"/>
					</style>
					<styleClass value="$MiddleAligned"/>
					<styleClass value="$TextDefault"/>
					<bind name="class" value="'$FontColorBlueish'"/>
					<bind name="class" value="'$Bold'"/>
					<bind name="text" value="'IDS_DESTROY_RATIO'"/>
				</block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_DESTROY_RATIO' + '_TOOLTIP_PROFILE'}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<bind name="appear" value="'addedToStage'; 0.15; 0.24; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
			<styleClass value="$DefaultScrollBar"/>
			<style>
				<height value="100%f"/>
				<overflow value="scroll"/>
			</style>
			<block>
				<style>
					<width value="62sw"/>
					<maxWidth value="1100"/>
				</style>
				<bind name="repeat" value="statData.basicStats.colData; 'StatColumn'; {array:statData.basicStats.colData, statData: statData}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="PlayerSummaryDiagrams">
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<bind name="appear" value="'addedToStage'; 0.15; 0.36; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<style>
			<height value="190px"/>
			<flow value="horizontal"/>
		</style>
		<block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap5_feather" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<style>
				<height value="100%"/>
				<width value="1280:300,1920:310aw"/>
			</style>
			<block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_STATISTICS_BY_NATIONS_TOOLTIP'}"/>
				<styleClass value="$MiddleAligned"/>
				<block type="text">
					<styleClass value="$TextHeaderLargeBold"/>
					<bind name="text" value="'IDS_NATIONS'"/>
				</block>
			</block>
			<block>
				<style>
					<marginTop value="5px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'NationsDiagram';  {gamesPlayed: statData.diagStats.gamesPlayed, battlesByNation: statData.diagStats.nations}"/>
			</block>
		</block>
		<block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap5_feather" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<style>
				<height value="100%"/>
				<width value="1280:250,1920:310aw"/>
			</style>
			<block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_STATISTICS_BY_SHIP_TYPES_TOOLTIP'}"/>
				<styleClass value="$MiddleAligned"/>
				<block type="text">
					<styleClass value="$TextHeaderLargeBold"/>
					<text value="IDS_SHIP_TYPES"/>
				</block>
			</block>
			<block>
				<style>
					<marginTop value="5px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<bind name="instance" value="'ShipTypeDiagram'; {gamesPlayed: statData.diagStats.gamesPlayed, battlesByShipType: statData.diagStats.classes}"/>
			</block>
		</block>
		<block>
			<block className="BlurMapCustom">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<styleClass value="$FullsizeAbsolute"/>
				<style>
					<hitTest value="false"/>
				</style>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="mc_blurmap5_feather" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$Fullsize"/>
					<bind name="blurMap" value="0"/>
				</block>
			</block>
			<style>
				<height value="100%"/>
				<width value="1280:280,1920:310aw"/>
			</style>
			<block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_STATISTICS_BY_SHIP_LEVELS_TOOLTIP'}"/>
				<styleClass value="$MiddleAligned"/>
				<block type="text">
					<styleClass value="$TextHeaderLargeBold"/>
					<text value="IDS_LEVELS"/>
				</block>
			</block>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<height value="140px"/>
					<marginTop value="5px"/>
				</style>
				<bind name="repeat" value="statData.diagStats.levels.shipLevels; 'LineDiagramItem'; {maxValue: statData.diagStats.levels.maxValue}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="PlayerSummaryBattleHeroes">
		<bind name="appear" value="'addedToStage'; 0.15; 0.36; {alpha: 0, top: 10}; {alpha: 1, top: 0}"/>
		<styleClass value="$MiddleAligned"/>
		<block type="text">
			<styleClass value="$TextHeaderLargeBold"/>
			<bind name="text" value="'PlayerSummaryBattleHeroes'"/>
		</block>
	</block>
	<block className="NationsDiagram">
		<bind name="catch" value="'sectorRollOver'"/>
		<bind name="catch" value="'sectorRollOut'"/>
		<bind name="var" value="{showGamesPlayed: true, currentItemId: null}"/>
		<style>
			<marginLeft value="62px"/>
			<height value="140px"/>
		</style>
		<block>
			<style>
				<marginTop value="70px"/>
				<position value="absolute"/>
			</style>
			<bind name="repeat" value="battlesByNation.diagram; 'CircleDiagramItem'; {currentItemId: currentItemId, showGamesPlayed: showGamesPlayed}"/>
			<block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_GAME_PLAYED_TOOLTIP_PROFILE'}"/>
				<bind name="transition" value="showGamesPlayed; 0.2; {alpha: 0}; {alpha: 1}"/>
				<style>
					<position value="absolute"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<styleClass value="$TextHeaderLargeBold"/>
					<bind name="text" value="gamesPlayed"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<marginLeft value="75px"/>
				<flow value="vtile"/>
			</style>
			<bind name="style" value="'height';	battlesByNation.legend.length &lt;= 4 ? ((battlesByNation.legend.length * 35) +'px') : '140px' "/>
			<bind name="repeat" value="battlesByNation.legend; 'NationLegendItem'; {currentItemId: currentItemId, showGamesPlayed: showGamesPlayed}"/>
		</block>
	</block>
	<block className="ShipTypeDiagram">
		<bind name="catch" value="'sectorRollOver'"/>
		<bind name="catch" value="'sectorRollOut'"/>
		<bind name="var" value="{showGamesPlayed: true, currentItemId: null}"/>
		<style>
			<marginLeft value="62px"/>
			<height value="140px"/>
		</style>
		<block>
			<style>
				<marginTop value="70px"/>
				<position value="absolute"/>
			</style>
			<bind name="repeat" value="battlesByShipType.diagram; 'CircleDiagramItem'; {currentItemId: currentItemId, showGamesPlayed: showGamesPlayed}"/>
			<block>
				<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: 'IDS_GAME_PLAYED_TOOLTIP_PROFILE'}"/>
				<bind name="transition" value="showGamesPlayed; 0.2; {alpha: 0}; {alpha: 1}"/>
				<style>
					<position value="absolute"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<block type="text">
					<styleClass value="$TextHeaderLargeBold"/>
					<bind name="text" value="gamesPlayed"/>
				</block>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleVAligned"/>
			<style>
				<marginLeft value="75px"/>
				<flow value="vtile"/>
			</style>
			<bind name="style" value="'height';	battlesByShipType.legend.length &lt;= 4 ? ((battlesByShipType.legend.length * 35) +'px') : '140px' "/>
			<bind name="repeat" value="battlesByShipType.legend; 'ShipTypeLegendItem'; {currentItemId: currentItemId, showGamesPlayed: showGamesPlayed}"/>
		</block>
	</block>
	<block className="CircleDiagramItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: text}"/>
		<bind name="dispatch" value="'rollOver'; 'sectorRollOver'; {currentItemId: itemId, showGamesPlayed: false}"/>
		<bind name="dispatch" value="'rollOut'; 'sectorRollOut'; {currentItemId: itemId, showGamesPlayed: true}"/>
		<style>
			<position value="absolute"/>
			<left value="0px"/>
			<top value="0px"/>
		</style>
		<block>
			<style>
				<position value="absolute"/>
			</style>
			<block className="lesta.display.Sector" type="native">
				<bind name="color" value="color"/>
				<bind name="offset" value="offset"/>
				<bind name="arc" value="arc"/>
				<bind name="appear" value="'addedToStage'; 0.2; 0.4; {radius: 44}; {radius: 62}; 1"/>
				<bind name="transition" value="rollOver || ((currentItemId == itemId) &amp;&amp; !(showGamesPlayed)); 0.15; {radius: 62}; {radius: 65}"/>
				<params>
					<param name="innerRadius" value="44"/>
					<param name="radius" value="62"/>
				</params>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<styleClass value="$MouseDisable"/>
			<bind name="transition" value="rollOver || ((currentItemId == itemId) &amp;&amp; !(showGamesPlayed)); 0.2; {alpha: 0}; {alpha: 1}"/>
			<style>
				<position value="absolute"/>
				<top value="-15px"/>
			</style>
			<block type="text">
				<styleClass value="$TextHeaderLargeBold"/>
				<bind name="text" value="value"/>
			</block>
		</block>
	</block>
	<block className="NationLegendItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: text}"/>
		<bind name="dispatch" value="'rollOver'; 'sectorRollOver'; {currentItemId: itemId, showGamesPlayed: false}"/>
		<bind name="dispatch" value="'rollOut'; 'sectorRollOut'; {currentItemId: itemId, showGamesPlayed: true}"/>
		<style>
			<width value="55px"/>
			<backgroundColor value="0x01000000"/>
		</style>
		<block>
			<style>
				<width value="100%"/>
				<height value="35px"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$MiddleVAligned"/>
				<block className="lesta.display.Circle" type="native">
					<style>
						<marginTop value="10px"/>
						<marginRight value="10px"/>
					</style>
					<bind name="color" value="color"/>
					<bind name="appear" value="'addedToStage'; 0.3; 0; {radius: 0}; {radius: 4}"/>
					<bind name="transition" value="rollOver || ((currentItemId == itemId) &amp;&amp; !(showGamesPlayed)); 0.15; {radius: 4}; {radius: 6}"/>
				</block>
				<block>
					<bind name="instance" value="'NationFlagsTiny'; {shipCountry: itemId}"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ShipTypeLegendItem">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: text}"/>
		<bind name="dispatch" value="'rollOver'; 'sectorRollOver'; {currentItemId: itemId, showGamesPlayed: false}"/>
		<bind name="dispatch" value="'rollOut'; 'sectorRollOut'; {currentItemId: itemId, showGamesPlayed: true}"/>
		<block>
			<style>
				<width value="46px"/>
				<height value="35px"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<block>
				<styleClass value="$MiddleVAligned"/>
				<block className="lesta.display.Circle" type="native">
					<style>
						<marginTop value="4px"/>
						<marginLeft value="8px"/>
					</style>
					<bind name="color" value="color"/>
					<bind name="transition" value="rollOver || ((currentItemId == itemId) &amp;&amp; !(showGamesPlayed)); 0.15; {radius: 4}; {radius: 6}"/>
					<bind name="appear" value="'addedToStage'; 0.3; 0; {radius: 0}; {radius: 4}"/>
				</block>
				<block className="icon_ship" type="native">
					<styleClass value="$MiddleVAligned"/>
					<bind name="style" value="'marginLeft'; itemId == 'Destroyer' ? '8px' : '10px' "/>
					<bind name="gotoAndStop!" value="itemId"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="LineDiagramItem">
		<bind name="watch" value="'animationTime'; (0.2 + value * 0.0007)"/>
		<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: text}"/>
		<bind name="changeDispatch" value="value; 'valueChanged'"/>
		<bind name="changeDispatch" value="maxValue; 'valueChanged'"/>
		<bind name="dispatch" value="'addedToStage'; 'valueChanged'"/>
		<style>
			<width value="26px"/>
			<height value="100%"/>
		</style>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<bottom value="0px"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<block type="text">
					<bind name="appear" value="'valueChanged'; animationTime; 0.4; {intValue: 0}; {intValue: value}; 1"/>
					<style>
						<textAlign value="center"/>
						<width value="30px"/>
					</style>
					<styleClass value="$TextSecondary"/>
					<bind name="style" value="'fontSize'; maxValue &gt; 999 ? 11 : 13"/>
					<bind name="text" value="value"/>
				</block>
			</block>
			<block>
				<bind name="appear" value="'valueChanged'; animationTime; 0.4; {height: 0}; {height: value ? ((value/maxValue) * 100) : 1}; 1"/>
				<styleClass value="$MiddleAligned"/>
				<style>
					<height value="0px"/>
					<width value="18px"/>
				</style>
				<bind name="style" value="'backgroundColor'; _columnColor ? _columnColor : 0xFF2DF0C9"/>
			</block>
			<block>
				<style>
					<marginTop value="8px"/>
				</style>
				<styleClass value="$MiddleAligned"/>
				<block type="text">
					<styleClass value="$TextDefaultNM"/>
					<bind name="text" value="label"/>
				</block>
			</block>
		</block>
	</block>
	<block className="LargeTextChoosedItemRendererRankedSeason">
		<style>
			<height value="35px"/>
		</style>
		<block type="text">
			<style>
				<hitTest value="false"/>
				<marginLeft value="4px"/>
				<marginTop value="1px"/>
			</style>
			<styleClass value="$TextDockBig"/>
			<bind name="text" value="_item.id == 0 ? ('IDS_ALL_SEASONS') : ('IDS_SEASON_TITLE_' + (tr(_item.id)))"/>
		</block>
	</block>
	<block className="TextListItemRendererRankedSeason">
		<styleClass value="$ContextMenuListItem"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<block className="MenuItemWithIconAndSelection">
			<styleClass value="$Fullsize"/>
			<bind name="name" value="id == 0 ? ('IDS_ALL_SEASONS') : ('IDS_SEASON_TITLE_' + id)"/>
			<style>
				<flow value="horizontal"/>
			</style>
			<block>
				<bind name="visible" value="id != 0"/>
				<styleClass value="$MiddleVAligned"/>
				<bind name="style" value="'backgroundImage'; 'url:' + iconPath"/>
				<bind name="scaleX" value="0.4"/>
				<bind name="scaleY" value="0.4"/>
				<style>
					<width value="28px"/>
					<height value="22px"/>
					<marginLeft value="6px"/>
				</style>
			</block>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="selected" value="(_curItemIndex == $index)"/>
			</block>
			<block type="text">
				<style>
					<maxWidth value="136"/>
					<marginLeft value="6px"/>
				</style>
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<bind name="class" value="(_curItemIndex == $index) == true ? '$Bold' : '$None'"/>
				<bind name="text" value="(_toLowerCase ? toLowerCase(tr(id == 0 ? ('IDS_ALL_SEASONS') : ('IDS_SEASON_TITLE_' + id)))
											: (tr(id == 0 ? ('IDS_ALL_SEASONS') : ('IDS_SEASON_TITLE_' + id))))"/>
			</block>
		</block>
		<bind name="dispatch" value="'click'; ('ItemChooserInnerEvent.' + _onItemSelectedEvent); {_curItemIndex: $index}"/>
		<bind name="dispatch" value="'click'; ('ItemChooserInnerEventDublicate.' + _onItemSelectedEvent)"/>
	</block>
	<block className="ShipRowItem">
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; vehicleId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="tooltip" value="'ShipStatsTooltip'; { _vehicleId: vehicleId, _maxWidth: 250}"/>
		<style>
			<width value="100%"/>
			<height value="36px"/>
		</style>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$PxHorizontalCorrection"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="clickSplit"/>
			<style>
				<marginTop value="-1px"/>
				<marginBottom value="2px"/>
			</style>
			<bind name="action" value="'left_click'; 'vehicleIdChanged'; {vehicleId:vehicleId}"/>
			<bind name="selected" value="currentVehicleId == vehicleId"/>
			<bind name="style" value="'alpha'; currentVehicleId == vehicleId ? 2 : 1"/>
		</block>
		<block>
			<style>
				<height value="100%"/>
				<hitTest value="false"/>
			</style>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<block>
				<style>
					<width value="100%"/>
					<marginRight value="2px"/>
				</style>
				<bind name="instance" value="'ShipFlagIconLevelName'; {shipInfo: shipInfo}"/>
			</block>
			<block type="text">
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$TextHeaderBold"/>
				<bind name="text" value="(userPrefs.shipStatsSortIndex == 1)	? battlesCount : winRate"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
	</block>
	<block className="AllShipsSelectedItem">
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		<bind name="primaryEntityDH" value="'shipEntity'; CC.ship; vehicleId; 'evUpdate'"/>
		<bind name="watchDH" value="'shipInfo'; ['shipEntity.ship.evUpdate', 'shipEntity.ship.evCurrentSkinChanged']; shipEntity.ship"/>
		<bind name="watchDH" value="'shipInfo' + 'Slim'; ['shipEntity.slimClientComponent.evUpdate']; shipEntity.slimClientComponent"/>
		<bind name="watch" value="'currentVehicleId'; 0"/>
		<bind name="var" value="{vehicleId:0}"/>
		<style>
			<width value="100%"/>
			<height value="36px"/>
		</style>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block className="dock_submenu_item" type="native">
			<styleClass value="$PxHorizontalCorrection"/>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="clickSplit"/>
			<style>
				<marginBottom value="2px"/>
				<marginTop value="2px"/>
			</style>
			<bind name="action" value="'left_click'; 'vehicleIdChanged'; {vehicleId:0}"/>
			<bind name="selected" value="currentVehicleId == vehicleId"/>
			<bind name="style" value="'alpha'; currentVehicleId == vehicleId ? 2 : 1"/>
		</block>
		<block>
			<styleClass value="$InfoBlockHorizontalIndent"/>
			<style>
				<height value="100%"/>
				<hitTest value="false"/>
			</style>
			<block type="text">
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$TextHeaderBold"/>
				<bind name="text" value="tr('IDS_ALL_VEHICLES') +  ' ' + '(' + shipListLength + ')'"/>
			</block>
			<block type="text">
				<styleClass value="$MiddleVAligned"/>
				<style>
					<right value="0"/>
					<position value="absolute"/>
				</style>
				<styleClass value="$TextHeaderBold"/>
				<bind name="text" value="(userPrefs.shipStatsSortIndex == 1)	? gamesPlayed : totalWinRate"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
	</block>
	<block className="ShipFlagIconLevelName">
		<style>
			<flow value="horizontal"/>
			<width value="100%"/>
		</style>
		<block>
			<style>
				<marginTop value="7px"/>
				<alpha value="0.7"/>
			</style>
			<bind name="instance" value="'NationFlagsTiny'; {shipCountry: shipInfo.flagName}"/>
		</block>
		<block>
			<style>
				<marginLeft value="-15px"/>
				<marginTop value="12px"/>
			</style>
			<block>
				<bind name="visible" value="shipInfo.isElite || shipInfo.isPremium || shipInfo.uiSpecial"/>
				<style>
					<position value="absolute"/>
					<left value="-5px"/>
					<top value="-8px"/>
				</style>
				<block className="icon_wreath" type="native">
					<bind name="gotoAndStop!" value="(shipInfo.isPremium || shipInfo.uiSpecial) 	? 'premium' : 'elite'"/>
				</block>
			</block>
			<block className="icon_ship" type="native">
				<bind name="gotoAndStop!" value="shipInfo.isPremium || shipInfo.uiSpecial ? shipInfo.subtype + '_P' : shipInfo.subtype"/>
			</block>
		</block>
		<block type="text">
			<style>
				<marginLeft value="6px"/>
				<marginTop value="4px"/>
				<multiline value="false"/>
			</style>
			<styleClass value="$TextHeaderBold"/>
			<bind name="class" value="shipInfo.isPremium || shipInfo.uiSpecial ? '$FontColorGold' : '$FontColorWhite'"/>
			<bind name="text" value="shipInfo.levelRome"/>
		</block>
		<block type="text">
			<style>
				<width value="100%"/>
				<marginLeft value="3px"/>
				<marginTop value="4px"/>
			</style>
			<bind name="style" value="'multiline'; _multiline ? _multiline : false"/>
			<styleClass value="$TextHeaderBold"/>
			<bind name="class" value="'$LetterSpacingSmall'"/>
			<bind name="class" value="shipInfo.isPremium || shipInfo.uiSpecial ? '$FontColorGold' : '$FontColorWhite'"/>
			<bind name="text" value="toUpperCase(tr(shipInfo.nameIDS))"/>
		</block>
	</block>
	<block className="StatsRowHint">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<style>
			<width value="300px"/>
		</style>
		<block className="DeclareBlurLayer">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="transparentPixel" type="native">
				<bind name="blurLayer" value="0"/>
			</block>
			<style>
				<position value="absolute"/>
			</style>
		</block>
		<block className="BlurMap">
			<bind name="visible" value="optionData.blurEnabled"/>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<style>
				<hitTest value="false"/>
			</style>
			<styleClass value="$FullsizeAbsolute"/>
			<block className="mc_blurmap_medium" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="blurMap" value="0"/>
			</block>
			<block className="inner_panel" type="native">
				<style>
					<alpha value="0.5"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="optionData.contrast"/>
		</block>
		<block className="hint_panel" type="native">
			<style>
				<position value="absolute"/>
			</style>
			<styleClass value="$Fullsize"/>
		</block>
		<block type="text">
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<styleClass value="$TextHeaderBigDefault"/>
			<style>
				<maxWidth value="276"/>
			</style>
			<bind name="text" value="tooltipText"/>
		</block>
		<block className="HorizontalDivider">
			<styleClass value="$PxHorizontalCorrection"/>
			<style>
				<width value="100%"/>
				<height value="3px"/>
			</style>
			<block className="divider_h" type="native">
				<styleClass value="$Fullsize"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="_hintVehicleId &gt; 0"/>
			<styleClass value="$InfoBlockIndent"/>
			<block type="text">
				<styleClass value="$TextHeaderBigDefault"/>
				<bind name="class" value="'$FontColorBlueish'"/>
				<bind name="text" value="'IDS_ON_SHIP_STATS'"/>
			</block>
			<block>
				<style>
					<marginLeft value="6px"/>
					<marginTop value="-4px"/>
					<width value="100%"/>
				</style>
				<bind name="instance" value="'ShipFlagIconLevelName'; {shipInfo: shipInfo, _multiline: true}"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="DefaultButton">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'operationsAccountLocked';	['resourceEntity.accountResource.evOperationsLockChanged'];	resourceEntity.accountResource.operationsLocked"/>
		<bind name="style" value="'width'; _width ? _width : '100%'"/>
		<bind name="name" value="_containerName ? _containerName : null"/>
		<block className="button_default" type="native">
			<bind name="style" value="'width'; _width ? _width : '100%'"/>
			<bind name="label" value="_label"/>
			<bind name="focus" value="_focusIndex; _defaultFocused"/>
			<bind name="focusable" value="_focusIndex ? true : false"/>
			<bind name="enabled" value="_enabled &amp;&amp; (_isTransactionBtn ? !(operationsAccountLocked) : true)"/>
			<bind name="event" value="'buttonClick'; _method ? _method : null"/>
			<bind name="request" value="'buttonClick'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
			<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams"/>
			<bind name="name" value="_name ? _name : null"/>
			<bind name="input"/>
			<block>
				<bind name="visible" value="_isExternal == true"/>
				<style>
					<position value="absolute"/>
					<top value="7px"/>
					<right value="4px"/>
					<hitTest value="false"/>
				</style>
				<block className="icon_out_grey" type="native"/>
			</block>
		</block>
	</block>
	<block className="DefaultButtonBig">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'operationsAccountLocked';	['resourceEntity.accountResource.evOperationsLockChanged'];	resourceEntity.accountResource.operationsLocked"/>
		<bind name="style" value="'width'; _width ? _width : '100%'"/>
		<bind name="name" value="_containerName ? _containerName : null"/>
		<block className="button_default_big" type="native">
			<style>
				<width value="100%"/>
			</style>
			<bind name="name" value="_name ? _name : null"/>
			<bind name="input"/>
			<bind name="label" value="_label"/>
			<bind name="enabled" value="_enabled &amp;&amp; (_isTransactionBtn ? !(operationsAccountLocked) : true)"/>
			<bind name="event" value="'buttonClick'; _method ? _method : null"/>
			<bind name="request" value="'buttonClick'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
			<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams ? _actionParams : {}"/>
		</block>
	</block>
	<block className="DefaultButtonCostMedium">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'operationsAccountLocked';	['resourceEntity.accountResource.evOperationsLockChanged'];	resourceEntity.accountResource.operationsLocked"/>
		<bind name="tooltip" value="'DiscountTooltip'; priceInfo.basePrice &amp;&amp; (priceInfo.finalPrice != priceInfo.basePrice) ? { priceInfo: priceInfo, _isExternal: _isExternal } : null"/>
		<style>
			<width value="100%"/>
		</style>
		<bind name="style" value="'height'; _height ? _height : 'auto'"/>
		<bind name="name" value="_name ? _name : null"/>
		<block className="button_default_no_label" type="native">
			<style>
				<width value="100%"/>
			</style>
			<bind name="style" value="'height'; _height ? _height : 'auto'"/>
			<bind name="focus" value="_focusIndex; _defaultFocused"/>
			<bind name="enabled" value="_enabled &amp;&amp; (_isTransactionBtn ? !(operationsAccountLocked) : true)"/>
			<bind name="dispatch" value="'buttonClick'; _dispatchEvent ? _dispatchEvent : null"/>
			<bind name="event" value="'buttonClick'; _method ? _method : null"/>
			<bind name="request" value="'buttonClick'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
			<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams ? _actionParams : {}"/>
			<bind name="selected" value="_selected"/>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginTop value="3px"/>
					<marginBottom value="4px"/>
					<hitTest value="false"/>
				</style>
				<bind name="style" value="'alpha'; _enabled ? 1 : 0.55"/>
				<block type="text">
					<styleClass value="$TextDefaultBold"/>
					<bind name="class" value="'$FontColorDefaultButtonUp'"/>
					<bind name="class" value="_enabled ? '$None' : '$FontColorAlmostBlack'"/>
					<bind name="text" value="_label"/>
				</block>
				<block>
					<bind name="visible" value="priceInfo.finalPrice &gt; 0"/>
					<style>
						<marginLeft value="4px"/>
					</style>
					<styleClass value="$MiddleVAligned"/>
					<bind name="instance" value="'PriceTag'; priceInfo.finalPrice &gt; 0 ? {priceInfo: priceInfo, _showDiscountTag: _showDiscountTag } : null"/>
				</block>
				<block>
					<bind name="visible" value="_isExternal == true"/>
					<style>
						<marginTop value="2px"/>
						<marginLeft value="8px"/>
					</style>
					<block className="icon_out_grey" type="native"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ButtonCostSpecial">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'operationsAccountLocked';	['resourceEntity.accountResource.evOperationsLockChanged'];	resourceEntity.accountResource.operationsLocked"/>
		<style>
			<width value="130px"/>
		</style>
		<block className="button_default_always_hover" type="native">
			<style>
				<width value="100%"/>
			</style>
			<bind name="enabled" value="(_enabled &amp;&amp; !(operationsAccountLocked))"/>
			<bind name="event" value="'buttonClick'; _method ? _method : null"/>
			<bind name="request" value="'buttonClick'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
			<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams ? _actionParams : {}"/>
			<bind name="input"/>
			<bind name="label" value="_label"/>
		</block>
	</block>
	<block className="DefaultButtonCostSmall">
		<bind name="firstEntityDH" value="'resourceEntity'; CC.accountResource"/>
		<bind name="watchDH" value="'operationsAccountLocked';	['resourceEntity.accountResource.evOperationsLockChanged'];	resourceEntity.accountResource.operationsLocked"/>
		<bind name="tooltip" value="'DiscountTooltip'; priceInfo.basePrice &amp;&amp; (priceInfo.finalPrice != priceInfo.basePrice) ? { priceInfo: priceInfo } : null"/>
		<block className="button_default_no_label_small" type="native">
			<bind name="enabled" value="(_enabled &amp;&amp; !(operationsAccountLocked))"/>
			<bind name="event" value="'buttonClick'; _method ? _method : null"/>
			<bind name="request" value="'buttonClick'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
			<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams ? _actionParams : {}"/>
			<block>
				<style>
					<marginBottom value="1px"/>
					<marginRight value="18px"/>
					<marginLeft value="18px"/>
					<hitTest value="false"/>
				</style>
				<bind name="style" value="'alpha'; _enabled ? 1 : 0.55"/>
				<block type="text">
					<styleClass value="$TextSecondaryBold"/>
					<bind name="class" value="'$FontColorDefaultButtonUp'"/>
					<bind name="class" value="_enabled ? '$None' : '$FontColorAlmostBlack'"/>
					<bind name="text" value="_label"/>
				</block>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<marginLeft value="2px"/>
					</style>
					<bind name="instance" value="'PriceTag'; priceInfo.finalPrice &gt; 0 ? {priceInfo: priceInfo, _small: true, _showDiscountTag: _showDiscountTag} : null"/>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="ButtonSpecial">
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController"/>
		<bind name="name" value="_name"/>
		<block className="button_special_no_label" type="native">
			<bind name="soundSet" value="'hard_button'"/>
			<bind name="enabled" value="_enabled"/>
			<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams ? _actionParams : {}"/>
			<bind name="request" value="'buttonClick'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
			<bind name="style" value="'width'; _width ? _width : '100%f'"/>
			<bind name="focus" value="_focusIndex; _defaultFocused"/>
			<bind name="focusable" value="_focusIndex ? true : false"/>
			<block>
				<bind name="class" value="_width ? '$MiddleAligned' : '$None'"/>
				<style>
					<width value="100%f"/>
				</style>
				<block type="text">
					<style>
						<marginRight value="18px"/>
						<marginLeft value="18px"/>
						<marginTop value="3px"/>
						<marginBottom value="4px"/>
						<hitTest value="false"/>
					</style>
					<bind name="class" value="_enabled 	? '$FontDropShadowFilter1' 	: '$FontDropShadowWhite'"/>
					<bind name="class" value="_enabled 	? rollOver &amp;&amp; !(mouseDown) 	? '$FontColorDefault' 
																	: '$FontColorSpecialButton'
										: '$FontColorAlmostBlack'"/>
					<styleClass value="$TextDefaultBold"/>
					<bind name="text" value="_label"/>
				</block>
			</block>
		</block>
	</block>
	<block className="DockButton">
		<style>
			<width value="100%"/>
		</style>
		<block className="button_dock" type="native">
			<bind name="name" value="_name"/>
			<style>
				<width value="100%"/>
				<height value="30px"/>
			</style>
			<bind name="enabled" value="_enabled"/>
			<bind name="dispatch" value="'buttonClick'; _dispatchEvent; {}"/>
			<block type="text">
				<styleClass value="$TextDefaultBold"/>
				<styleClass value="$MiddleAligned"/>
				<style>
					<marginTop value="3px"/>
					<mouseEnabled value="false"/>
					<mouseChildren value="false"/>
				</style>
				<bind name="style" value="'alpha'; _enabled ? 1 : 0.55"/>
				<bind name="text" value="_label"/>
			</block>
		</block>
	</block>
	<block className="ResizableButtonDock">
		<style>
			<width value="100%f"/>
		</style>
		<bind name="watch" value="'enabled'; _enabled != false"/>
		<bind name="name" value="_name"/>
		<bind name="controller" value="lesta.unbound.controls.UbInteractiveController; null; 'resizableButtonDock_'"/>
		<bind name="clickSplit"/>
		<bind name="request" value="'left_click'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
		<bind name="action" value="'left_click'; _action ? _action : null; _actionParams ? _actionParams : {}"/>
		<bind name="transition" value="resizableButtonDock_rollOver &amp;&amp; !(resizableButtonDock_mouseDown) &amp;&amp; enabled; 0.1; {alpha: 0.65}; {alpha: 1}; {alpha: 0.65}"/>
		<bind name="soundOn" value="'left_click'; 'press'; 'default_button'"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginLeft value="-10px"/>
				<marginRight value="-10px"/>
				<marginBottom value="-9px"/>
				<marginTop value="-10px"/>
			</style>
			<bind name="style" value="'hitTest'; enabled"/>
			<block className="button_dock_bg" type="native">
				<styleClass value="$Fullsize"/>
				<bind name="gotoAndStop!" value="'down'"/>
			</block>
		</block>
		<block type="text">
			<style>
				<hitTest value="false"/>
				<mouseEnabled value="false"/>
				<mouseChildren value="false"/>
			</style>
			<bind name="style" value="'alpha'; enabled ? 1 : 0.65"/>
			<styleClass value="$TextDefaultBoldNM"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<bind name="text" value="_label"/>
		</block>
	</block>
	<block className="InfopanelButton">
		<bind name="request" value="'buttonClick'; _request ? _request : null; _requestParams ? _requestParams : {}"/>
		<bind name="action" value="'buttonClick'; _action ? _action : null; _actionParams ? _actionParams : {}"/>
		<bind name="dispatch" value="'mouseOver'; 'overInfopanelButton'; {infopanelButtonOverAlpha: 1}"/>
		<bind name="dispatch" value="'mouseOut'; 'upInfopanelButton'; 	{infopanelButtonOverAlpha: 0.6}"/>
		<bind name="dispatch" value="'mouseDown'; 'downInfopanelButton'; {infopanelButtonOverAlpha: 0.3}"/>
		<bind name="catch" value="'upInfopanelButton'}"/>
		<bind name="catch" value="'overInfopanelButton'"/>
		<bind name="catch" value="'downInfopanelButton'"/>
		<bind name="tooltip" value="'SimpleTooltip'; _tooltipIDS ? { tooltipText: _tooltipIDS } : null"/>
		<bind name="style" value="'alpha'; infopanelButtonOverAlpha"/>
		<bind name="name" value="_name"/>
		<block className="button_infopanel_no_label" type="native">
			<bind name="style" value="'width'; _width ? _width : '150px'"/>
			<bind name="style" value="'height'; _height ? _height : '40px'"/>
			<block>
				<styleClass value="$Fullsize"/>
				<style>
					<hitTest value="false"/>
				</style>
				<block>
					<bind name="visible" value="_backgroundImage != null"/>
					<bind name="style" value="'width'; _iconWidth"/>
					<bind name="style" value="'height'; _iconHeight"/>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<marginLeft value="8px"/>
						<backgroundStretchX value="true"/>
						<backgroundStretchY value="true"/>
					</style>
					<bind name="style" value="'backgroundImage'; _backgroundImage"/>
				</block>
				<block>
					<styleClass value="$MiddleVAligned"/>
					<styleClass value="$MiddleAlignedAbsolutely"/>
					<block type="text">
						<styleClass value="$TextDefaultBoldNM"/>
						<bind name="text" value="toUpperCase(tr(_label))"/>
					</block>
				</block>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<css name="$TextDockBig">
		<fontFamily value="$WWSDefaultFontBold"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="21"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0x9CBABA"/>
	</css>
	<block className="ItemChooser">
		<bind name="watch" value="'_curItemIndex'; curIndex"/>
		<bind name="watch" value="'_direction'; curDirection"/>
		<bind name="watch" value="'isEnabled'; _disabled != true"/>
		<bind name="name" value="_name"/>
		<bind name="var" value="{_lastItemIndex: curIndex}"/>
		<bind name="style" value="'width'; _width ? _width : 'auto'"/>
		<bind name="catch" value="('ItemChooserInnerEvent.' + onItemSelectedEvent)"/>
		<block type="text">
			<bind name="name" value="_items[curIndex]"/>
		</block>
		<bind name="catch" value="('ItemChooserInnerEventDublicate.' + onItemSelectedEvent); {	_direction: (_curItemIndex==_lastItemIndex) ? !_direction : false,
																			_lastItemIndex: _curItemIndex}"/>
		<bind name="dispatch" value="('ItemChooserInnerEventDublicate.' + onItemSelectedEvent); ('ItemChooser.'+onItemSelectedEvent); {_curItemIndex: _curItemIndex, _direction: _direction}; false; 0.001"/>
		<bind name="tooltip" value="_customDropdown ? _customDropdown : 'ItemChooserDropdown';
											_items.length &gt; 1 	? {	_items: _items, _listItemRenderer: _listItemRenderer, _listItemRendererData: _listItemRendererData, _onItemSelectedEvent: onItemSelectedEvent,
																	_curItemIndex: _curItemIndex, _maxDropDownHeight: _maxDropDownHeight, _dropDownWidth: _dropDownWidth, _showHint: _showHint, _text: _text}
																: null;
											TooltipBehaviour.verticalInfoWidget; null; 'dropdownChooserListIsVisible'"/>
		<bind name="var" value="{ _tooltipData: !_itemChooserTooltipText || (_items.length &lt;= 1) ? null : { tooltipText: _itemChooserTooltipText } }"/>
		<bind name="tooltip" value="'SimpleTooltip'; _tooltipData"/>
		<bind name="style" value="'hitTest'; _items.length &gt; 1 &amp;&amp; isEnabled"/>
		<bind name="watch" value="'isItemNavigateVisible'; (_items.length &gt; 1 &amp;&amp; isEnabled)"/>
		<style>
			<flow value="horizontal"/>
		</style>
		<bind name="style" value="'marginRight'; isItemNavigateVisible ? '-8px' : '0px'"/>
		<block className="button_dock" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<marginTop value="1px"/>
				<marginBottom value="1px"/>
			</style>
			<params>
				<param name="soundSet" value="dropmenu_button"/>
			</params>
			<bind name="enabled" value="_items.length &gt; 1"/>
			<bind name="selected" value="dropdownChooserListIsVisible"/>
		</block>
		<block>
			<bind name="style" value="'width'; _width ? '100%f' : 'auto'"/>
			<bind name="instance" value="_choosedItemRenderer; {_item: _items[curIndex], _choosedItemRendererParams: _choosedItemRendererParams}"/>
		</block>
		<block>
			<bind name="visible" value="isItemNavigateVisible"/>
			<style>
				<marginLeft value="5px"/>
				<marginRight value="4px"/>
				<hitTest value="false"/>
			</style>
			<styleClass value="$MiddleVAligned"/>
			<block className="icon_navigate" type="native">
				<bind name="gotoAndStop!" value="'down'"/>
			</block>
		</block>
	</block>
	<block className="ItemChooserDropdown">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'shipOverview'"/>
		<bind name="transition" value="shipOverview.enabled; shipOverview.enabled ? 0.4 : 0.25; {alpha: 1}; {alpha: 0}; {alpha: 1}; 2; !(shipOverview.enabled) &amp;&amp; !(inPort) ? 0.15 : 0.5"/>
		<bind name="style" value="'hitTest'; !(shipOverview.enabled)"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<bind name="style" value="'width'; _dropDownWidth ? _dropDownWidth : '180px'"/>
		<block className="MenuBg">
			<styleClass value="$FullsizeAbsolute"/>
			<block className="DeclareBlurLayer">
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<bind name="visible" value="optionData.blurEnabled"/>
				<block className="transparentPixel" type="native">
					<bind name="blurLayer" value="0"/>
				</block>
				<style>
					<position value="absolute"/>
				</style>
			</block>
			<block className="BlurMap">
				<bind name="visible" value="optionData.blurEnabled"/>
				<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
				<style>
					<hitTest value="false"/>
				</style>
				<styleClass value="$FullsizeAbsolute"/>
				<block className="mc_blurmap_medium" type="native">
					<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
					<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
					<styleClass value="$FullsizeAbsolute"/>
					<bind name="blurMap" value="0"/>
				</block>
				<block className="inner_panel" type="native">
					<style>
						<alpha value="0.5"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<block className="contrast_panel" type="native">
				<bind name="visible" value="optionData.contrast &amp;&amp; !(true)"/>
				<styleClass value="$FullsizeAbsolute"/>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="!(true)"/>
				<block className="hint_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
				</block>
			</block>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="visible" value="true"/>
				<block className="dock_panel" type="native">
					<styleClass value="$FullsizeAbsolute"/>
					<style>
						<marginBottom value="-19px"/>
						<marginRight value="-14px"/>
						<marginLeft value="-14px"/>
						<marginTop value="-9px"/>
					</style>
				</block>
			</block>
		</block>
		<block>
			<style>
				<backgroundColor value="0x01000000"/>
				<hitTest value="false"/>
			</style>
			<params>
				<param name="name" value="ItemChooserDropdown"/>
			</params>
			<styleClass value="$FullsizeAbsolute"/>
		</block>
		<block>
			<styleClass value="$DefaultScrollBar"/>
			<bind name="style" value="'maxHeight'; _maxDropDownHeight ? _maxDropDownHeight : 220"/>
			<style>
				<width value="100%"/>
				<overflow value="scroll"/>
			</style>
			<block>
				<style>
					<width value="100%"/>
				</style>
				<bind name="repeat" value="_items; _listItemRenderer; {_onItemSelectedEvent: _onItemSelectedEvent, _curItemIndex: _curItemIndex, _listItemRendererData: _listItemRendererData}"/>
			</block>
		</block>
		<block>
			<bind name="visible" value="!(rankedBattlesSeason.denyReason &amp; RBDeny.NO_SEASON) &amp;&amp; (_showHint == true)"/>
			<styleClass value="$InfoBlockIndent"/>
			<bind name="instance" value="'StatusLineWithIcon'; { _text: _text, _maxWidth: 140}"/>
		</block>
	</block>
	<block className="BluishTextChoosedItemRenderer">
		<style>
			<height value="32px"/>
		</style>
		<block type="text">
			<style>
				<hitTest value="false"/>
				<marginLeft value="4px"/>
				<marginTop value="1px"/>
			</style>
			<styleClass value="$TextHeaderBold"/>
			<bind name="class" value="'$FontColorBlueish'"/>
			<bind name="text" value="(tr(_item))"/>
		</block>
	</block>
	<block className="LowerCaseTextListItemRenderer">
		<styleClass value="$ContextMenuListItem"/>
		<bind name="var" value="{_toLowerCase: true}"/>
		<block className="MenuItemWithSelection">
			<styleClass value="$Fullsize"/>
			<bind name="name" value="$value"/>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="selected" value="(_curItemIndex == $index)"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$ContextMenuListItemContent"/>
				<bind name="class" value="(_curItemIndex == $index) == true ? '$Bold' : '$None'"/>
				<bind name="text" value="(_toLowerCase ? toLowerCase(tr($value))
											: (tr($value)))"/>
			</block>
		</block>
		<bind name="dispatch" value="'click'; ('ItemChooserInnerEvent.' + _onItemSelectedEvent); {_curItemIndex: $index}"/>
		<bind name="dispatch" value="'click'; ('ItemChooserInnerEventDublicate.' + _onItemSelectedEvent)"/>
	</block>
	<block className="LargeTextChoosedItemRenderer">
		<style>
			<height value="35px"/>
		</style>
		<block type="text">
			<style>
				<hitTest value="false"/>
				<marginLeft value="4px"/>
				<marginTop value="1px"/>
			</style>
			<styleClass value="$TextDockBig"/>
			<bind name="text" value="(tr(_item))"/>
		</block>
	</block>
	<block className="TextListItemRenderer">
		<styleClass value="$ContextMenuListItem"/>
		<block className="MenuItemWithSelection">
			<styleClass value="$Fullsize"/>
			<bind name="name" value="$value"/>
			<block className="dock_submenu_item" type="native">
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="selected" value="(_curItemIndex == $index)"/>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<styleClass value="$MiddleVAligned"/>
				<styleClass value="$ContextMenuListItemContent"/>
				<bind name="class" value="(_curItemIndex == $index) == true ? '$Bold' : '$None'"/>
				<bind name="text" value="(_toLowerCase ? toLowerCase(tr($value))
											: (tr($value)))"/>
			</block>
		</block>
		<bind name="dispatch" value="'click'; ('ItemChooserInnerEvent.' + _onItemSelectedEvent); {_curItemIndex: $index}"/>
		<bind name="dispatch" value="'click'; ('ItemChooserInnerEventDublicate.' + _onItemSelectedEvent)"/>
	</block>
	<block className="TextChoosedItemRenderer">
		<style>
			<height value="33px"/>
		</style>
		<bind name="style" value="'width'; _choosedItemRendererParams.width ? _choosedItemRendererParams.width : 'auto'"/>
		<block type="text">
			<style>
				<hitTest value="false"/>
				<marginLeft value="5px"/>
				<marginTop value="4px"/>
			</style>
			<bind name="class" value="_choosedItemRendererParams.fontClass ? _choosedItemRendererParams.fontClass : '$TextDockBig'"/>
			<bind name="text" value="(tr(_item))"/>
		</block>
	</block>
	<block className="PlayerSummaryPve">
		<styleClass value="$MiddleAligned"/>
		<style>
			<flow value="horizontal"/>
			<marginBottom value="24px"/>
		</style>
		<bind name="collectionDH" value="CC.rankedSeasonHistory; 'statDataEntities'; 'statToShow'"/>
		<bind name="entityDH" value="'statDataEntity'; statDataEntities[0].id"/>
		<bind name="watchDH" value="'statData'; ['statDataEntity.dataComponent.evDataChanged']; statDataEntity.dataComponent.data"/>
		<bind name="repeat" value="statData.basicStats.colData; 'PlayerSummaryItemPveRow'; {}"/>
	</block>
	<block className="PlayerSummaryItemPveRow">
		<style>
			<marginTop value="40px"/>
			<width value="1280:274,1920:310aw"/>
		</style>
		<block className="BlurMapCustom">
			<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
			<styleClass value="$FullsizeAbsolute"/>
			<style>
				<hitTest value="false"/>
			</style>
			<bind name="visible" value="optionData.blurEnabled"/>
			<block className="mc_blurmap5_feather" type="native">
				<bind name="appear" value="'startShow'; 0.3; 0; {alpha: 0}; {alpha: 1}"/>
				<bind name="appear" value="'startHide'; 0.15; 0; {alpha: 1}; {alpha: 0}"/>
				<styleClass value="$Fullsize"/>
				<bind name="blurMap" value="0"/>
			</block>
		</block>
		<block type="text">
			<style>
				<textAlign value="center"/>
				<width value="100%"/>
				<height value="720:70,1080:120ah"/>
			</style>
			<bind name="style" value="'marginTop'; $index == 1 ? '-15px' : '0px'"/>
			<styleClass value="$TextDefaultBold25NM"/>
			<bind name="text" value="'IDS_SUMMARY_HEADER_' + toUpperCase(block)"/>
		</block>
		<block>
			<style>
				<height value="720:70,1080:120ah"/>
				<minWidth value="70"/>
				<backgroundColor value="0x01000000"/>
			</style>
			<bind name="style" value="'marginTop'; $index == 1 ? '15px' : '0px'"/>
			<styleClass value="$MiddleAligned"/>
			<bind name="tooltip" value="'SimpleTooltip'; {tooltipText: tr('IDS_PVE_OPERATION_BATTLES_PLAYED_TOOLTIP_' + $index)}"/>
			<block type="text">
				<styleClass value="$MiddleAligned"/>
				<styleClass value="$ResultsReward"/>
				<bind name="text" value="gamesPlayed"/>
			</block>
		</block>
		<block>
			<styleClass value="$MiddleAligned"/>
			<style>
				<width value="274px"/>
				<marginTop value="720:40,1080:80ah"/>
			</style>
			<block>
				<styleClass value="$MiddleAligned"/>
				<style>
					<height value="140px"/>
					<marginTop value="5px"/>
				</style>
				<bind name="repeat" value="diag.battles; 'LineDiagramItem'; {maxValue: diag.maxValue, _columnColor: 0xFFf3ae5a}"/>
				<style>
					<flow value="horizontal"/>
				</style>
			</block>
		</block>
	</block>
	<block className="MainHUDPCContainer">
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="firstEntityDH" value="'cameraEntity'; CC.camera"/>
		<bind name="watchDH" value="'tacticalMap'; ['cameraEntity.camera.evTacticalStateChanged']; cameraEntity.camera.isTactical"/>
		<bind name="firstEntityDH" value="'selfVehicleEntity'; CC.selfVehicle"/>
		<bind name="firstEntityDH" value="'avatar'; CC.playerAvatar"/>
		<bind name="watchDH" value="'isAlive'; ['avatar.health.evKilled']; avatar.health.isAlive"/>
		<bind name="watch" value="'isSubmarineHudVisible'; (avatar.avatar.ship.ref.ship.subtype == ShipTypes.Submarine) &amp;&amp; isAlive"/>
		<bind name="watch" value="'isAircraftHudVisible'; (avatar.avatar.ship.ref.ship.subtype == ShipTypes.AircraftCarrier)"/>
		<block>
			<styleClass value="$Fullsize"/>
			<bind name="mouseEnabled" value="false"/>
			<bind name="mouseChildren" value="false"/>
			<block>
				<styleClass value="$FullsizeAbsolute"/>
				<bind name="transition" value="!tacticalMap; 0.1; {alpha: 0}; {alpha: 1}; {alpha: 0}; 2"/>
				<bind name="instance" value="'TeamStructure'; {}"/>
				<bind name="instance" value="'CentralDangersIndicationContainer'; {}"/>
				<bind name="instance" value="'BattleIndicatorsContainer'; {}"/>
			</block>
			<bind name="instance" value="'CombatLogPanel'; {}"/>
			<bind name="instance" value="'DogTagInHUD'; {}"/>
			<bind name="instance" value="'DogTagInHUDSpectator'; {}"/>
			<bind name="instance" value="'FogHornIndicator'; {}"/>
			<bind name="instance" value="'SubmarineHUD'; isSubmarineHudVisible ? {} : null"/>
			<bind name="instance" value="'AircraftHUD'; isAircraftHudVisible ? {} : null"/>
		</block>
		<bind name="instance" value="'ShipParamsTooltip'; {}"/>
	</block>
</ui>
